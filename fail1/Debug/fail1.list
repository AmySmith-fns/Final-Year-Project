
fail1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001a68  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ec  08001b28  08001b28  00011b28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  08001c14  08001c14  00011c14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08001c18  08001c18  00011c18  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000000  20000000  20000000  00011c1c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  20000000  08001c1c  00020000  2**2
                  ALLOC
  7 ._user_heap_stack 00000080  2000001c  08001c1c  0002001c  2**0
                  ALLOC
  8 .ARM.attributes 00000028  00000000  00000000  00011c1c  2**0
                  CONTENTS, READONLY
  9 .debug_info   000011d3  00000000  00000000  00011c44  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000003ba  00000000  00000000  00012e17  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 000000a0  00000000  00000000  000131d8  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00013278  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000006a3  00000000  00000000  00013308  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00000818  00000000  00000000  000139ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .comment      0000007c  00000000  00000000  000141c3  2**0
                  CONTENTS, READONLY
 16 .debug_frame  00000310  00000000  00000000  00014240  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .stabstr      0000003f  00000000  00000000  00014550  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08001b10 	.word	0x08001b10

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	08001b10 	.word	0x08001b10

08000108 <__aeabi_cdrcmple>:
 8000108:	4684      	mov	ip, r0
 800010a:	1c10      	adds	r0, r2, #0
 800010c:	4662      	mov	r2, ip
 800010e:	468c      	mov	ip, r1
 8000110:	1c19      	adds	r1, r3, #0
 8000112:	4663      	mov	r3, ip
 8000114:	e000      	b.n	8000118 <__aeabi_cdcmpeq>
 8000116:	46c0      	nop			; (mov r8, r8)

08000118 <__aeabi_cdcmpeq>:
 8000118:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800011a:	f000 f9b3 	bl	8000484 <__ledf2>
 800011e:	2800      	cmp	r0, #0
 8000120:	d401      	bmi.n	8000126 <__aeabi_cdcmpeq+0xe>
 8000122:	2100      	movs	r1, #0
 8000124:	42c8      	cmn	r0, r1
 8000126:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000128 <__aeabi_dcmpeq>:
 8000128:	b510      	push	{r4, lr}
 800012a:	f000 f90d 	bl	8000348 <__eqdf2>
 800012e:	4240      	negs	r0, r0
 8000130:	3001      	adds	r0, #1
 8000132:	bd10      	pop	{r4, pc}

08000134 <__aeabi_dcmplt>:
 8000134:	b510      	push	{r4, lr}
 8000136:	f000 f9a5 	bl	8000484 <__ledf2>
 800013a:	2800      	cmp	r0, #0
 800013c:	db01      	blt.n	8000142 <__aeabi_dcmplt+0xe>
 800013e:	2000      	movs	r0, #0
 8000140:	bd10      	pop	{r4, pc}
 8000142:	2001      	movs	r0, #1
 8000144:	bd10      	pop	{r4, pc}
 8000146:	46c0      	nop			; (mov r8, r8)

08000148 <__aeabi_dcmple>:
 8000148:	b510      	push	{r4, lr}
 800014a:	f000 f99b 	bl	8000484 <__ledf2>
 800014e:	2800      	cmp	r0, #0
 8000150:	dd01      	ble.n	8000156 <__aeabi_dcmple+0xe>
 8000152:	2000      	movs	r0, #0
 8000154:	bd10      	pop	{r4, pc}
 8000156:	2001      	movs	r0, #1
 8000158:	bd10      	pop	{r4, pc}
 800015a:	46c0      	nop			; (mov r8, r8)

0800015c <__aeabi_dcmpgt>:
 800015c:	b510      	push	{r4, lr}
 800015e:	f000 f92d 	bl	80003bc <__gedf2>
 8000162:	2800      	cmp	r0, #0
 8000164:	dc01      	bgt.n	800016a <__aeabi_dcmpgt+0xe>
 8000166:	2000      	movs	r0, #0
 8000168:	bd10      	pop	{r4, pc}
 800016a:	2001      	movs	r0, #1
 800016c:	bd10      	pop	{r4, pc}
 800016e:	46c0      	nop			; (mov r8, r8)

08000170 <__aeabi_dcmpge>:
 8000170:	b510      	push	{r4, lr}
 8000172:	f000 f923 	bl	80003bc <__gedf2>
 8000176:	2800      	cmp	r0, #0
 8000178:	da01      	bge.n	800017e <__aeabi_dcmpge+0xe>
 800017a:	2000      	movs	r0, #0
 800017c:	bd10      	pop	{r4, pc}
 800017e:	2001      	movs	r0, #1
 8000180:	bd10      	pop	{r4, pc}
 8000182:	46c0      	nop			; (mov r8, r8)

08000184 <__aeabi_cfrcmple>:
 8000184:	4684      	mov	ip, r0
 8000186:	1c08      	adds	r0, r1, #0
 8000188:	4661      	mov	r1, ip
 800018a:	e7ff      	b.n	800018c <__aeabi_cfcmpeq>

0800018c <__aeabi_cfcmpeq>:
 800018c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800018e:	f000 f899 	bl	80002c4 <__lesf2>
 8000192:	2800      	cmp	r0, #0
 8000194:	d401      	bmi.n	800019a <__aeabi_cfcmpeq+0xe>
 8000196:	2100      	movs	r1, #0
 8000198:	42c8      	cmn	r0, r1
 800019a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800019c <__aeabi_fcmpeq>:
 800019c:	b510      	push	{r4, lr}
 800019e:	f000 f82b 	bl	80001f8 <__eqsf2>
 80001a2:	4240      	negs	r0, r0
 80001a4:	3001      	adds	r0, #1
 80001a6:	bd10      	pop	{r4, pc}

080001a8 <__aeabi_fcmplt>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	f000 f88b 	bl	80002c4 <__lesf2>
 80001ae:	2800      	cmp	r0, #0
 80001b0:	db01      	blt.n	80001b6 <__aeabi_fcmplt+0xe>
 80001b2:	2000      	movs	r0, #0
 80001b4:	bd10      	pop	{r4, pc}
 80001b6:	2001      	movs	r0, #1
 80001b8:	bd10      	pop	{r4, pc}
 80001ba:	46c0      	nop			; (mov r8, r8)

080001bc <__aeabi_fcmple>:
 80001bc:	b510      	push	{r4, lr}
 80001be:	f000 f881 	bl	80002c4 <__lesf2>
 80001c2:	2800      	cmp	r0, #0
 80001c4:	dd01      	ble.n	80001ca <__aeabi_fcmple+0xe>
 80001c6:	2000      	movs	r0, #0
 80001c8:	bd10      	pop	{r4, pc}
 80001ca:	2001      	movs	r0, #1
 80001cc:	bd10      	pop	{r4, pc}
 80001ce:	46c0      	nop			; (mov r8, r8)

080001d0 <__aeabi_fcmpgt>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	f000 f837 	bl	8000244 <__gesf2>
 80001d6:	2800      	cmp	r0, #0
 80001d8:	dc01      	bgt.n	80001de <__aeabi_fcmpgt+0xe>
 80001da:	2000      	movs	r0, #0
 80001dc:	bd10      	pop	{r4, pc}
 80001de:	2001      	movs	r0, #1
 80001e0:	bd10      	pop	{r4, pc}
 80001e2:	46c0      	nop			; (mov r8, r8)

080001e4 <__aeabi_fcmpge>:
 80001e4:	b510      	push	{r4, lr}
 80001e6:	f000 f82d 	bl	8000244 <__gesf2>
 80001ea:	2800      	cmp	r0, #0
 80001ec:	da01      	bge.n	80001f2 <__aeabi_fcmpge+0xe>
 80001ee:	2000      	movs	r0, #0
 80001f0:	bd10      	pop	{r4, pc}
 80001f2:	2001      	movs	r0, #1
 80001f4:	bd10      	pop	{r4, pc}
 80001f6:	46c0      	nop			; (mov r8, r8)

080001f8 <__eqsf2>:
 80001f8:	b570      	push	{r4, r5, r6, lr}
 80001fa:	0042      	lsls	r2, r0, #1
 80001fc:	0245      	lsls	r5, r0, #9
 80001fe:	024e      	lsls	r6, r1, #9
 8000200:	004c      	lsls	r4, r1, #1
 8000202:	0fc3      	lsrs	r3, r0, #31
 8000204:	0a6d      	lsrs	r5, r5, #9
 8000206:	0e12      	lsrs	r2, r2, #24
 8000208:	0a76      	lsrs	r6, r6, #9
 800020a:	0e24      	lsrs	r4, r4, #24
 800020c:	0fc9      	lsrs	r1, r1, #31
 800020e:	2001      	movs	r0, #1
 8000210:	2aff      	cmp	r2, #255	; 0xff
 8000212:	d006      	beq.n	8000222 <__eqsf2+0x2a>
 8000214:	2cff      	cmp	r4, #255	; 0xff
 8000216:	d003      	beq.n	8000220 <__eqsf2+0x28>
 8000218:	42a2      	cmp	r2, r4
 800021a:	d101      	bne.n	8000220 <__eqsf2+0x28>
 800021c:	42b5      	cmp	r5, r6
 800021e:	d006      	beq.n	800022e <__eqsf2+0x36>
 8000220:	bd70      	pop	{r4, r5, r6, pc}
 8000222:	2d00      	cmp	r5, #0
 8000224:	d1fc      	bne.n	8000220 <__eqsf2+0x28>
 8000226:	2cff      	cmp	r4, #255	; 0xff
 8000228:	d1fa      	bne.n	8000220 <__eqsf2+0x28>
 800022a:	2e00      	cmp	r6, #0
 800022c:	d1f8      	bne.n	8000220 <__eqsf2+0x28>
 800022e:	428b      	cmp	r3, r1
 8000230:	d006      	beq.n	8000240 <__eqsf2+0x48>
 8000232:	2001      	movs	r0, #1
 8000234:	2a00      	cmp	r2, #0
 8000236:	d1f3      	bne.n	8000220 <__eqsf2+0x28>
 8000238:	0028      	movs	r0, r5
 800023a:	1e45      	subs	r5, r0, #1
 800023c:	41a8      	sbcs	r0, r5
 800023e:	e7ef      	b.n	8000220 <__eqsf2+0x28>
 8000240:	2000      	movs	r0, #0
 8000242:	e7ed      	b.n	8000220 <__eqsf2+0x28>

08000244 <__gesf2>:
 8000244:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000246:	0042      	lsls	r2, r0, #1
 8000248:	0245      	lsls	r5, r0, #9
 800024a:	024c      	lsls	r4, r1, #9
 800024c:	0fc3      	lsrs	r3, r0, #31
 800024e:	0048      	lsls	r0, r1, #1
 8000250:	0a6d      	lsrs	r5, r5, #9
 8000252:	0e12      	lsrs	r2, r2, #24
 8000254:	0a64      	lsrs	r4, r4, #9
 8000256:	0e00      	lsrs	r0, r0, #24
 8000258:	0fc9      	lsrs	r1, r1, #31
 800025a:	2aff      	cmp	r2, #255	; 0xff
 800025c:	d01e      	beq.n	800029c <__gesf2+0x58>
 800025e:	28ff      	cmp	r0, #255	; 0xff
 8000260:	d021      	beq.n	80002a6 <__gesf2+0x62>
 8000262:	2a00      	cmp	r2, #0
 8000264:	d10a      	bne.n	800027c <__gesf2+0x38>
 8000266:	426e      	negs	r6, r5
 8000268:	416e      	adcs	r6, r5
 800026a:	b2f6      	uxtb	r6, r6
 800026c:	2800      	cmp	r0, #0
 800026e:	d10f      	bne.n	8000290 <__gesf2+0x4c>
 8000270:	2c00      	cmp	r4, #0
 8000272:	d10d      	bne.n	8000290 <__gesf2+0x4c>
 8000274:	2000      	movs	r0, #0
 8000276:	2d00      	cmp	r5, #0
 8000278:	d009      	beq.n	800028e <__gesf2+0x4a>
 800027a:	e005      	b.n	8000288 <__gesf2+0x44>
 800027c:	2800      	cmp	r0, #0
 800027e:	d101      	bne.n	8000284 <__gesf2+0x40>
 8000280:	2c00      	cmp	r4, #0
 8000282:	d001      	beq.n	8000288 <__gesf2+0x44>
 8000284:	428b      	cmp	r3, r1
 8000286:	d011      	beq.n	80002ac <__gesf2+0x68>
 8000288:	2101      	movs	r1, #1
 800028a:	4258      	negs	r0, r3
 800028c:	4308      	orrs	r0, r1
 800028e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000290:	2e00      	cmp	r6, #0
 8000292:	d0f7      	beq.n	8000284 <__gesf2+0x40>
 8000294:	2001      	movs	r0, #1
 8000296:	3901      	subs	r1, #1
 8000298:	4308      	orrs	r0, r1
 800029a:	e7f8      	b.n	800028e <__gesf2+0x4a>
 800029c:	2d00      	cmp	r5, #0
 800029e:	d0de      	beq.n	800025e <__gesf2+0x1a>
 80002a0:	2002      	movs	r0, #2
 80002a2:	4240      	negs	r0, r0
 80002a4:	e7f3      	b.n	800028e <__gesf2+0x4a>
 80002a6:	2c00      	cmp	r4, #0
 80002a8:	d0db      	beq.n	8000262 <__gesf2+0x1e>
 80002aa:	e7f9      	b.n	80002a0 <__gesf2+0x5c>
 80002ac:	4282      	cmp	r2, r0
 80002ae:	dceb      	bgt.n	8000288 <__gesf2+0x44>
 80002b0:	db04      	blt.n	80002bc <__gesf2+0x78>
 80002b2:	42a5      	cmp	r5, r4
 80002b4:	d8e8      	bhi.n	8000288 <__gesf2+0x44>
 80002b6:	2000      	movs	r0, #0
 80002b8:	42a5      	cmp	r5, r4
 80002ba:	d2e8      	bcs.n	800028e <__gesf2+0x4a>
 80002bc:	2101      	movs	r1, #1
 80002be:	1e58      	subs	r0, r3, #1
 80002c0:	4308      	orrs	r0, r1
 80002c2:	e7e4      	b.n	800028e <__gesf2+0x4a>

080002c4 <__lesf2>:
 80002c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80002c6:	0042      	lsls	r2, r0, #1
 80002c8:	024d      	lsls	r5, r1, #9
 80002ca:	004c      	lsls	r4, r1, #1
 80002cc:	0246      	lsls	r6, r0, #9
 80002ce:	0a76      	lsrs	r6, r6, #9
 80002d0:	0e12      	lsrs	r2, r2, #24
 80002d2:	0fc3      	lsrs	r3, r0, #31
 80002d4:	0a6d      	lsrs	r5, r5, #9
 80002d6:	0e24      	lsrs	r4, r4, #24
 80002d8:	0fc9      	lsrs	r1, r1, #31
 80002da:	2aff      	cmp	r2, #255	; 0xff
 80002dc:	d016      	beq.n	800030c <__lesf2+0x48>
 80002de:	2cff      	cmp	r4, #255	; 0xff
 80002e0:	d018      	beq.n	8000314 <__lesf2+0x50>
 80002e2:	2a00      	cmp	r2, #0
 80002e4:	d10a      	bne.n	80002fc <__lesf2+0x38>
 80002e6:	4270      	negs	r0, r6
 80002e8:	4170      	adcs	r0, r6
 80002ea:	b2c0      	uxtb	r0, r0
 80002ec:	2c00      	cmp	r4, #0
 80002ee:	d015      	beq.n	800031c <__lesf2+0x58>
 80002f0:	2800      	cmp	r0, #0
 80002f2:	d005      	beq.n	8000300 <__lesf2+0x3c>
 80002f4:	2001      	movs	r0, #1
 80002f6:	3901      	subs	r1, #1
 80002f8:	4308      	orrs	r0, r1
 80002fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80002fc:	2c00      	cmp	r4, #0
 80002fe:	d013      	beq.n	8000328 <__lesf2+0x64>
 8000300:	4299      	cmp	r1, r3
 8000302:	d014      	beq.n	800032e <__lesf2+0x6a>
 8000304:	2001      	movs	r0, #1
 8000306:	425b      	negs	r3, r3
 8000308:	4318      	orrs	r0, r3
 800030a:	e7f6      	b.n	80002fa <__lesf2+0x36>
 800030c:	2002      	movs	r0, #2
 800030e:	2e00      	cmp	r6, #0
 8000310:	d1f3      	bne.n	80002fa <__lesf2+0x36>
 8000312:	e7e4      	b.n	80002de <__lesf2+0x1a>
 8000314:	2002      	movs	r0, #2
 8000316:	2d00      	cmp	r5, #0
 8000318:	d1ef      	bne.n	80002fa <__lesf2+0x36>
 800031a:	e7e2      	b.n	80002e2 <__lesf2+0x1e>
 800031c:	2d00      	cmp	r5, #0
 800031e:	d1e7      	bne.n	80002f0 <__lesf2+0x2c>
 8000320:	2000      	movs	r0, #0
 8000322:	2e00      	cmp	r6, #0
 8000324:	d0e9      	beq.n	80002fa <__lesf2+0x36>
 8000326:	e7ed      	b.n	8000304 <__lesf2+0x40>
 8000328:	2d00      	cmp	r5, #0
 800032a:	d1e9      	bne.n	8000300 <__lesf2+0x3c>
 800032c:	e7ea      	b.n	8000304 <__lesf2+0x40>
 800032e:	42a2      	cmp	r2, r4
 8000330:	dc06      	bgt.n	8000340 <__lesf2+0x7c>
 8000332:	dbdf      	blt.n	80002f4 <__lesf2+0x30>
 8000334:	42ae      	cmp	r6, r5
 8000336:	d803      	bhi.n	8000340 <__lesf2+0x7c>
 8000338:	2000      	movs	r0, #0
 800033a:	42ae      	cmp	r6, r5
 800033c:	d3da      	bcc.n	80002f4 <__lesf2+0x30>
 800033e:	e7dc      	b.n	80002fa <__lesf2+0x36>
 8000340:	2001      	movs	r0, #1
 8000342:	4249      	negs	r1, r1
 8000344:	4308      	orrs	r0, r1
 8000346:	e7d8      	b.n	80002fa <__lesf2+0x36>

08000348 <__eqdf2>:
 8000348:	b5f0      	push	{r4, r5, r6, r7, lr}
 800034a:	464f      	mov	r7, r9
 800034c:	4646      	mov	r6, r8
 800034e:	46d6      	mov	lr, sl
 8000350:	005c      	lsls	r4, r3, #1
 8000352:	b5c0      	push	{r6, r7, lr}
 8000354:	031f      	lsls	r7, r3, #12
 8000356:	0fdb      	lsrs	r3, r3, #31
 8000358:	469a      	mov	sl, r3
 800035a:	4b17      	ldr	r3, [pc, #92]	; (80003b8 <__eqdf2+0x70>)
 800035c:	030e      	lsls	r6, r1, #12
 800035e:	004d      	lsls	r5, r1, #1
 8000360:	4684      	mov	ip, r0
 8000362:	4680      	mov	r8, r0
 8000364:	0b36      	lsrs	r6, r6, #12
 8000366:	0d6d      	lsrs	r5, r5, #21
 8000368:	0fc9      	lsrs	r1, r1, #31
 800036a:	4691      	mov	r9, r2
 800036c:	0b3f      	lsrs	r7, r7, #12
 800036e:	0d64      	lsrs	r4, r4, #21
 8000370:	2001      	movs	r0, #1
 8000372:	429d      	cmp	r5, r3
 8000374:	d008      	beq.n	8000388 <__eqdf2+0x40>
 8000376:	429c      	cmp	r4, r3
 8000378:	d001      	beq.n	800037e <__eqdf2+0x36>
 800037a:	42a5      	cmp	r5, r4
 800037c:	d00b      	beq.n	8000396 <__eqdf2+0x4e>
 800037e:	bc1c      	pop	{r2, r3, r4}
 8000380:	4690      	mov	r8, r2
 8000382:	4699      	mov	r9, r3
 8000384:	46a2      	mov	sl, r4
 8000386:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000388:	4663      	mov	r3, ip
 800038a:	4333      	orrs	r3, r6
 800038c:	d1f7      	bne.n	800037e <__eqdf2+0x36>
 800038e:	42ac      	cmp	r4, r5
 8000390:	d1f5      	bne.n	800037e <__eqdf2+0x36>
 8000392:	433a      	orrs	r2, r7
 8000394:	d1f3      	bne.n	800037e <__eqdf2+0x36>
 8000396:	2001      	movs	r0, #1
 8000398:	42be      	cmp	r6, r7
 800039a:	d1f0      	bne.n	800037e <__eqdf2+0x36>
 800039c:	45c8      	cmp	r8, r9
 800039e:	d1ee      	bne.n	800037e <__eqdf2+0x36>
 80003a0:	4551      	cmp	r1, sl
 80003a2:	d007      	beq.n	80003b4 <__eqdf2+0x6c>
 80003a4:	2d00      	cmp	r5, #0
 80003a6:	d1ea      	bne.n	800037e <__eqdf2+0x36>
 80003a8:	4663      	mov	r3, ip
 80003aa:	431e      	orrs	r6, r3
 80003ac:	0030      	movs	r0, r6
 80003ae:	1e46      	subs	r6, r0, #1
 80003b0:	41b0      	sbcs	r0, r6
 80003b2:	e7e4      	b.n	800037e <__eqdf2+0x36>
 80003b4:	2000      	movs	r0, #0
 80003b6:	e7e2      	b.n	800037e <__eqdf2+0x36>
 80003b8:	000007ff 	.word	0x000007ff

080003bc <__gedf2>:
 80003bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80003be:	4645      	mov	r5, r8
 80003c0:	46de      	mov	lr, fp
 80003c2:	4657      	mov	r7, sl
 80003c4:	464e      	mov	r6, r9
 80003c6:	b5e0      	push	{r5, r6, r7, lr}
 80003c8:	031f      	lsls	r7, r3, #12
 80003ca:	0b3d      	lsrs	r5, r7, #12
 80003cc:	4f2c      	ldr	r7, [pc, #176]	; (8000480 <__gedf2+0xc4>)
 80003ce:	030e      	lsls	r6, r1, #12
 80003d0:	004c      	lsls	r4, r1, #1
 80003d2:	46ab      	mov	fp, r5
 80003d4:	005d      	lsls	r5, r3, #1
 80003d6:	4684      	mov	ip, r0
 80003d8:	0b36      	lsrs	r6, r6, #12
 80003da:	0d64      	lsrs	r4, r4, #21
 80003dc:	0fc9      	lsrs	r1, r1, #31
 80003de:	4690      	mov	r8, r2
 80003e0:	0d6d      	lsrs	r5, r5, #21
 80003e2:	0fdb      	lsrs	r3, r3, #31
 80003e4:	42bc      	cmp	r4, r7
 80003e6:	d02a      	beq.n	800043e <__gedf2+0x82>
 80003e8:	4f25      	ldr	r7, [pc, #148]	; (8000480 <__gedf2+0xc4>)
 80003ea:	42bd      	cmp	r5, r7
 80003ec:	d02d      	beq.n	800044a <__gedf2+0x8e>
 80003ee:	2c00      	cmp	r4, #0
 80003f0:	d10f      	bne.n	8000412 <__gedf2+0x56>
 80003f2:	4330      	orrs	r0, r6
 80003f4:	0007      	movs	r7, r0
 80003f6:	4681      	mov	r9, r0
 80003f8:	4278      	negs	r0, r7
 80003fa:	4178      	adcs	r0, r7
 80003fc:	b2c0      	uxtb	r0, r0
 80003fe:	2d00      	cmp	r5, #0
 8000400:	d117      	bne.n	8000432 <__gedf2+0x76>
 8000402:	465f      	mov	r7, fp
 8000404:	433a      	orrs	r2, r7
 8000406:	d114      	bne.n	8000432 <__gedf2+0x76>
 8000408:	464b      	mov	r3, r9
 800040a:	2000      	movs	r0, #0
 800040c:	2b00      	cmp	r3, #0
 800040e:	d00a      	beq.n	8000426 <__gedf2+0x6a>
 8000410:	e006      	b.n	8000420 <__gedf2+0x64>
 8000412:	2d00      	cmp	r5, #0
 8000414:	d102      	bne.n	800041c <__gedf2+0x60>
 8000416:	4658      	mov	r0, fp
 8000418:	4302      	orrs	r2, r0
 800041a:	d001      	beq.n	8000420 <__gedf2+0x64>
 800041c:	4299      	cmp	r1, r3
 800041e:	d018      	beq.n	8000452 <__gedf2+0x96>
 8000420:	4248      	negs	r0, r1
 8000422:	2101      	movs	r1, #1
 8000424:	4308      	orrs	r0, r1
 8000426:	bc3c      	pop	{r2, r3, r4, r5}
 8000428:	4690      	mov	r8, r2
 800042a:	4699      	mov	r9, r3
 800042c:	46a2      	mov	sl, r4
 800042e:	46ab      	mov	fp, r5
 8000430:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000432:	2800      	cmp	r0, #0
 8000434:	d0f2      	beq.n	800041c <__gedf2+0x60>
 8000436:	2001      	movs	r0, #1
 8000438:	3b01      	subs	r3, #1
 800043a:	4318      	orrs	r0, r3
 800043c:	e7f3      	b.n	8000426 <__gedf2+0x6a>
 800043e:	0037      	movs	r7, r6
 8000440:	4307      	orrs	r7, r0
 8000442:	d0d1      	beq.n	80003e8 <__gedf2+0x2c>
 8000444:	2002      	movs	r0, #2
 8000446:	4240      	negs	r0, r0
 8000448:	e7ed      	b.n	8000426 <__gedf2+0x6a>
 800044a:	465f      	mov	r7, fp
 800044c:	4317      	orrs	r7, r2
 800044e:	d0ce      	beq.n	80003ee <__gedf2+0x32>
 8000450:	e7f8      	b.n	8000444 <__gedf2+0x88>
 8000452:	42ac      	cmp	r4, r5
 8000454:	dce4      	bgt.n	8000420 <__gedf2+0x64>
 8000456:	da03      	bge.n	8000460 <__gedf2+0xa4>
 8000458:	1e48      	subs	r0, r1, #1
 800045a:	2101      	movs	r1, #1
 800045c:	4308      	orrs	r0, r1
 800045e:	e7e2      	b.n	8000426 <__gedf2+0x6a>
 8000460:	455e      	cmp	r6, fp
 8000462:	d8dd      	bhi.n	8000420 <__gedf2+0x64>
 8000464:	d006      	beq.n	8000474 <__gedf2+0xb8>
 8000466:	2000      	movs	r0, #0
 8000468:	455e      	cmp	r6, fp
 800046a:	d2dc      	bcs.n	8000426 <__gedf2+0x6a>
 800046c:	2301      	movs	r3, #1
 800046e:	1e48      	subs	r0, r1, #1
 8000470:	4318      	orrs	r0, r3
 8000472:	e7d8      	b.n	8000426 <__gedf2+0x6a>
 8000474:	45c4      	cmp	ip, r8
 8000476:	d8d3      	bhi.n	8000420 <__gedf2+0x64>
 8000478:	2000      	movs	r0, #0
 800047a:	45c4      	cmp	ip, r8
 800047c:	d3f6      	bcc.n	800046c <__gedf2+0xb0>
 800047e:	e7d2      	b.n	8000426 <__gedf2+0x6a>
 8000480:	000007ff 	.word	0x000007ff

08000484 <__ledf2>:
 8000484:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000486:	464e      	mov	r6, r9
 8000488:	4645      	mov	r5, r8
 800048a:	46de      	mov	lr, fp
 800048c:	4657      	mov	r7, sl
 800048e:	005c      	lsls	r4, r3, #1
 8000490:	b5e0      	push	{r5, r6, r7, lr}
 8000492:	031f      	lsls	r7, r3, #12
 8000494:	0fdb      	lsrs	r3, r3, #31
 8000496:	4699      	mov	r9, r3
 8000498:	4b2a      	ldr	r3, [pc, #168]	; (8000544 <__ledf2+0xc0>)
 800049a:	030e      	lsls	r6, r1, #12
 800049c:	004d      	lsls	r5, r1, #1
 800049e:	0fc9      	lsrs	r1, r1, #31
 80004a0:	4684      	mov	ip, r0
 80004a2:	0b36      	lsrs	r6, r6, #12
 80004a4:	0d6d      	lsrs	r5, r5, #21
 80004a6:	468b      	mov	fp, r1
 80004a8:	4690      	mov	r8, r2
 80004aa:	0b3f      	lsrs	r7, r7, #12
 80004ac:	0d64      	lsrs	r4, r4, #21
 80004ae:	429d      	cmp	r5, r3
 80004b0:	d020      	beq.n	80004f4 <__ledf2+0x70>
 80004b2:	4b24      	ldr	r3, [pc, #144]	; (8000544 <__ledf2+0xc0>)
 80004b4:	429c      	cmp	r4, r3
 80004b6:	d022      	beq.n	80004fe <__ledf2+0x7a>
 80004b8:	2d00      	cmp	r5, #0
 80004ba:	d112      	bne.n	80004e2 <__ledf2+0x5e>
 80004bc:	4330      	orrs	r0, r6
 80004be:	4243      	negs	r3, r0
 80004c0:	4143      	adcs	r3, r0
 80004c2:	b2db      	uxtb	r3, r3
 80004c4:	2c00      	cmp	r4, #0
 80004c6:	d01f      	beq.n	8000508 <__ledf2+0x84>
 80004c8:	2b00      	cmp	r3, #0
 80004ca:	d00c      	beq.n	80004e6 <__ledf2+0x62>
 80004cc:	464b      	mov	r3, r9
 80004ce:	2001      	movs	r0, #1
 80004d0:	3b01      	subs	r3, #1
 80004d2:	4303      	orrs	r3, r0
 80004d4:	0018      	movs	r0, r3
 80004d6:	bc3c      	pop	{r2, r3, r4, r5}
 80004d8:	4690      	mov	r8, r2
 80004da:	4699      	mov	r9, r3
 80004dc:	46a2      	mov	sl, r4
 80004de:	46ab      	mov	fp, r5
 80004e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80004e2:	2c00      	cmp	r4, #0
 80004e4:	d016      	beq.n	8000514 <__ledf2+0x90>
 80004e6:	45cb      	cmp	fp, r9
 80004e8:	d017      	beq.n	800051a <__ledf2+0x96>
 80004ea:	465b      	mov	r3, fp
 80004ec:	4259      	negs	r1, r3
 80004ee:	2301      	movs	r3, #1
 80004f0:	430b      	orrs	r3, r1
 80004f2:	e7ef      	b.n	80004d4 <__ledf2+0x50>
 80004f4:	0031      	movs	r1, r6
 80004f6:	2302      	movs	r3, #2
 80004f8:	4301      	orrs	r1, r0
 80004fa:	d1eb      	bne.n	80004d4 <__ledf2+0x50>
 80004fc:	e7d9      	b.n	80004b2 <__ledf2+0x2e>
 80004fe:	0039      	movs	r1, r7
 8000500:	2302      	movs	r3, #2
 8000502:	4311      	orrs	r1, r2
 8000504:	d1e6      	bne.n	80004d4 <__ledf2+0x50>
 8000506:	e7d7      	b.n	80004b8 <__ledf2+0x34>
 8000508:	433a      	orrs	r2, r7
 800050a:	d1dd      	bne.n	80004c8 <__ledf2+0x44>
 800050c:	2300      	movs	r3, #0
 800050e:	2800      	cmp	r0, #0
 8000510:	d0e0      	beq.n	80004d4 <__ledf2+0x50>
 8000512:	e7ea      	b.n	80004ea <__ledf2+0x66>
 8000514:	433a      	orrs	r2, r7
 8000516:	d1e6      	bne.n	80004e6 <__ledf2+0x62>
 8000518:	e7e7      	b.n	80004ea <__ledf2+0x66>
 800051a:	42a5      	cmp	r5, r4
 800051c:	dce5      	bgt.n	80004ea <__ledf2+0x66>
 800051e:	db05      	blt.n	800052c <__ledf2+0xa8>
 8000520:	42be      	cmp	r6, r7
 8000522:	d8e2      	bhi.n	80004ea <__ledf2+0x66>
 8000524:	d007      	beq.n	8000536 <__ledf2+0xb2>
 8000526:	2300      	movs	r3, #0
 8000528:	42be      	cmp	r6, r7
 800052a:	d2d3      	bcs.n	80004d4 <__ledf2+0x50>
 800052c:	4659      	mov	r1, fp
 800052e:	2301      	movs	r3, #1
 8000530:	3901      	subs	r1, #1
 8000532:	430b      	orrs	r3, r1
 8000534:	e7ce      	b.n	80004d4 <__ledf2+0x50>
 8000536:	45c4      	cmp	ip, r8
 8000538:	d8d7      	bhi.n	80004ea <__ledf2+0x66>
 800053a:	2300      	movs	r3, #0
 800053c:	45c4      	cmp	ip, r8
 800053e:	d3f5      	bcc.n	800052c <__ledf2+0xa8>
 8000540:	e7c8      	b.n	80004d4 <__ledf2+0x50>
 8000542:	46c0      	nop			; (mov r8, r8)
 8000544:	000007ff 	.word	0x000007ff

08000548 <__aeabi_f2d>:
 8000548:	0041      	lsls	r1, r0, #1
 800054a:	0e09      	lsrs	r1, r1, #24
 800054c:	1c4b      	adds	r3, r1, #1
 800054e:	b570      	push	{r4, r5, r6, lr}
 8000550:	b2db      	uxtb	r3, r3
 8000552:	0246      	lsls	r6, r0, #9
 8000554:	0a75      	lsrs	r5, r6, #9
 8000556:	0fc4      	lsrs	r4, r0, #31
 8000558:	2b01      	cmp	r3, #1
 800055a:	dd14      	ble.n	8000586 <__aeabi_f2d+0x3e>
 800055c:	23e0      	movs	r3, #224	; 0xe0
 800055e:	009b      	lsls	r3, r3, #2
 8000560:	076d      	lsls	r5, r5, #29
 8000562:	0b36      	lsrs	r6, r6, #12
 8000564:	18cb      	adds	r3, r1, r3
 8000566:	2100      	movs	r1, #0
 8000568:	0d0a      	lsrs	r2, r1, #20
 800056a:	0028      	movs	r0, r5
 800056c:	0512      	lsls	r2, r2, #20
 800056e:	4d1c      	ldr	r5, [pc, #112]	; (80005e0 <__aeabi_f2d+0x98>)
 8000570:	4332      	orrs	r2, r6
 8000572:	055b      	lsls	r3, r3, #21
 8000574:	402a      	ands	r2, r5
 8000576:	085b      	lsrs	r3, r3, #1
 8000578:	4313      	orrs	r3, r2
 800057a:	005b      	lsls	r3, r3, #1
 800057c:	07e4      	lsls	r4, r4, #31
 800057e:	085b      	lsrs	r3, r3, #1
 8000580:	4323      	orrs	r3, r4
 8000582:	0019      	movs	r1, r3
 8000584:	bd70      	pop	{r4, r5, r6, pc}
 8000586:	2900      	cmp	r1, #0
 8000588:	d114      	bne.n	80005b4 <__aeabi_f2d+0x6c>
 800058a:	2d00      	cmp	r5, #0
 800058c:	d01e      	beq.n	80005cc <__aeabi_f2d+0x84>
 800058e:	0028      	movs	r0, r5
 8000590:	f000 f82c 	bl	80005ec <__clzsi2>
 8000594:	280a      	cmp	r0, #10
 8000596:	dc1c      	bgt.n	80005d2 <__aeabi_f2d+0x8a>
 8000598:	230b      	movs	r3, #11
 800059a:	002a      	movs	r2, r5
 800059c:	1a1b      	subs	r3, r3, r0
 800059e:	40da      	lsrs	r2, r3
 80005a0:	0003      	movs	r3, r0
 80005a2:	3315      	adds	r3, #21
 80005a4:	409d      	lsls	r5, r3
 80005a6:	4b0f      	ldr	r3, [pc, #60]	; (80005e4 <__aeabi_f2d+0x9c>)
 80005a8:	0312      	lsls	r2, r2, #12
 80005aa:	1a1b      	subs	r3, r3, r0
 80005ac:	055b      	lsls	r3, r3, #21
 80005ae:	0b16      	lsrs	r6, r2, #12
 80005b0:	0d5b      	lsrs	r3, r3, #21
 80005b2:	e7d8      	b.n	8000566 <__aeabi_f2d+0x1e>
 80005b4:	2d00      	cmp	r5, #0
 80005b6:	d006      	beq.n	80005c6 <__aeabi_f2d+0x7e>
 80005b8:	0b32      	lsrs	r2, r6, #12
 80005ba:	2680      	movs	r6, #128	; 0x80
 80005bc:	0336      	lsls	r6, r6, #12
 80005be:	076d      	lsls	r5, r5, #29
 80005c0:	4316      	orrs	r6, r2
 80005c2:	4b09      	ldr	r3, [pc, #36]	; (80005e8 <__aeabi_f2d+0xa0>)
 80005c4:	e7cf      	b.n	8000566 <__aeabi_f2d+0x1e>
 80005c6:	4b08      	ldr	r3, [pc, #32]	; (80005e8 <__aeabi_f2d+0xa0>)
 80005c8:	2600      	movs	r6, #0
 80005ca:	e7cc      	b.n	8000566 <__aeabi_f2d+0x1e>
 80005cc:	2300      	movs	r3, #0
 80005ce:	2600      	movs	r6, #0
 80005d0:	e7c9      	b.n	8000566 <__aeabi_f2d+0x1e>
 80005d2:	0003      	movs	r3, r0
 80005d4:	002a      	movs	r2, r5
 80005d6:	3b0b      	subs	r3, #11
 80005d8:	409a      	lsls	r2, r3
 80005da:	2500      	movs	r5, #0
 80005dc:	e7e3      	b.n	80005a6 <__aeabi_f2d+0x5e>
 80005de:	46c0      	nop			; (mov r8, r8)
 80005e0:	800fffff 	.word	0x800fffff
 80005e4:	00000389 	.word	0x00000389
 80005e8:	000007ff 	.word	0x000007ff

080005ec <__clzsi2>:
 80005ec:	211c      	movs	r1, #28
 80005ee:	2301      	movs	r3, #1
 80005f0:	041b      	lsls	r3, r3, #16
 80005f2:	4298      	cmp	r0, r3
 80005f4:	d301      	bcc.n	80005fa <__clzsi2+0xe>
 80005f6:	0c00      	lsrs	r0, r0, #16
 80005f8:	3910      	subs	r1, #16
 80005fa:	0a1b      	lsrs	r3, r3, #8
 80005fc:	4298      	cmp	r0, r3
 80005fe:	d301      	bcc.n	8000604 <__clzsi2+0x18>
 8000600:	0a00      	lsrs	r0, r0, #8
 8000602:	3908      	subs	r1, #8
 8000604:	091b      	lsrs	r3, r3, #4
 8000606:	4298      	cmp	r0, r3
 8000608:	d301      	bcc.n	800060e <__clzsi2+0x22>
 800060a:	0900      	lsrs	r0, r0, #4
 800060c:	3904      	subs	r1, #4
 800060e:	a202      	add	r2, pc, #8	; (adr r2, 8000618 <__clzsi2+0x2c>)
 8000610:	5c10      	ldrb	r0, [r2, r0]
 8000612:	1840      	adds	r0, r0, r1
 8000614:	4770      	bx	lr
 8000616:	46c0      	nop			; (mov r8, r8)
 8000618:	02020304 	.word	0x02020304
 800061c:	01010101 	.word	0x01010101
	...

08000628 <sonar_predict_tree_0>:
        sonar_nodes,	  
        1,
        sonar_tree_roots,
    };

static inline int32_t sonar_predict_tree_0(const float *features, int32_t features_length) {
 8000628:	b580      	push	{r7, lr}
 800062a:	b082      	sub	sp, #8
 800062c:	af00      	add	r7, sp, #0
 800062e:	6078      	str	r0, [r7, #4]
 8000630:	6039      	str	r1, [r7, #0]
          if (features[0] < 0.5) {
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	681b      	ldr	r3, [r3, #0]
 8000636:	21fc      	movs	r1, #252	; 0xfc
 8000638:	0589      	lsls	r1, r1, #22
 800063a:	1c18      	adds	r0, r3, #0
 800063c:	f7ff fdb4 	bl	80001a8 <__aeabi_fcmplt>
 8000640:	1e03      	subs	r3, r0, #0
 8000642:	d002      	beq.n	800064a <sonar_predict_tree_0+0x22>
              return 1;
 8000644:	2301      	movs	r3, #1
 8000646:	f000 fd75 	bl	8001134 <sonar_predict_tree_0+0xb0c>
          } else {
              if (features[9] < 6.5) {
 800064a:	687b      	ldr	r3, [r7, #4]
 800064c:	3324      	adds	r3, #36	; 0x24
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	49b9      	ldr	r1, [pc, #740]	; (8000938 <sonar_predict_tree_0+0x310>)
 8000652:	1c18      	adds	r0, r3, #0
 8000654:	f7ff fda8 	bl	80001a8 <__aeabi_fcmplt>
 8000658:	1e03      	subs	r3, r0, #0
 800065a:	d100      	bne.n	800065e <sonar_predict_tree_0+0x36>
 800065c:	e0c6      	b.n	80007ec <sonar_predict_tree_0+0x1c4>
                  if (features[9] < 4.5) {
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	3324      	adds	r3, #36	; 0x24
 8000662:	681b      	ldr	r3, [r3, #0]
 8000664:	49b5      	ldr	r1, [pc, #724]	; (800093c <sonar_predict_tree_0+0x314>)
 8000666:	1c18      	adds	r0, r3, #0
 8000668:	f7ff fd9e 	bl	80001a8 <__aeabi_fcmplt>
 800066c:	1e03      	subs	r3, r0, #0
 800066e:	d100      	bne.n	8000672 <sonar_predict_tree_0+0x4a>
 8000670:	e094      	b.n	800079c <sonar_predict_tree_0+0x174>
                      if (features[2] < 0.5) {
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	3308      	adds	r3, #8
 8000676:	681b      	ldr	r3, [r3, #0]
 8000678:	21fc      	movs	r1, #252	; 0xfc
 800067a:	0589      	lsls	r1, r1, #22
 800067c:	1c18      	adds	r0, r3, #0
 800067e:	f7ff fd93 	bl	80001a8 <__aeabi_fcmplt>
 8000682:	1e03      	subs	r3, r0, #0
 8000684:	d00e      	beq.n	80006a4 <sonar_predict_tree_0+0x7c>
                          if (features[9] < 2.5) {
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	3324      	adds	r3, #36	; 0x24
 800068a:	681b      	ldr	r3, [r3, #0]
 800068c:	49ac      	ldr	r1, [pc, #688]	; (8000940 <sonar_predict_tree_0+0x318>)
 800068e:	1c18      	adds	r0, r3, #0
 8000690:	f7ff fd8a 	bl	80001a8 <__aeabi_fcmplt>
 8000694:	1e03      	subs	r3, r0, #0
 8000696:	d002      	beq.n	800069e <sonar_predict_tree_0+0x76>
                              return 0;
 8000698:	2300      	movs	r3, #0
 800069a:	f000 fd4b 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                          } else {
                              return 1;
 800069e:	2301      	movs	r3, #1
 80006a0:	f000 fd48 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                          }
                      } else {
                          if (features[10] < 0.002099999925121665) {
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	3328      	adds	r3, #40	; 0x28
 80006a8:	681b      	ldr	r3, [r3, #0]
 80006aa:	49a6      	ldr	r1, [pc, #664]	; (8000944 <sonar_predict_tree_0+0x31c>)
 80006ac:	1c18      	adds	r0, r3, #0
 80006ae:	f7ff fd7b 	bl	80001a8 <__aeabi_fcmplt>
 80006b2:	1e03      	subs	r3, r0, #0
 80006b4:	d002      	beq.n	80006bc <sonar_predict_tree_0+0x94>
                              return 1;
 80006b6:	2301      	movs	r3, #1
 80006b8:	f000 fd3c 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                          } else {
                              if (features[10] < 2.127540111541748) {
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	3328      	adds	r3, #40	; 0x28
 80006c0:	681b      	ldr	r3, [r3, #0]
 80006c2:	49a1      	ldr	r1, [pc, #644]	; (8000948 <sonar_predict_tree_0+0x320>)
 80006c4:	1c18      	adds	r0, r3, #0
 80006c6:	f7ff fd6f 	bl	80001a8 <__aeabi_fcmplt>
 80006ca:	1e03      	subs	r3, r0, #0
 80006cc:	d063      	beq.n	8000796 <sonar_predict_tree_0+0x16e>
                                  if (features[8] < 196.0) {
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	3320      	adds	r3, #32
 80006d2:	681b      	ldr	r3, [r3, #0]
 80006d4:	499d      	ldr	r1, [pc, #628]	; (800094c <sonar_predict_tree_0+0x324>)
 80006d6:	1c18      	adds	r0, r3, #0
 80006d8:	f7ff fd66 	bl	80001a8 <__aeabi_fcmplt>
 80006dc:	1e03      	subs	r3, r0, #0
 80006de:	d057      	beq.n	8000790 <sonar_predict_tree_0+0x168>
                                      if (features[10] < 0.07230500131845474) {
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	3328      	adds	r3, #40	; 0x28
 80006e4:	681b      	ldr	r3, [r3, #0]
 80006e6:	499a      	ldr	r1, [pc, #616]	; (8000950 <sonar_predict_tree_0+0x328>)
 80006e8:	1c18      	adds	r0, r3, #0
 80006ea:	f7ff fd5d 	bl	80001a8 <__aeabi_fcmplt>
 80006ee:	1e03      	subs	r3, r0, #0
 80006f0:	d032      	beq.n	8000758 <sonar_predict_tree_0+0x130>
                                          if (features[4] < 69.5) {
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	3310      	adds	r3, #16
 80006f6:	681b      	ldr	r3, [r3, #0]
 80006f8:	4996      	ldr	r1, [pc, #600]	; (8000954 <sonar_predict_tree_0+0x32c>)
 80006fa:	1c18      	adds	r0, r3, #0
 80006fc:	f7ff fd54 	bl	80001a8 <__aeabi_fcmplt>
 8000700:	1e03      	subs	r3, r0, #0
 8000702:	d01a      	beq.n	800073a <sonar_predict_tree_0+0x112>
                                              if (features[4] < 24.5) {
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	3310      	adds	r3, #16
 8000708:	681b      	ldr	r3, [r3, #0]
 800070a:	4993      	ldr	r1, [pc, #588]	; (8000958 <sonar_predict_tree_0+0x330>)
 800070c:	1c18      	adds	r0, r3, #0
 800070e:	f7ff fd4b 	bl	80001a8 <__aeabi_fcmplt>
 8000712:	1e03      	subs	r3, r0, #0
 8000714:	d002      	beq.n	800071c <sonar_predict_tree_0+0xf4>
                                                  return 0;
 8000716:	2300      	movs	r3, #0
 8000718:	f000 fd0c 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                              } else {
                                                  if (features[5] < 13.0) {
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	3314      	adds	r3, #20
 8000720:	681b      	ldr	r3, [r3, #0]
 8000722:	498e      	ldr	r1, [pc, #568]	; (800095c <sonar_predict_tree_0+0x334>)
 8000724:	1c18      	adds	r0, r3, #0
 8000726:	f7ff fd3f 	bl	80001a8 <__aeabi_fcmplt>
 800072a:	1e03      	subs	r3, r0, #0
 800072c:	d002      	beq.n	8000734 <sonar_predict_tree_0+0x10c>
                                                      return 1;
 800072e:	2301      	movs	r3, #1
 8000730:	f000 fd00 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                                  } else {
                                                      return 0;
 8000734:	2300      	movs	r3, #0
 8000736:	f000 fcfd 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                                  }
                                              }
                                          } else {
                                              if (features[5] < 35.5) {
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	3314      	adds	r3, #20
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	4987      	ldr	r1, [pc, #540]	; (8000960 <sonar_predict_tree_0+0x338>)
 8000742:	1c18      	adds	r0, r3, #0
 8000744:	f7ff fd30 	bl	80001a8 <__aeabi_fcmplt>
 8000748:	1e03      	subs	r3, r0, #0
 800074a:	d002      	beq.n	8000752 <sonar_predict_tree_0+0x12a>
                                                  return 1;
 800074c:	2301      	movs	r3, #1
 800074e:	f000 fcf1 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                              } else {
                                                  return 0;
 8000752:	2300      	movs	r3, #0
 8000754:	f000 fcee 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                              }
                                          }
                                      } else {
                                          if (features[9] < 1.5) {
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	3324      	adds	r3, #36	; 0x24
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	21ff      	movs	r1, #255	; 0xff
 8000760:	0589      	lsls	r1, r1, #22
 8000762:	1c18      	adds	r0, r3, #0
 8000764:	f7ff fd20 	bl	80001a8 <__aeabi_fcmplt>
 8000768:	1e03      	subs	r3, r0, #0
 800076a:	d002      	beq.n	8000772 <sonar_predict_tree_0+0x14a>
                                              return 0;
 800076c:	2300      	movs	r3, #0
 800076e:	f000 fce1 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                          } else {
                                              if (features[2] < 8.5) {
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	3308      	adds	r3, #8
 8000776:	681b      	ldr	r3, [r3, #0]
 8000778:	497a      	ldr	r1, [pc, #488]	; (8000964 <sonar_predict_tree_0+0x33c>)
 800077a:	1c18      	adds	r0, r3, #0
 800077c:	f7ff fd14 	bl	80001a8 <__aeabi_fcmplt>
 8000780:	1e03      	subs	r3, r0, #0
 8000782:	d002      	beq.n	800078a <sonar_predict_tree_0+0x162>
                                                  return 1;
 8000784:	2301      	movs	r3, #1
 8000786:	f000 fcd5 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                              } else {
                                                  return 0;
 800078a:	2300      	movs	r3, #0
 800078c:	f000 fcd2 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                              }
                                          }
                                      }
                                  } else {
                                      return 0;
 8000790:	2300      	movs	r3, #0
 8000792:	f000 fccf 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                  }
                              } else {
                                  return 0;
 8000796:	2300      	movs	r3, #0
 8000798:	f000 fccc 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                              }
                          }
                      }
                  } else {
                      if (features[2] < 8.5) {
 800079c:	687b      	ldr	r3, [r7, #4]
 800079e:	3308      	adds	r3, #8
 80007a0:	681b      	ldr	r3, [r3, #0]
 80007a2:	4970      	ldr	r1, [pc, #448]	; (8000964 <sonar_predict_tree_0+0x33c>)
 80007a4:	1c18      	adds	r0, r3, #0
 80007a6:	f7ff fcff 	bl	80001a8 <__aeabi_fcmplt>
 80007aa:	1e03      	subs	r3, r0, #0
 80007ac:	d00e      	beq.n	80007cc <sonar_predict_tree_0+0x1a4>
                          if (features[8] < 3.0) {
 80007ae:	687b      	ldr	r3, [r7, #4]
 80007b0:	3320      	adds	r3, #32
 80007b2:	681b      	ldr	r3, [r3, #0]
 80007b4:	496c      	ldr	r1, [pc, #432]	; (8000968 <sonar_predict_tree_0+0x340>)
 80007b6:	1c18      	adds	r0, r3, #0
 80007b8:	f7ff fcf6 	bl	80001a8 <__aeabi_fcmplt>
 80007bc:	1e03      	subs	r3, r0, #0
 80007be:	d002      	beq.n	80007c6 <sonar_predict_tree_0+0x19e>
                              return 1;
 80007c0:	2301      	movs	r3, #1
 80007c2:	f000 fcb7 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                          } else {
                              return 0;
 80007c6:	2300      	movs	r3, #0
 80007c8:	f000 fcb4 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                          }
                      } else {
                          if (features[4] < 2.0) {
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	3310      	adds	r3, #16
 80007d0:	681b      	ldr	r3, [r3, #0]
 80007d2:	2180      	movs	r1, #128	; 0x80
 80007d4:	05c9      	lsls	r1, r1, #23
 80007d6:	1c18      	adds	r0, r3, #0
 80007d8:	f7ff fce6 	bl	80001a8 <__aeabi_fcmplt>
 80007dc:	1e03      	subs	r3, r0, #0
 80007de:	d002      	beq.n	80007e6 <sonar_predict_tree_0+0x1be>
                              return 0;
 80007e0:	2300      	movs	r3, #0
 80007e2:	f000 fca7 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                          } else {
                              return 1;
 80007e6:	2301      	movs	r3, #1
 80007e8:	f000 fca4 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                          }
                      }
                  }
              } else {
                  if (features[1] < 2.0) {
 80007ec:	687b      	ldr	r3, [r7, #4]
 80007ee:	3304      	adds	r3, #4
 80007f0:	681b      	ldr	r3, [r3, #0]
 80007f2:	2180      	movs	r1, #128	; 0x80
 80007f4:	05c9      	lsls	r1, r1, #23
 80007f6:	1c18      	adds	r0, r3, #0
 80007f8:	f7ff fcd6 	bl	80001a8 <__aeabi_fcmplt>
 80007fc:	1e03      	subs	r3, r0, #0
 80007fe:	d101      	bne.n	8000804 <sonar_predict_tree_0+0x1dc>
 8000800:	f000 fc5c 	bl	80010bc <sonar_predict_tree_0+0xa94>
                      if (features[5] < 0.5) {
 8000804:	687b      	ldr	r3, [r7, #4]
 8000806:	3314      	adds	r3, #20
 8000808:	681b      	ldr	r3, [r3, #0]
 800080a:	21fc      	movs	r1, #252	; 0xfc
 800080c:	0589      	lsls	r1, r1, #22
 800080e:	1c18      	adds	r0, r3, #0
 8000810:	f7ff fcca 	bl	80001a8 <__aeabi_fcmplt>
 8000814:	1e03      	subs	r3, r0, #0
 8000816:	d046      	beq.n	80008a6 <sonar_predict_tree_0+0x27e>
                          if (features[10] < 0.10669000074267387) {
 8000818:	687b      	ldr	r3, [r7, #4]
 800081a:	3328      	adds	r3, #40	; 0x28
 800081c:	681b      	ldr	r3, [r3, #0]
 800081e:	1c18      	adds	r0, r3, #0
 8000820:	f7ff fe92 	bl	8000548 <__aeabi_f2d>
 8000824:	22c0      	movs	r2, #192	; 0xc0
 8000826:	0592      	lsls	r2, r2, #22
 8000828:	4b50      	ldr	r3, [pc, #320]	; (800096c <sonar_predict_tree_0+0x344>)
 800082a:	f7ff fc83 	bl	8000134 <__aeabi_dcmplt>
 800082e:	1e03      	subs	r3, r0, #0
 8000830:	d00e      	beq.n	8000850 <sonar_predict_tree_0+0x228>
                              if (features[9] < 12.0) {
 8000832:	687b      	ldr	r3, [r7, #4]
 8000834:	3324      	adds	r3, #36	; 0x24
 8000836:	681b      	ldr	r3, [r3, #0]
 8000838:	494d      	ldr	r1, [pc, #308]	; (8000970 <sonar_predict_tree_0+0x348>)
 800083a:	1c18      	adds	r0, r3, #0
 800083c:	f7ff fcb4 	bl	80001a8 <__aeabi_fcmplt>
 8000840:	1e03      	subs	r3, r0, #0
 8000842:	d002      	beq.n	800084a <sonar_predict_tree_0+0x222>
                                  return 0;
 8000844:	2300      	movs	r3, #0
 8000846:	f000 fc75 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                              } else {
                                  return 1;
 800084a:	2301      	movs	r3, #1
 800084c:	f000 fc72 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                              }
                          } else {
                              if (features[9] < 8.5) {
 8000850:	687b      	ldr	r3, [r7, #4]
 8000852:	3324      	adds	r3, #36	; 0x24
 8000854:	681b      	ldr	r3, [r3, #0]
 8000856:	4943      	ldr	r1, [pc, #268]	; (8000964 <sonar_predict_tree_0+0x33c>)
 8000858:	1c18      	adds	r0, r3, #0
 800085a:	f7ff fca5 	bl	80001a8 <__aeabi_fcmplt>
 800085e:	1e03      	subs	r3, r0, #0
 8000860:	d01e      	beq.n	80008a0 <sonar_predict_tree_0+0x278>
                                  if (features[10] < 0.5677450001239777) {
 8000862:	687b      	ldr	r3, [r7, #4]
 8000864:	3328      	adds	r3, #40	; 0x28
 8000866:	681b      	ldr	r3, [r3, #0]
 8000868:	1c18      	adds	r0, r3, #0
 800086a:	f7ff fe6d 	bl	8000548 <__aeabi_f2d>
 800086e:	2290      	movs	r2, #144	; 0x90
 8000870:	0612      	lsls	r2, r2, #24
 8000872:	4b40      	ldr	r3, [pc, #256]	; (8000974 <sonar_predict_tree_0+0x34c>)
 8000874:	f7ff fc5e 	bl	8000134 <__aeabi_dcmplt>
 8000878:	1e03      	subs	r3, r0, #0
 800087a:	d00e      	beq.n	800089a <sonar_predict_tree_0+0x272>
                                      if (features[2] < 9.5) {
 800087c:	687b      	ldr	r3, [r7, #4]
 800087e:	3308      	adds	r3, #8
 8000880:	681b      	ldr	r3, [r3, #0]
 8000882:	493d      	ldr	r1, [pc, #244]	; (8000978 <sonar_predict_tree_0+0x350>)
 8000884:	1c18      	adds	r0, r3, #0
 8000886:	f7ff fc8f 	bl	80001a8 <__aeabi_fcmplt>
 800088a:	1e03      	subs	r3, r0, #0
 800088c:	d002      	beq.n	8000894 <sonar_predict_tree_0+0x26c>
                                          return 1;
 800088e:	2301      	movs	r3, #1
 8000890:	f000 fc50 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                      } else {
                                          return 0;
 8000894:	2300      	movs	r3, #0
 8000896:	f000 fc4d 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                      }
                                  } else {
                                      return 1;
 800089a:	2301      	movs	r3, #1
 800089c:	f000 fc4a 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                  }
                              } else {
                                  return 1;
 80008a0:	2301      	movs	r3, #1
 80008a2:	f000 fc47 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                              }
                          }
                      } else {
                          if (features[10] < 2.30007004737854) {
 80008a6:	687b      	ldr	r3, [r7, #4]
 80008a8:	3328      	adds	r3, #40	; 0x28
 80008aa:	681b      	ldr	r3, [r3, #0]
 80008ac:	4933      	ldr	r1, [pc, #204]	; (800097c <sonar_predict_tree_0+0x354>)
 80008ae:	1c18      	adds	r0, r3, #0
 80008b0:	f7ff fc7a 	bl	80001a8 <__aeabi_fcmplt>
 80008b4:	1e03      	subs	r3, r0, #0
 80008b6:	d100      	bne.n	80008ba <sonar_predict_tree_0+0x292>
 80008b8:	e2c6      	b.n	8000e48 <sonar_predict_tree_0+0x820>
                              if (features[9] < 129.5) {
 80008ba:	687b      	ldr	r3, [r7, #4]
 80008bc:	3324      	adds	r3, #36	; 0x24
 80008be:	681b      	ldr	r3, [r3, #0]
 80008c0:	492f      	ldr	r1, [pc, #188]	; (8000980 <sonar_predict_tree_0+0x358>)
 80008c2:	1c18      	adds	r0, r3, #0
 80008c4:	f7ff fc70 	bl	80001a8 <__aeabi_fcmplt>
 80008c8:	1e03      	subs	r3, r0, #0
 80008ca:	d100      	bne.n	80008ce <sonar_predict_tree_0+0x2a6>
 80008cc:	e260      	b.n	8000d90 <sonar_predict_tree_0+0x768>
                                  if (features[10] < 1.1470150351524353) {
 80008ce:	687b      	ldr	r3, [r7, #4]
 80008d0:	3328      	adds	r3, #40	; 0x28
 80008d2:	681b      	ldr	r3, [r3, #0]
 80008d4:	1c18      	adds	r0, r3, #0
 80008d6:	f7ff fe37 	bl	8000548 <__aeabi_f2d>
 80008da:	22e0      	movs	r2, #224	; 0xe0
 80008dc:	05d2      	lsls	r2, r2, #23
 80008de:	4b29      	ldr	r3, [pc, #164]	; (8000984 <sonar_predict_tree_0+0x35c>)
 80008e0:	f7ff fc28 	bl	8000134 <__aeabi_dcmplt>
 80008e4:	1e03      	subs	r3, r0, #0
 80008e6:	d053      	beq.n	8000990 <sonar_predict_tree_0+0x368>
                                      if (features[9] < 102.0) {
 80008e8:	687b      	ldr	r3, [r7, #4]
 80008ea:	3324      	adds	r3, #36	; 0x24
 80008ec:	681b      	ldr	r3, [r3, #0]
 80008ee:	4926      	ldr	r1, [pc, #152]	; (8000988 <sonar_predict_tree_0+0x360>)
 80008f0:	1c18      	adds	r0, r3, #0
 80008f2:	f7ff fc59 	bl	80001a8 <__aeabi_fcmplt>
 80008f6:	1e03      	subs	r3, r0, #0
 80008f8:	d01b      	beq.n	8000932 <sonar_predict_tree_0+0x30a>
                                          if (features[5] < 1.5) {
 80008fa:	687b      	ldr	r3, [r7, #4]
 80008fc:	3314      	adds	r3, #20
 80008fe:	681b      	ldr	r3, [r3, #0]
 8000900:	21ff      	movs	r1, #255	; 0xff
 8000902:	0589      	lsls	r1, r1, #22
 8000904:	1c18      	adds	r0, r3, #0
 8000906:	f7ff fc4f 	bl	80001a8 <__aeabi_fcmplt>
 800090a:	1e03      	subs	r3, r0, #0
 800090c:	d00e      	beq.n	800092c <sonar_predict_tree_0+0x304>
                                              if (features[10] < 0.3193050026893616) {
 800090e:	687b      	ldr	r3, [r7, #4]
 8000910:	3328      	adds	r3, #40	; 0x28
 8000912:	681b      	ldr	r3, [r3, #0]
 8000914:	491d      	ldr	r1, [pc, #116]	; (800098c <sonar_predict_tree_0+0x364>)
 8000916:	1c18      	adds	r0, r3, #0
 8000918:	f7ff fc46 	bl	80001a8 <__aeabi_fcmplt>
 800091c:	1e03      	subs	r3, r0, #0
 800091e:	d002      	beq.n	8000926 <sonar_predict_tree_0+0x2fe>
                                                  return 0;
 8000920:	2300      	movs	r3, #0
 8000922:	f000 fc07 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                              } else {
                                                  return 1;
 8000926:	2301      	movs	r3, #1
 8000928:	f000 fc04 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                              }
                                          } else {
                                              return 0;
 800092c:	2300      	movs	r3, #0
 800092e:	f000 fc01 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                          }
                                      } else {
                                          return 0;
 8000932:	2300      	movs	r3, #0
 8000934:	f000 fbfe 	bl	8001134 <sonar_predict_tree_0+0xb0c>
 8000938:	40d00000 	.word	0x40d00000
 800093c:	40900000 	.word	0x40900000
 8000940:	40200000 	.word	0x40200000
 8000944:	3b09a027 	.word	0x3b09a027
 8000948:	4008299e 	.word	0x4008299e
 800094c:	43440000 	.word	0x43440000
 8000950:	3d9414a5 	.word	0x3d9414a5
 8000954:	428b0000 	.word	0x428b0000
 8000958:	41c40000 	.word	0x41c40000
 800095c:	41500000 	.word	0x41500000
 8000960:	420e0000 	.word	0x420e0000
 8000964:	41080000 	.word	0x41080000
 8000968:	40400000 	.word	0x40400000
 800096c:	3fbb5009 	.word	0x3fbb5009
 8000970:	41400000 	.word	0x41400000
 8000974:	3fe22af7 	.word	0x3fe22af7
 8000978:	41180000 	.word	0x41180000
 800097c:	40133459 	.word	0x40133459
 8000980:	43018000 	.word	0x43018000
 8000984:	3ff25a2c 	.word	0x3ff25a2c
 8000988:	42cc0000 	.word	0x42cc0000
 800098c:	3ea37bf2 	.word	0x3ea37bf2
                                      }
                                  } else {
                                      if (features[2] < 4.5) {
 8000990:	687b      	ldr	r3, [r7, #4]
 8000992:	3308      	adds	r3, #8
 8000994:	681b      	ldr	r3, [r3, #0]
 8000996:	49c3      	ldr	r1, [pc, #780]	; (8000ca4 <sonar_predict_tree_0+0x67c>)
 8000998:	1c18      	adds	r0, r3, #0
 800099a:	f7ff fc05 	bl	80001a8 <__aeabi_fcmplt>
 800099e:	1e03      	subs	r3, r0, #0
 80009a0:	d100      	bne.n	80009a4 <sonar_predict_tree_0+0x37c>
 80009a2:	e114      	b.n	8000bce <sonar_predict_tree_0+0x5a6>
                                          if (features[9] < 56.5) {
 80009a4:	687b      	ldr	r3, [r7, #4]
 80009a6:	3324      	adds	r3, #36	; 0x24
 80009a8:	681b      	ldr	r3, [r3, #0]
 80009aa:	49bf      	ldr	r1, [pc, #764]	; (8000ca8 <sonar_predict_tree_0+0x680>)
 80009ac:	1c18      	adds	r0, r3, #0
 80009ae:	f7ff fbfb 	bl	80001a8 <__aeabi_fcmplt>
 80009b2:	1e03      	subs	r3, r0, #0
 80009b4:	d100      	bne.n	80009b8 <sonar_predict_tree_0+0x390>
 80009b6:	e0c1      	b.n	8000b3c <sonar_predict_tree_0+0x514>
                                              if (features[4] < 79.5) {
 80009b8:	687b      	ldr	r3, [r7, #4]
 80009ba:	3310      	adds	r3, #16
 80009bc:	681b      	ldr	r3, [r3, #0]
 80009be:	49bb      	ldr	r1, [pc, #748]	; (8000cac <sonar_predict_tree_0+0x684>)
 80009c0:	1c18      	adds	r0, r3, #0
 80009c2:	f7ff fbf1 	bl	80001a8 <__aeabi_fcmplt>
 80009c6:	1e03      	subs	r3, r0, #0
 80009c8:	d100      	bne.n	80009cc <sonar_predict_tree_0+0x3a4>
 80009ca:	e0aa      	b.n	8000b22 <sonar_predict_tree_0+0x4fa>
                                                  if (features[10] < 2.2594600915908813) {
 80009cc:	687b      	ldr	r3, [r7, #4]
 80009ce:	3328      	adds	r3, #40	; 0x28
 80009d0:	681b      	ldr	r3, [r3, #0]
 80009d2:	1c18      	adds	r0, r3, #0
 80009d4:	f7ff fdb8 	bl	8000548 <__aeabi_f2d>
 80009d8:	22d0      	movs	r2, #208	; 0xd0
 80009da:	0612      	lsls	r2, r2, #24
 80009dc:	4bb4      	ldr	r3, [pc, #720]	; (8000cb0 <sonar_predict_tree_0+0x688>)
 80009de:	f7ff fba9 	bl	8000134 <__aeabi_dcmplt>
 80009e2:	1e03      	subs	r3, r0, #0
 80009e4:	d062      	beq.n	8000aac <sonar_predict_tree_0+0x484>
                                                      if (features[9] < 38.5) {
 80009e6:	687b      	ldr	r3, [r7, #4]
 80009e8:	3324      	adds	r3, #36	; 0x24
 80009ea:	681b      	ldr	r3, [r3, #0]
 80009ec:	49b1      	ldr	r1, [pc, #708]	; (8000cb4 <sonar_predict_tree_0+0x68c>)
 80009ee:	1c18      	adds	r0, r3, #0
 80009f0:	f7ff fbda 	bl	80001a8 <__aeabi_fcmplt>
 80009f4:	1e03      	subs	r3, r0, #0
 80009f6:	d032      	beq.n	8000a5e <sonar_predict_tree_0+0x436>
                                                          if (features[4] < 37.5) {
 80009f8:	687b      	ldr	r3, [r7, #4]
 80009fa:	3310      	adds	r3, #16
 80009fc:	681b      	ldr	r3, [r3, #0]
 80009fe:	49ae      	ldr	r1, [pc, #696]	; (8000cb8 <sonar_predict_tree_0+0x690>)
 8000a00:	1c18      	adds	r0, r3, #0
 8000a02:	f7ff fbd1 	bl	80001a8 <__aeabi_fcmplt>
 8000a06:	1e03      	subs	r3, r0, #0
 8000a08:	d00e      	beq.n	8000a28 <sonar_predict_tree_0+0x400>
                                                              if (features[9] < 13.5) {
 8000a0a:	687b      	ldr	r3, [r7, #4]
 8000a0c:	3324      	adds	r3, #36	; 0x24
 8000a0e:	681b      	ldr	r3, [r3, #0]
 8000a10:	49aa      	ldr	r1, [pc, #680]	; (8000cbc <sonar_predict_tree_0+0x694>)
 8000a12:	1c18      	adds	r0, r3, #0
 8000a14:	f7ff fbc8 	bl	80001a8 <__aeabi_fcmplt>
 8000a18:	1e03      	subs	r3, r0, #0
 8000a1a:	d002      	beq.n	8000a22 <sonar_predict_tree_0+0x3fa>
                                                                  return 1;
 8000a1c:	2301      	movs	r3, #1
 8000a1e:	f000 fb89 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                                              } else {
                                                                  return 0;
 8000a22:	2300      	movs	r3, #0
 8000a24:	f000 fb86 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                                              }
                                                          } else {
                                                              if (features[9] < 20.5) {
 8000a28:	687b      	ldr	r3, [r7, #4]
 8000a2a:	3324      	adds	r3, #36	; 0x24
 8000a2c:	681b      	ldr	r3, [r3, #0]
 8000a2e:	49a4      	ldr	r1, [pc, #656]	; (8000cc0 <sonar_predict_tree_0+0x698>)
 8000a30:	1c18      	adds	r0, r3, #0
 8000a32:	f7ff fbb9 	bl	80001a8 <__aeabi_fcmplt>
 8000a36:	1e03      	subs	r3, r0, #0
 8000a38:	d002      	beq.n	8000a40 <sonar_predict_tree_0+0x418>
                                                                  return 0;
 8000a3a:	2300      	movs	r3, #0
 8000a3c:	f000 fb7a 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                                              } else {
                                                                  if (features[5] < 20.0) {
 8000a40:	687b      	ldr	r3, [r7, #4]
 8000a42:	3314      	adds	r3, #20
 8000a44:	681b      	ldr	r3, [r3, #0]
 8000a46:	499f      	ldr	r1, [pc, #636]	; (8000cc4 <sonar_predict_tree_0+0x69c>)
 8000a48:	1c18      	adds	r0, r3, #0
 8000a4a:	f7ff fbad 	bl	80001a8 <__aeabi_fcmplt>
 8000a4e:	1e03      	subs	r3, r0, #0
 8000a50:	d002      	beq.n	8000a58 <sonar_predict_tree_0+0x430>
                                                                      return 1;
 8000a52:	2301      	movs	r3, #1
 8000a54:	f000 fb6e 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                                                  } else {
                                                                      return 0;
 8000a58:	2300      	movs	r3, #0
 8000a5a:	f000 fb6b 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                                                  }
                                                              }
                                                          }
                                                      } else {
                                                          if (features[8] < 1104.5) {
 8000a5e:	687b      	ldr	r3, [r7, #4]
 8000a60:	3320      	adds	r3, #32
 8000a62:	681b      	ldr	r3, [r3, #0]
 8000a64:	4998      	ldr	r1, [pc, #608]	; (8000cc8 <sonar_predict_tree_0+0x6a0>)
 8000a66:	1c18      	adds	r0, r3, #0
 8000a68:	f7ff fb9e 	bl	80001a8 <__aeabi_fcmplt>
 8000a6c:	1e03      	subs	r3, r0, #0
 8000a6e:	d00e      	beq.n	8000a8e <sonar_predict_tree_0+0x466>
                                                              if (features[4] < 5.5) {
 8000a70:	687b      	ldr	r3, [r7, #4]
 8000a72:	3310      	adds	r3, #16
 8000a74:	681b      	ldr	r3, [r3, #0]
 8000a76:	4995      	ldr	r1, [pc, #596]	; (8000ccc <sonar_predict_tree_0+0x6a4>)
 8000a78:	1c18      	adds	r0, r3, #0
 8000a7a:	f7ff fb95 	bl	80001a8 <__aeabi_fcmplt>
 8000a7e:	1e03      	subs	r3, r0, #0
 8000a80:	d002      	beq.n	8000a88 <sonar_predict_tree_0+0x460>
                                                                  return 1;
 8000a82:	2301      	movs	r3, #1
 8000a84:	f000 fb56 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                                              } else {
                                                                  return 0;
 8000a88:	2300      	movs	r3, #0
 8000a8a:	f000 fb53 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                                              }
                                                          } else {
                                                              if (features[5] < 13.5) {
 8000a8e:	687b      	ldr	r3, [r7, #4]
 8000a90:	3314      	adds	r3, #20
 8000a92:	681b      	ldr	r3, [r3, #0]
 8000a94:	4989      	ldr	r1, [pc, #548]	; (8000cbc <sonar_predict_tree_0+0x694>)
 8000a96:	1c18      	adds	r0, r3, #0
 8000a98:	f7ff fb86 	bl	80001a8 <__aeabi_fcmplt>
 8000a9c:	1e03      	subs	r3, r0, #0
 8000a9e:	d002      	beq.n	8000aa6 <sonar_predict_tree_0+0x47e>
                                                                  return 1;
 8000aa0:	2301      	movs	r3, #1
 8000aa2:	f000 fb47 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                                              } else {
                                                                  return 0;
 8000aa6:	2300      	movs	r3, #0
 8000aa8:	f000 fb44 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                                              }
                                                          }
                                                      }
                                                  } else {
                                                      if (features[8] < 1147.5) {
 8000aac:	687b      	ldr	r3, [r7, #4]
 8000aae:	3320      	adds	r3, #32
 8000ab0:	681b      	ldr	r3, [r3, #0]
 8000ab2:	4987      	ldr	r1, [pc, #540]	; (8000cd0 <sonar_predict_tree_0+0x6a8>)
 8000ab4:	1c18      	adds	r0, r3, #0
 8000ab6:	f7ff fb77 	bl	80001a8 <__aeabi_fcmplt>
 8000aba:	1e03      	subs	r3, r0, #0
 8000abc:	d002      	beq.n	8000ac4 <sonar_predict_tree_0+0x49c>
                                                          return 0;
 8000abe:	2300      	movs	r3, #0
 8000ac0:	f000 fb38 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                                      } else {
                                                          if (features[9] < 19.5) {
 8000ac4:	687b      	ldr	r3, [r7, #4]
 8000ac6:	3324      	adds	r3, #36	; 0x24
 8000ac8:	681b      	ldr	r3, [r3, #0]
 8000aca:	4982      	ldr	r1, [pc, #520]	; (8000cd4 <sonar_predict_tree_0+0x6ac>)
 8000acc:	1c18      	adds	r0, r3, #0
 8000ace:	f7ff fb6b 	bl	80001a8 <__aeabi_fcmplt>
 8000ad2:	1e03      	subs	r3, r0, #0
 8000ad4:	d002      	beq.n	8000adc <sonar_predict_tree_0+0x4b4>
                                                              return 0;
 8000ad6:	2300      	movs	r3, #0
 8000ad8:	f000 fb2c 	bl	8001134 <sonar_predict_tree_0+0xb0c>
                                                          } else {
                                                              if (features[2] < 3.5) {
 8000adc:	687b      	ldr	r3, [r7, #4]
 8000ade:	3308      	adds	r3, #8
 8000ae0:	681b      	ldr	r3, [r3, #0]
 8000ae2:	497d      	ldr	r1, [pc, #500]	; (8000cd8 <sonar_predict_tree_0+0x6b0>)
 8000ae4:	1c18      	adds	r0, r3, #0
 8000ae6:	f7ff fb5f 	bl	80001a8 <__aeabi_fcmplt>
 8000aea:	1e03      	subs	r3, r0, #0
 8000aec:	d017      	beq.n	8000b1e <sonar_predict_tree_0+0x4f6>
                                                                  if (features[4] < 40.5) {
 8000aee:	687b      	ldr	r3, [r7, #4]
 8000af0:	3310      	adds	r3, #16
 8000af2:	681b      	ldr	r3, [r3, #0]
 8000af4:	4979      	ldr	r1, [pc, #484]	; (8000cdc <sonar_predict_tree_0+0x6b4>)
 8000af6:	1c18      	adds	r0, r3, #0
 8000af8:	f7ff fb56 	bl	80001a8 <__aeabi_fcmplt>
 8000afc:	1e03      	subs	r3, r0, #0
 8000afe:	d00c      	beq.n	8000b1a <sonar_predict_tree_0+0x4f2>
                                                                      if (features[9] < 34.0) {
 8000b00:	687b      	ldr	r3, [r7, #4]
 8000b02:	3324      	adds	r3, #36	; 0x24
 8000b04:	681b      	ldr	r3, [r3, #0]
 8000b06:	4976      	ldr	r1, [pc, #472]	; (8000ce0 <sonar_predict_tree_0+0x6b8>)
 8000b08:	1c18      	adds	r0, r3, #0
 8000b0a:	f7ff fb4d 	bl	80001a8 <__aeabi_fcmplt>
 8000b0e:	1e03      	subs	r3, r0, #0
 8000b10:	d001      	beq.n	8000b16 <sonar_predict_tree_0+0x4ee>
                                                                          return 0;
 8000b12:	2300      	movs	r3, #0
 8000b14:	e30e      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                                      } else {
                                                                          return 1;
 8000b16:	2301      	movs	r3, #1
 8000b18:	e30c      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                                      }
                                                                  } else {
                                                                      return 1;
 8000b1a:	2301      	movs	r3, #1
 8000b1c:	e30a      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                                  }
                                                              } else {
                                                                  return 0;
 8000b1e:	2300      	movs	r3, #0
 8000b20:	e308      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                              }
                                                          }
                                                      }
                                                  }
                                              } else {
                                                  if (features[9] < 11.0) {
 8000b22:	687b      	ldr	r3, [r7, #4]
 8000b24:	3324      	adds	r3, #36	; 0x24
 8000b26:	681b      	ldr	r3, [r3, #0]
 8000b28:	496e      	ldr	r1, [pc, #440]	; (8000ce4 <sonar_predict_tree_0+0x6bc>)
 8000b2a:	1c18      	adds	r0, r3, #0
 8000b2c:	f7ff fb3c 	bl	80001a8 <__aeabi_fcmplt>
 8000b30:	1e03      	subs	r3, r0, #0
 8000b32:	d001      	beq.n	8000b38 <sonar_predict_tree_0+0x510>
                                                      return 0;
 8000b34:	2300      	movs	r3, #0
 8000b36:	e2fd      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                  } else {
                                                      return 1;
 8000b38:	2301      	movs	r3, #1
 8000b3a:	e2fb      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                  }
                                              }
                                          } else {
                                              if (features[8] < 796.5) {
 8000b3c:	687b      	ldr	r3, [r7, #4]
 8000b3e:	3320      	adds	r3, #32
 8000b40:	681b      	ldr	r3, [r3, #0]
 8000b42:	4969      	ldr	r1, [pc, #420]	; (8000ce8 <sonar_predict_tree_0+0x6c0>)
 8000b44:	1c18      	adds	r0, r3, #0
 8000b46:	f7ff fb2f 	bl	80001a8 <__aeabi_fcmplt>
 8000b4a:	1e03      	subs	r3, r0, #0
 8000b4c:	d01b      	beq.n	8000b86 <sonar_predict_tree_0+0x55e>
                                                  if (features[10] < 1.625569999217987) {
 8000b4e:	687b      	ldr	r3, [r7, #4]
 8000b50:	3328      	adds	r3, #40	; 0x28
 8000b52:	681b      	ldr	r3, [r3, #0]
 8000b54:	1c18      	adds	r0, r3, #0
 8000b56:	f7ff fcf7 	bl	8000548 <__aeabi_f2d>
 8000b5a:	22b0      	movs	r2, #176	; 0xb0
 8000b5c:	0612      	lsls	r2, r2, #24
 8000b5e:	4b63      	ldr	r3, [pc, #396]	; (8000cec <sonar_predict_tree_0+0x6c4>)
 8000b60:	f7ff fae8 	bl	8000134 <__aeabi_dcmplt>
 8000b64:	1e03      	subs	r3, r0, #0
 8000b66:	d00c      	beq.n	8000b82 <sonar_predict_tree_0+0x55a>
                                                      if (features[2] < 2.5) {
 8000b68:	687b      	ldr	r3, [r7, #4]
 8000b6a:	3308      	adds	r3, #8
 8000b6c:	681b      	ldr	r3, [r3, #0]
 8000b6e:	4960      	ldr	r1, [pc, #384]	; (8000cf0 <sonar_predict_tree_0+0x6c8>)
 8000b70:	1c18      	adds	r0, r3, #0
 8000b72:	f7ff fb19 	bl	80001a8 <__aeabi_fcmplt>
 8000b76:	1e03      	subs	r3, r0, #0
 8000b78:	d001      	beq.n	8000b7e <sonar_predict_tree_0+0x556>
                                                          return 0;
 8000b7a:	2300      	movs	r3, #0
 8000b7c:	e2da      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                      } else {
                                                          return 1;
 8000b7e:	2301      	movs	r3, #1
 8000b80:	e2d8      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                      }
                                                  } else {
                                                      return 0;
 8000b82:	2300      	movs	r3, #0
 8000b84:	e2d6      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                  }
                                              } else {
                                                  if (features[5] < 4.0) {
 8000b86:	687b      	ldr	r3, [r7, #4]
 8000b88:	3314      	adds	r3, #20
 8000b8a:	681b      	ldr	r3, [r3, #0]
 8000b8c:	2181      	movs	r1, #129	; 0x81
 8000b8e:	05c9      	lsls	r1, r1, #23
 8000b90:	1c18      	adds	r0, r3, #0
 8000b92:	f7ff fb09 	bl	80001a8 <__aeabi_fcmplt>
 8000b96:	1e03      	subs	r3, r0, #0
 8000b98:	d017      	beq.n	8000bca <sonar_predict_tree_0+0x5a2>
                                                      if (features[9] < 67.0) {
 8000b9a:	687b      	ldr	r3, [r7, #4]
 8000b9c:	3324      	adds	r3, #36	; 0x24
 8000b9e:	681b      	ldr	r3, [r3, #0]
 8000ba0:	4954      	ldr	r1, [pc, #336]	; (8000cf4 <sonar_predict_tree_0+0x6cc>)
 8000ba2:	1c18      	adds	r0, r3, #0
 8000ba4:	f7ff fb00 	bl	80001a8 <__aeabi_fcmplt>
 8000ba8:	1e03      	subs	r3, r0, #0
 8000baa:	d00c      	beq.n	8000bc6 <sonar_predict_tree_0+0x59e>
                                                          if (features[4] < 11.0) {
 8000bac:	687b      	ldr	r3, [r7, #4]
 8000bae:	3310      	adds	r3, #16
 8000bb0:	681b      	ldr	r3, [r3, #0]
 8000bb2:	494c      	ldr	r1, [pc, #304]	; (8000ce4 <sonar_predict_tree_0+0x6bc>)
 8000bb4:	1c18      	adds	r0, r3, #0
 8000bb6:	f7ff faf7 	bl	80001a8 <__aeabi_fcmplt>
 8000bba:	1e03      	subs	r3, r0, #0
 8000bbc:	d001      	beq.n	8000bc2 <sonar_predict_tree_0+0x59a>
                                                              return 0;
 8000bbe:	2300      	movs	r3, #0
 8000bc0:	e2b8      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                          } else {
                                                              return 1;
 8000bc2:	2301      	movs	r3, #1
 8000bc4:	e2b6      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                          }
                                                      } else {
                                                          return 1;
 8000bc6:	2301      	movs	r3, #1
 8000bc8:	e2b4      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                      }
                                                  } else {
                                                      return 0;
 8000bca:	2300      	movs	r3, #0
 8000bcc:	e2b2      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                  }
                                              }
                                          }
                                      } else {
                                          if (features[9] < 54.5) {
 8000bce:	687b      	ldr	r3, [r7, #4]
 8000bd0:	3324      	adds	r3, #36	; 0x24
 8000bd2:	681b      	ldr	r3, [r3, #0]
 8000bd4:	4948      	ldr	r1, [pc, #288]	; (8000cf8 <sonar_predict_tree_0+0x6d0>)
 8000bd6:	1c18      	adds	r0, r3, #0
 8000bd8:	f7ff fae6 	bl	80001a8 <__aeabi_fcmplt>
 8000bdc:	1e03      	subs	r3, r0, #0
 8000bde:	d027      	beq.n	8000c30 <sonar_predict_tree_0+0x608>
                                              if (features[8] < 576.5) {
 8000be0:	687b      	ldr	r3, [r7, #4]
 8000be2:	3320      	adds	r3, #32
 8000be4:	681b      	ldr	r3, [r3, #0]
 8000be6:	4945      	ldr	r1, [pc, #276]	; (8000cfc <sonar_predict_tree_0+0x6d4>)
 8000be8:	1c18      	adds	r0, r3, #0
 8000bea:	f7ff fadd 	bl	80001a8 <__aeabi_fcmplt>
 8000bee:	1e03      	subs	r3, r0, #0
 8000bf0:	d01c      	beq.n	8000c2c <sonar_predict_tree_0+0x604>
                                                  if (features[5] < 1.5) {
 8000bf2:	687b      	ldr	r3, [r7, #4]
 8000bf4:	3314      	adds	r3, #20
 8000bf6:	681b      	ldr	r3, [r3, #0]
 8000bf8:	21ff      	movs	r1, #255	; 0xff
 8000bfa:	0589      	lsls	r1, r1, #22
 8000bfc:	1c18      	adds	r0, r3, #0
 8000bfe:	f7ff fad3 	bl	80001a8 <__aeabi_fcmplt>
 8000c02:	1e03      	subs	r3, r0, #0
 8000c04:	d010      	beq.n	8000c28 <sonar_predict_tree_0+0x600>
                                                      if (features[10] < 1.5243750214576721) {
 8000c06:	687b      	ldr	r3, [r7, #4]
 8000c08:	3328      	adds	r3, #40	; 0x28
 8000c0a:	681b      	ldr	r3, [r3, #0]
 8000c0c:	1c18      	adds	r0, r3, #0
 8000c0e:	f7ff fc9b 	bl	8000548 <__aeabi_f2d>
 8000c12:	2280      	movs	r2, #128	; 0x80
 8000c14:	0552      	lsls	r2, r2, #21
 8000c16:	4b3a      	ldr	r3, [pc, #232]	; (8000d00 <sonar_predict_tree_0+0x6d8>)
 8000c18:	f7ff fa8c 	bl	8000134 <__aeabi_dcmplt>
 8000c1c:	1e03      	subs	r3, r0, #0
 8000c1e:	d001      	beq.n	8000c24 <sonar_predict_tree_0+0x5fc>
                                                          return 0;
 8000c20:	2300      	movs	r3, #0
 8000c22:	e287      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                      } else {
                                                          return 1;
 8000c24:	2301      	movs	r3, #1
 8000c26:	e285      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                      }
                                                  } else {
                                                      return 0;
 8000c28:	2300      	movs	r3, #0
 8000c2a:	e283      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                  }
                                              } else {
                                                  return 0;
 8000c2c:	2300      	movs	r3, #0
 8000c2e:	e281      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                              }
                                          } else {
                                              if (features[8] < 894.0) {
 8000c30:	687b      	ldr	r3, [r7, #4]
 8000c32:	3320      	adds	r3, #32
 8000c34:	681b      	ldr	r3, [r3, #0]
 8000c36:	4933      	ldr	r1, [pc, #204]	; (8000d04 <sonar_predict_tree_0+0x6dc>)
 8000c38:	1c18      	adds	r0, r3, #0
 8000c3a:	f7ff fab5 	bl	80001a8 <__aeabi_fcmplt>
 8000c3e:	1e03      	subs	r3, r0, #0
 8000c40:	d100      	bne.n	8000c44 <sonar_predict_tree_0+0x61c>
 8000c42:	e082      	b.n	8000d4a <sonar_predict_tree_0+0x722>
                                                  if (features[8] < 806.0) {
 8000c44:	687b      	ldr	r3, [r7, #4]
 8000c46:	3320      	adds	r3, #32
 8000c48:	681b      	ldr	r3, [r3, #0]
 8000c4a:	492f      	ldr	r1, [pc, #188]	; (8000d08 <sonar_predict_tree_0+0x6e0>)
 8000c4c:	1c18      	adds	r0, r3, #0
 8000c4e:	f7ff faab 	bl	80001a8 <__aeabi_fcmplt>
 8000c52:	1e03      	subs	r3, r0, #0
 8000c54:	d060      	beq.n	8000d18 <sonar_predict_tree_0+0x6f0>
                                                      if (features[2] < 26.5) {
 8000c56:	687b      	ldr	r3, [r7, #4]
 8000c58:	3308      	adds	r3, #8
 8000c5a:	681b      	ldr	r3, [r3, #0]
 8000c5c:	492b      	ldr	r1, [pc, #172]	; (8000d0c <sonar_predict_tree_0+0x6e4>)
 8000c5e:	1c18      	adds	r0, r3, #0
 8000c60:	f7ff faa2 	bl	80001a8 <__aeabi_fcmplt>
 8000c64:	1e03      	subs	r3, r0, #0
 8000c66:	d01b      	beq.n	8000ca0 <sonar_predict_tree_0+0x678>
                                                          if (features[10] < 1.6079400181770325) {
 8000c68:	687b      	ldr	r3, [r7, #4]
 8000c6a:	3328      	adds	r3, #40	; 0x28
 8000c6c:	681b      	ldr	r3, [r3, #0]
 8000c6e:	1c18      	adds	r0, r3, #0
 8000c70:	f7ff fc6a 	bl	8000548 <__aeabi_f2d>
 8000c74:	22a0      	movs	r2, #160	; 0xa0
 8000c76:	05d2      	lsls	r2, r2, #23
 8000c78:	4b25      	ldr	r3, [pc, #148]	; (8000d10 <sonar_predict_tree_0+0x6e8>)
 8000c7a:	f7ff fa5b 	bl	8000134 <__aeabi_dcmplt>
 8000c7e:	1e03      	subs	r3, r0, #0
 8000c80:	d00c      	beq.n	8000c9c <sonar_predict_tree_0+0x674>
                                                              if (features[9] < 99.5) {
 8000c82:	687b      	ldr	r3, [r7, #4]
 8000c84:	3324      	adds	r3, #36	; 0x24
 8000c86:	681b      	ldr	r3, [r3, #0]
 8000c88:	4922      	ldr	r1, [pc, #136]	; (8000d14 <sonar_predict_tree_0+0x6ec>)
 8000c8a:	1c18      	adds	r0, r3, #0
 8000c8c:	f7ff fa8c 	bl	80001a8 <__aeabi_fcmplt>
 8000c90:	1e03      	subs	r3, r0, #0
 8000c92:	d001      	beq.n	8000c98 <sonar_predict_tree_0+0x670>
                                                                  return 0;
 8000c94:	2300      	movs	r3, #0
 8000c96:	e24d      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                              } else {
                                                                  return 0;
 8000c98:	2300      	movs	r3, #0
 8000c9a:	e24b      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                              }
                                                          } else {
                                                              return 0;
 8000c9c:	2300      	movs	r3, #0
 8000c9e:	e249      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                          }
                                                      } else {
                                                          return 1;
 8000ca0:	2301      	movs	r3, #1
 8000ca2:	e247      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
 8000ca4:	40900000 	.word	0x40900000
 8000ca8:	42620000 	.word	0x42620000
 8000cac:	429f0000 	.word	0x429f0000
 8000cb0:	4002135f 	.word	0x4002135f
 8000cb4:	421a0000 	.word	0x421a0000
 8000cb8:	42160000 	.word	0x42160000
 8000cbc:	41580000 	.word	0x41580000
 8000cc0:	41a40000 	.word	0x41a40000
 8000cc4:	41a00000 	.word	0x41a00000
 8000cc8:	448a1000 	.word	0x448a1000
 8000ccc:	40b00000 	.word	0x40b00000
 8000cd0:	448f7000 	.word	0x448f7000
 8000cd4:	419c0000 	.word	0x419c0000
 8000cd8:	40600000 	.word	0x40600000
 8000cdc:	42220000 	.word	0x42220000
 8000ce0:	42080000 	.word	0x42080000
 8000ce4:	41300000 	.word	0x41300000
 8000ce8:	44472000 	.word	0x44472000
 8000cec:	3ffa0255 	.word	0x3ffa0255
 8000cf0:	40200000 	.word	0x40200000
 8000cf4:	42860000 	.word	0x42860000
 8000cf8:	425a0000 	.word	0x425a0000
 8000cfc:	44102000 	.word	0x44102000
 8000d00:	3ff863d7 	.word	0x3ff863d7
 8000d04:	445f8000 	.word	0x445f8000
 8000d08:	44498000 	.word	0x44498000
 8000d0c:	41d40000 	.word	0x41d40000
 8000d10:	3ff9ba1f 	.word	0x3ff9ba1f
 8000d14:	42c70000 	.word	0x42c70000
                                                      }
                                                  } else {
                                                      if (features[9] < 103.5) {
 8000d18:	687b      	ldr	r3, [r7, #4]
 8000d1a:	3324      	adds	r3, #36	; 0x24
 8000d1c:	681b      	ldr	r3, [r3, #0]
 8000d1e:	49b4      	ldr	r1, [pc, #720]	; (8000ff0 <sonar_predict_tree_0+0x9c8>)
 8000d20:	1c18      	adds	r0, r3, #0
 8000d22:	f7ff fa41 	bl	80001a8 <__aeabi_fcmplt>
 8000d26:	1e03      	subs	r3, r0, #0
 8000d28:	d001      	beq.n	8000d2e <sonar_predict_tree_0+0x706>
                                                          return 0;
 8000d2a:	2300      	movs	r3, #0
 8000d2c:	e202      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                      } else {
                                                          if (features[5] < 4.0) {
 8000d2e:	687b      	ldr	r3, [r7, #4]
 8000d30:	3314      	adds	r3, #20
 8000d32:	681b      	ldr	r3, [r3, #0]
 8000d34:	2181      	movs	r1, #129	; 0x81
 8000d36:	05c9      	lsls	r1, r1, #23
 8000d38:	1c18      	adds	r0, r3, #0
 8000d3a:	f7ff fa35 	bl	80001a8 <__aeabi_fcmplt>
 8000d3e:	1e03      	subs	r3, r0, #0
 8000d40:	d001      	beq.n	8000d46 <sonar_predict_tree_0+0x71e>
                                                              return 1;
 8000d42:	2301      	movs	r3, #1
 8000d44:	e1f6      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                          } else {
                                                              return 0;
 8000d46:	2300      	movs	r3, #0
 8000d48:	e1f4      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                          }
                                                      }
                                                  }
                                              } else {
                                                  if (features[5] < 5.5) {
 8000d4a:	687b      	ldr	r3, [r7, #4]
 8000d4c:	3314      	adds	r3, #20
 8000d4e:	681b      	ldr	r3, [r3, #0]
 8000d50:	49a8      	ldr	r1, [pc, #672]	; (8000ff4 <sonar_predict_tree_0+0x9cc>)
 8000d52:	1c18      	adds	r0, r3, #0
 8000d54:	f7ff fa28 	bl	80001a8 <__aeabi_fcmplt>
 8000d58:	1e03      	subs	r3, r0, #0
 8000d5a:	d017      	beq.n	8000d8c <sonar_predict_tree_0+0x764>
                                                      if (features[9] < 59.0) {
 8000d5c:	687b      	ldr	r3, [r7, #4]
 8000d5e:	3324      	adds	r3, #36	; 0x24
 8000d60:	681b      	ldr	r3, [r3, #0]
 8000d62:	49a5      	ldr	r1, [pc, #660]	; (8000ff8 <sonar_predict_tree_0+0x9d0>)
 8000d64:	1c18      	adds	r0, r3, #0
 8000d66:	f7ff fa1f 	bl	80001a8 <__aeabi_fcmplt>
 8000d6a:	1e03      	subs	r3, r0, #0
 8000d6c:	d00c      	beq.n	8000d88 <sonar_predict_tree_0+0x760>
                                                          if (features[4] < 13.0) {
 8000d6e:	687b      	ldr	r3, [r7, #4]
 8000d70:	3310      	adds	r3, #16
 8000d72:	681b      	ldr	r3, [r3, #0]
 8000d74:	49a1      	ldr	r1, [pc, #644]	; (8000ffc <sonar_predict_tree_0+0x9d4>)
 8000d76:	1c18      	adds	r0, r3, #0
 8000d78:	f7ff fa16 	bl	80001a8 <__aeabi_fcmplt>
 8000d7c:	1e03      	subs	r3, r0, #0
 8000d7e:	d001      	beq.n	8000d84 <sonar_predict_tree_0+0x75c>
                                                              return 0;
 8000d80:	2300      	movs	r3, #0
 8000d82:	e1d7      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                          } else {
                                                              return 1;
 8000d84:	2301      	movs	r3, #1
 8000d86:	e1d5      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                          }
                                                      } else {
                                                          return 1;
 8000d88:	2301      	movs	r3, #1
 8000d8a:	e1d3      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                      }
                                                  } else {
                                                      return 0;
 8000d8c:	2300      	movs	r3, #0
 8000d8e:	e1d1      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                              }
                                          }
                                      }
                                  }
                              } else {
                                  if (features[8] < 349.5) {
 8000d90:	687b      	ldr	r3, [r7, #4]
 8000d92:	3320      	adds	r3, #32
 8000d94:	681b      	ldr	r3, [r3, #0]
 8000d96:	499a      	ldr	r1, [pc, #616]	; (8001000 <sonar_predict_tree_0+0x9d8>)
 8000d98:	1c18      	adds	r0, r3, #0
 8000d9a:	f7ff fa05 	bl	80001a8 <__aeabi_fcmplt>
 8000d9e:	1e03      	subs	r3, r0, #0
 8000da0:	d044      	beq.n	8000e2c <sonar_predict_tree_0+0x804>
                                      if (features[2] < 4.5) {
 8000da2:	687b      	ldr	r3, [r7, #4]
 8000da4:	3308      	adds	r3, #8
 8000da6:	681b      	ldr	r3, [r3, #0]
 8000da8:	4996      	ldr	r1, [pc, #600]	; (8001004 <sonar_predict_tree_0+0x9dc>)
 8000daa:	1c18      	adds	r0, r3, #0
 8000dac:	f7ff f9fc 	bl	80001a8 <__aeabi_fcmplt>
 8000db0:	1e03      	subs	r3, r0, #0
 8000db2:	d001      	beq.n	8000db8 <sonar_predict_tree_0+0x790>
                                          return 0;
 8000db4:	2300      	movs	r3, #0
 8000db6:	e1bd      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                      } else {
                                          if (features[10] < 0.5906450152397156) {
 8000db8:	687b      	ldr	r3, [r7, #4]
 8000dba:	3328      	adds	r3, #40	; 0x28
 8000dbc:	681b      	ldr	r3, [r3, #0]
 8000dbe:	4992      	ldr	r1, [pc, #584]	; (8001008 <sonar_predict_tree_0+0x9e0>)
 8000dc0:	1c18      	adds	r0, r3, #0
 8000dc2:	f7ff f9f1 	bl	80001a8 <__aeabi_fcmplt>
 8000dc6:	1e03      	subs	r3, r0, #0
 8000dc8:	d001      	beq.n	8000dce <sonar_predict_tree_0+0x7a6>
                                              return 1;
 8000dca:	2301      	movs	r3, #1
 8000dcc:	e1b2      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                          } else {
                                              if (features[5] < 2.0) {
 8000dce:	687b      	ldr	r3, [r7, #4]
 8000dd0:	3314      	adds	r3, #20
 8000dd2:	681b      	ldr	r3, [r3, #0]
 8000dd4:	2180      	movs	r1, #128	; 0x80
 8000dd6:	05c9      	lsls	r1, r1, #23
 8000dd8:	1c18      	adds	r0, r3, #0
 8000dda:	f7ff f9e5 	bl	80001a8 <__aeabi_fcmplt>
 8000dde:	1e03      	subs	r3, r0, #0
 8000de0:	d022      	beq.n	8000e28 <sonar_predict_tree_0+0x800>
                                                  if (features[9] < 220.0) {
 8000de2:	687b      	ldr	r3, [r7, #4]
 8000de4:	3324      	adds	r3, #36	; 0x24
 8000de6:	681b      	ldr	r3, [r3, #0]
 8000de8:	4988      	ldr	r1, [pc, #544]	; (800100c <sonar_predict_tree_0+0x9e4>)
 8000dea:	1c18      	adds	r0, r3, #0
 8000dec:	f7ff f9dc 	bl	80001a8 <__aeabi_fcmplt>
 8000df0:	1e03      	subs	r3, r0, #0
 8000df2:	d017      	beq.n	8000e24 <sonar_predict_tree_0+0x7fc>
                                                      if (features[9] < 141.5) {
 8000df4:	687b      	ldr	r3, [r7, #4]
 8000df6:	3324      	adds	r3, #36	; 0x24
 8000df8:	681b      	ldr	r3, [r3, #0]
 8000dfa:	4985      	ldr	r1, [pc, #532]	; (8001010 <sonar_predict_tree_0+0x9e8>)
 8000dfc:	1c18      	adds	r0, r3, #0
 8000dfe:	f7ff f9d3 	bl	80001a8 <__aeabi_fcmplt>
 8000e02:	1e03      	subs	r3, r0, #0
 8000e04:	d001      	beq.n	8000e0a <sonar_predict_tree_0+0x7e2>
                                                          return 0;
 8000e06:	2300      	movs	r3, #0
 8000e08:	e194      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                      } else {
                                                          if (features[8] < 226.5) {
 8000e0a:	687b      	ldr	r3, [r7, #4]
 8000e0c:	3320      	adds	r3, #32
 8000e0e:	681b      	ldr	r3, [r3, #0]
 8000e10:	4980      	ldr	r1, [pc, #512]	; (8001014 <sonar_predict_tree_0+0x9ec>)
 8000e12:	1c18      	adds	r0, r3, #0
 8000e14:	f7ff f9c8 	bl	80001a8 <__aeabi_fcmplt>
 8000e18:	1e03      	subs	r3, r0, #0
 8000e1a:	d001      	beq.n	8000e20 <sonar_predict_tree_0+0x7f8>
                                                              return 0;
 8000e1c:	2300      	movs	r3, #0
 8000e1e:	e189      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                          } else {
                                                              return 1;
 8000e20:	2301      	movs	r3, #1
 8000e22:	e187      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                          }
                                                      }
                                                  } else {
                                                      return 0;
 8000e24:	2300      	movs	r3, #0
 8000e26:	e185      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                  }
                                              } else {
                                                  return 0;
 8000e28:	2300      	movs	r3, #0
 8000e2a:	e183      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                              }
                                          }
                                      }
                                  } else {
                                      if (features[5] < 1.5) {
 8000e2c:	687b      	ldr	r3, [r7, #4]
 8000e2e:	3314      	adds	r3, #20
 8000e30:	681b      	ldr	r3, [r3, #0]
 8000e32:	21ff      	movs	r1, #255	; 0xff
 8000e34:	0589      	lsls	r1, r1, #22
 8000e36:	1c18      	adds	r0, r3, #0
 8000e38:	f7ff f9b6 	bl	80001a8 <__aeabi_fcmplt>
 8000e3c:	1e03      	subs	r3, r0, #0
 8000e3e:	d001      	beq.n	8000e44 <sonar_predict_tree_0+0x81c>
                                          return 1;
 8000e40:	2301      	movs	r3, #1
 8000e42:	e177      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                      } else {
                                          return 0;
 8000e44:	2300      	movs	r3, #0
 8000e46:	e175      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                      }
                                  }
                              }
                          } else {
                              if (features[5] < 1.5) {
 8000e48:	687b      	ldr	r3, [r7, #4]
 8000e4a:	3314      	adds	r3, #20
 8000e4c:	681b      	ldr	r3, [r3, #0]
 8000e4e:	21ff      	movs	r1, #255	; 0xff
 8000e50:	0589      	lsls	r1, r1, #22
 8000e52:	1c18      	adds	r0, r3, #0
 8000e54:	f7ff f9a8 	bl	80001a8 <__aeabi_fcmplt>
 8000e58:	1e03      	subs	r3, r0, #0
 8000e5a:	d100      	bne.n	8000e5e <sonar_predict_tree_0+0x836>
 8000e5c:	e12c      	b.n	80010b8 <sonar_predict_tree_0+0xa90>
                                  if (features[4] < 1.5) {
 8000e5e:	687b      	ldr	r3, [r7, #4]
 8000e60:	3310      	adds	r3, #16
 8000e62:	681b      	ldr	r3, [r3, #0]
 8000e64:	21ff      	movs	r1, #255	; 0xff
 8000e66:	0589      	lsls	r1, r1, #22
 8000e68:	1c18      	adds	r0, r3, #0
 8000e6a:	f7ff f99d 	bl	80001a8 <__aeabi_fcmplt>
 8000e6e:	1e03      	subs	r3, r0, #0
 8000e70:	d031      	beq.n	8000ed6 <sonar_predict_tree_0+0x8ae>
                                      if (features[9] < 235.5) {
 8000e72:	687b      	ldr	r3, [r7, #4]
 8000e74:	3324      	adds	r3, #36	; 0x24
 8000e76:	681b      	ldr	r3, [r3, #0]
 8000e78:	4967      	ldr	r1, [pc, #412]	; (8001018 <sonar_predict_tree_0+0x9f0>)
 8000e7a:	1c18      	adds	r0, r3, #0
 8000e7c:	f7ff f994 	bl	80001a8 <__aeabi_fcmplt>
 8000e80:	1e03      	subs	r3, r0, #0
 8000e82:	d017      	beq.n	8000eb4 <sonar_predict_tree_0+0x88c>
                                          if (features[9] < 151.0) {
 8000e84:	687b      	ldr	r3, [r7, #4]
 8000e86:	3324      	adds	r3, #36	; 0x24
 8000e88:	681b      	ldr	r3, [r3, #0]
 8000e8a:	4964      	ldr	r1, [pc, #400]	; (800101c <sonar_predict_tree_0+0x9f4>)
 8000e8c:	1c18      	adds	r0, r3, #0
 8000e8e:	f7ff f98b 	bl	80001a8 <__aeabi_fcmplt>
 8000e92:	1e03      	subs	r3, r0, #0
 8000e94:	d001      	beq.n	8000e9a <sonar_predict_tree_0+0x872>
                                              return 0;
 8000e96:	2300      	movs	r3, #0
 8000e98:	e14c      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                          } else {
                                              if (features[8] < 236.5) {
 8000e9a:	687b      	ldr	r3, [r7, #4]
 8000e9c:	3320      	adds	r3, #32
 8000e9e:	681b      	ldr	r3, [r3, #0]
 8000ea0:	495f      	ldr	r1, [pc, #380]	; (8001020 <sonar_predict_tree_0+0x9f8>)
 8000ea2:	1c18      	adds	r0, r3, #0
 8000ea4:	f7ff f980 	bl	80001a8 <__aeabi_fcmplt>
 8000ea8:	1e03      	subs	r3, r0, #0
 8000eaa:	d001      	beq.n	8000eb0 <sonar_predict_tree_0+0x888>
                                                  return 0;
 8000eac:	2300      	movs	r3, #0
 8000eae:	e141      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                              } else {
                                                  return 1;
 8000eb0:	2301      	movs	r3, #1
 8000eb2:	e13f      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                              }
                                          }
                                      } else {
                                          if (features[10] < 2.746440052986145) {
 8000eb4:	687b      	ldr	r3, [r7, #4]
 8000eb6:	3328      	adds	r3, #40	; 0x28
 8000eb8:	681b      	ldr	r3, [r3, #0]
 8000eba:	1c18      	adds	r0, r3, #0
 8000ebc:	f7ff fb44 	bl	8000548 <__aeabi_f2d>
 8000ec0:	2290      	movs	r2, #144	; 0x90
 8000ec2:	0612      	lsls	r2, r2, #24
 8000ec4:	4b57      	ldr	r3, [pc, #348]	; (8001024 <sonar_predict_tree_0+0x9fc>)
 8000ec6:	f7ff f935 	bl	8000134 <__aeabi_dcmplt>
 8000eca:	1e03      	subs	r3, r0, #0
 8000ecc:	d001      	beq.n	8000ed2 <sonar_predict_tree_0+0x8aa>
                                              return 0;
 8000ece:	2300      	movs	r3, #0
 8000ed0:	e130      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                          } else {
                                              return 1;
 8000ed2:	2301      	movs	r3, #1
 8000ed4:	e12e      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                          }
                                      }
                                  } else {
                                      if (features[9] < 102.5) {
 8000ed6:	687b      	ldr	r3, [r7, #4]
 8000ed8:	3324      	adds	r3, #36	; 0x24
 8000eda:	681b      	ldr	r3, [r3, #0]
 8000edc:	4952      	ldr	r1, [pc, #328]	; (8001028 <sonar_predict_tree_0+0xa00>)
 8000ede:	1c18      	adds	r0, r3, #0
 8000ee0:	f7ff f962 	bl	80001a8 <__aeabi_fcmplt>
 8000ee4:	1e03      	subs	r3, r0, #0
 8000ee6:	d100      	bne.n	8000eea <sonar_predict_tree_0+0x8c2>
 8000ee8:	e0ce      	b.n	8001088 <sonar_predict_tree_0+0xa60>
                                          if (features[4] < 9.5) {
 8000eea:	687b      	ldr	r3, [r7, #4]
 8000eec:	3310      	adds	r3, #16
 8000eee:	681b      	ldr	r3, [r3, #0]
 8000ef0:	494e      	ldr	r1, [pc, #312]	; (800102c <sonar_predict_tree_0+0xa04>)
 8000ef2:	1c18      	adds	r0, r3, #0
 8000ef4:	f7ff f958 	bl	80001a8 <__aeabi_fcmplt>
 8000ef8:	1e03      	subs	r3, r0, #0
 8000efa:	d026      	beq.n	8000f4a <sonar_predict_tree_0+0x922>
                                              if (features[10] < 4.086290121078491) {
 8000efc:	687b      	ldr	r3, [r7, #4]
 8000efe:	3328      	adds	r3, #40	; 0x28
 8000f00:	681b      	ldr	r3, [r3, #0]
 8000f02:	1c18      	adds	r0, r3, #0
 8000f04:	f7ff fb20 	bl	8000548 <__aeabi_f2d>
 8000f08:	22e0      	movs	r2, #224	; 0xe0
 8000f0a:	05d2      	lsls	r2, r2, #23
 8000f0c:	4b48      	ldr	r3, [pc, #288]	; (8001030 <sonar_predict_tree_0+0xa08>)
 8000f0e:	f7ff f911 	bl	8000134 <__aeabi_dcmplt>
 8000f12:	1e03      	subs	r3, r0, #0
 8000f14:	d017      	beq.n	8000f46 <sonar_predict_tree_0+0x91e>
                                                  if (features[4] < 7.5) {
 8000f16:	687b      	ldr	r3, [r7, #4]
 8000f18:	3310      	adds	r3, #16
 8000f1a:	681b      	ldr	r3, [r3, #0]
 8000f1c:	4945      	ldr	r1, [pc, #276]	; (8001034 <sonar_predict_tree_0+0xa0c>)
 8000f1e:	1c18      	adds	r0, r3, #0
 8000f20:	f7ff f942 	bl	80001a8 <__aeabi_fcmplt>
 8000f24:	1e03      	subs	r3, r0, #0
 8000f26:	d001      	beq.n	8000f2c <sonar_predict_tree_0+0x904>
                                                      return 0;
 8000f28:	2300      	movs	r3, #0
 8000f2a:	e103      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                  } else {
                                                      if (features[9] < 78.0) {
 8000f2c:	687b      	ldr	r3, [r7, #4]
 8000f2e:	3324      	adds	r3, #36	; 0x24
 8000f30:	681b      	ldr	r3, [r3, #0]
 8000f32:	4941      	ldr	r1, [pc, #260]	; (8001038 <sonar_predict_tree_0+0xa10>)
 8000f34:	1c18      	adds	r0, r3, #0
 8000f36:	f7ff f937 	bl	80001a8 <__aeabi_fcmplt>
 8000f3a:	1e03      	subs	r3, r0, #0
 8000f3c:	d001      	beq.n	8000f42 <sonar_predict_tree_0+0x91a>
                                                          return 0;
 8000f3e:	2300      	movs	r3, #0
 8000f40:	e0f8      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                      } else {
                                                          return 1;
 8000f42:	2301      	movs	r3, #1
 8000f44:	e0f6      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                      }
                                                  }
                                              } else {
                                                  return 1;
 8000f46:	2301      	movs	r3, #1
 8000f48:	e0f4      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                              }
                                          } else {
                                              if (features[9] < 47.5) {
 8000f4a:	687b      	ldr	r3, [r7, #4]
 8000f4c:	3324      	adds	r3, #36	; 0x24
 8000f4e:	681b      	ldr	r3, [r3, #0]
 8000f50:	493a      	ldr	r1, [pc, #232]	; (800103c <sonar_predict_tree_0+0xa14>)
 8000f52:	1c18      	adds	r0, r3, #0
 8000f54:	f7ff f928 	bl	80001a8 <__aeabi_fcmplt>
 8000f58:	1e03      	subs	r3, r0, #0
 8000f5a:	d100      	bne.n	8000f5e <sonar_predict_tree_0+0x936>
 8000f5c:	e07c      	b.n	8001058 <sonar_predict_tree_0+0xa30>
                                                  if (features[4] < 25.5) {
 8000f5e:	687b      	ldr	r3, [r7, #4]
 8000f60:	3310      	adds	r3, #16
 8000f62:	681b      	ldr	r3, [r3, #0]
 8000f64:	4936      	ldr	r1, [pc, #216]	; (8001040 <sonar_predict_tree_0+0xa18>)
 8000f66:	1c18      	adds	r0, r3, #0
 8000f68:	f7ff f91e 	bl	80001a8 <__aeabi_fcmplt>
 8000f6c:	1e03      	subs	r3, r0, #0
 8000f6e:	d001      	beq.n	8000f74 <sonar_predict_tree_0+0x94c>
                                                      return 0;
 8000f70:	2300      	movs	r3, #0
 8000f72:	e0df      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                  } else {
                                                      if (features[9] < 21.5) {
 8000f74:	687b      	ldr	r3, [r7, #4]
 8000f76:	3324      	adds	r3, #36	; 0x24
 8000f78:	681b      	ldr	r3, [r3, #0]
 8000f7a:	4932      	ldr	r1, [pc, #200]	; (8001044 <sonar_predict_tree_0+0xa1c>)
 8000f7c:	1c18      	adds	r0, r3, #0
 8000f7e:	f7ff f913 	bl	80001a8 <__aeabi_fcmplt>
 8000f82:	1e03      	subs	r3, r0, #0
 8000f84:	d00c      	beq.n	8000fa0 <sonar_predict_tree_0+0x978>
                                                          if (features[8] < 1300.0) {
 8000f86:	687b      	ldr	r3, [r7, #4]
 8000f88:	3320      	adds	r3, #32
 8000f8a:	681b      	ldr	r3, [r3, #0]
 8000f8c:	492e      	ldr	r1, [pc, #184]	; (8001048 <sonar_predict_tree_0+0xa20>)
 8000f8e:	1c18      	adds	r0, r3, #0
 8000f90:	f7ff f90a 	bl	80001a8 <__aeabi_fcmplt>
 8000f94:	1e03      	subs	r3, r0, #0
 8000f96:	d001      	beq.n	8000f9c <sonar_predict_tree_0+0x974>
                                                              return 0;
 8000f98:	2300      	movs	r3, #0
 8000f9a:	e0cb      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                          } else {
                                                              return 1;
 8000f9c:	2301      	movs	r3, #1
 8000f9e:	e0c9      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                          }
                                                      } else {
                                                          if (features[10] < 2.7888799905776978) {
 8000fa0:	687b      	ldr	r3, [r7, #4]
 8000fa2:	3328      	adds	r3, #40	; 0x28
 8000fa4:	681b      	ldr	r3, [r3, #0]
 8000fa6:	1c18      	adds	r0, r3, #0
 8000fa8:	f7ff face 	bl	8000548 <__aeabi_f2d>
 8000fac:	22a0      	movs	r2, #160	; 0xa0
 8000fae:	05d2      	lsls	r2, r2, #23
 8000fb0:	4b26      	ldr	r3, [pc, #152]	; (800104c <sonar_predict_tree_0+0xa24>)
 8000fb2:	f7ff f8bf 	bl	8000134 <__aeabi_dcmplt>
 8000fb6:	1e03      	subs	r3, r0, #0
 8000fb8:	d017      	beq.n	8000fea <sonar_predict_tree_0+0x9c2>
                                                              if (features[9] < 28.5) {
 8000fba:	687b      	ldr	r3, [r7, #4]
 8000fbc:	3324      	adds	r3, #36	; 0x24
 8000fbe:	681b      	ldr	r3, [r3, #0]
 8000fc0:	4923      	ldr	r1, [pc, #140]	; (8001050 <sonar_predict_tree_0+0xa28>)
 8000fc2:	1c18      	adds	r0, r3, #0
 8000fc4:	f7ff f8f0 	bl	80001a8 <__aeabi_fcmplt>
 8000fc8:	1e03      	subs	r3, r0, #0
 8000fca:	d00c      	beq.n	8000fe6 <sonar_predict_tree_0+0x9be>
                                                                  if (features[4] < 39.0) {
 8000fcc:	687b      	ldr	r3, [r7, #4]
 8000fce:	3310      	adds	r3, #16
 8000fd0:	681b      	ldr	r3, [r3, #0]
 8000fd2:	4920      	ldr	r1, [pc, #128]	; (8001054 <sonar_predict_tree_0+0xa2c>)
 8000fd4:	1c18      	adds	r0, r3, #0
 8000fd6:	f7ff f8e7 	bl	80001a8 <__aeabi_fcmplt>
 8000fda:	1e03      	subs	r3, r0, #0
 8000fdc:	d001      	beq.n	8000fe2 <sonar_predict_tree_0+0x9ba>
                                                                      return 0;
 8000fde:	2300      	movs	r3, #0
 8000fe0:	e0a8      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                                  } else {
                                                                      return 1;
 8000fe2:	2301      	movs	r3, #1
 8000fe4:	e0a6      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                                  }
                                                              } else {
                                                                  return 1;
 8000fe6:	2301      	movs	r3, #1
 8000fe8:	e0a4      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                              }
                                                          } else {
                                                              return 0;
 8000fea:	2300      	movs	r3, #0
 8000fec:	e0a2      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
 8000fee:	46c0      	nop			; (mov r8, r8)
 8000ff0:	42cf0000 	.word	0x42cf0000
 8000ff4:	40b00000 	.word	0x40b00000
 8000ff8:	426c0000 	.word	0x426c0000
 8000ffc:	41500000 	.word	0x41500000
 8001000:	43aec000 	.word	0x43aec000
 8001004:	40900000 	.word	0x40900000
 8001008:	3f173483 	.word	0x3f173483
 800100c:	435c0000 	.word	0x435c0000
 8001010:	430d8000 	.word	0x430d8000
 8001014:	43628000 	.word	0x43628000
 8001018:	436b8000 	.word	0x436b8000
 800101c:	43170000 	.word	0x43170000
 8001020:	436c8000 	.word	0x436c8000
 8001024:	4005f8b5 	.word	0x4005f8b5
 8001028:	42cd0000 	.word	0x42cd0000
 800102c:	41180000 	.word	0x41180000
 8001030:	4010585c 	.word	0x4010585c
 8001034:	40f00000 	.word	0x40f00000
 8001038:	429c0000 	.word	0x429c0000
 800103c:	423e0000 	.word	0x423e0000
 8001040:	41cc0000 	.word	0x41cc0000
 8001044:	41ac0000 	.word	0x41ac0000
 8001048:	44a28000 	.word	0x44a28000
 800104c:	40064fa0 	.word	0x40064fa0
 8001050:	41e40000 	.word	0x41e40000
 8001054:	421c0000 	.word	0x421c0000
                                                          }
                                                      }
                                                  }
                                              } else {
                                                  if (features[9] < 53.5) {
 8001058:	687b      	ldr	r3, [r7, #4]
 800105a:	3324      	adds	r3, #36	; 0x24
 800105c:	681b      	ldr	r3, [r3, #0]
 800105e:	4937      	ldr	r1, [pc, #220]	; (800113c <sonar_predict_tree_0+0xb14>)
 8001060:	1c18      	adds	r0, r3, #0
 8001062:	f7ff f8a1 	bl	80001a8 <__aeabi_fcmplt>
 8001066:	1e03      	subs	r3, r0, #0
 8001068:	d00c      	beq.n	8001084 <sonar_predict_tree_0+0xa5c>
                                                      if (features[4] < 12.5) {
 800106a:	687b      	ldr	r3, [r7, #4]
 800106c:	3310      	adds	r3, #16
 800106e:	681b      	ldr	r3, [r3, #0]
 8001070:	4933      	ldr	r1, [pc, #204]	; (8001140 <sonar_predict_tree_0+0xb18>)
 8001072:	1c18      	adds	r0, r3, #0
 8001074:	f7ff f898 	bl	80001a8 <__aeabi_fcmplt>
 8001078:	1e03      	subs	r3, r0, #0
 800107a:	d001      	beq.n	8001080 <sonar_predict_tree_0+0xa58>
                                                          return 0;
 800107c:	2300      	movs	r3, #0
 800107e:	e059      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                      } else {
                                                          return 1;
 8001080:	2301      	movs	r3, #1
 8001082:	e057      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                      }
                                                  } else {
                                                      return 1;
 8001084:	2301      	movs	r3, #1
 8001086:	e055      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                                  }
                                              }
                                          }
                                      } else {
                                          if (features[9] < 110.5) {
 8001088:	687b      	ldr	r3, [r7, #4]
 800108a:	3324      	adds	r3, #36	; 0x24
 800108c:	681b      	ldr	r3, [r3, #0]
 800108e:	492d      	ldr	r1, [pc, #180]	; (8001144 <sonar_predict_tree_0+0xb1c>)
 8001090:	1c18      	adds	r0, r3, #0
 8001092:	f7ff f889 	bl	80001a8 <__aeabi_fcmplt>
 8001096:	1e03      	subs	r3, r0, #0
 8001098:	d00c      	beq.n	80010b4 <sonar_predict_tree_0+0xa8c>
                                              if (features[4] < 2.5) {
 800109a:	687b      	ldr	r3, [r7, #4]
 800109c:	3310      	adds	r3, #16
 800109e:	681b      	ldr	r3, [r3, #0]
 80010a0:	4929      	ldr	r1, [pc, #164]	; (8001148 <sonar_predict_tree_0+0xb20>)
 80010a2:	1c18      	adds	r0, r3, #0
 80010a4:	f7ff f880 	bl	80001a8 <__aeabi_fcmplt>
 80010a8:	1e03      	subs	r3, r0, #0
 80010aa:	d001      	beq.n	80010b0 <sonar_predict_tree_0+0xa88>
                                                  return 0;
 80010ac:	2300      	movs	r3, #0
 80010ae:	e041      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                              } else {
                                                  return 1;
 80010b0:	2301      	movs	r3, #1
 80010b2:	e03f      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                              }
                                          } else {
                                              return 1;
 80010b4:	2301      	movs	r3, #1
 80010b6:	e03d      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                          }
                                      }
                                  }
                              } else {
                                  return 0;
 80010b8:	2300      	movs	r3, #0
 80010ba:	e03b      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                              }
                          }
                      }
                  } else {
                      if (features[10] < 0.584865003824234) {
 80010bc:	687b      	ldr	r3, [r7, #4]
 80010be:	3328      	adds	r3, #40	; 0x28
 80010c0:	681b      	ldr	r3, [r3, #0]
 80010c2:	1c18      	adds	r0, r3, #0
 80010c4:	f7ff fa40 	bl	8000548 <__aeabi_f2d>
 80010c8:	22d0      	movs	r2, #208	; 0xd0
 80010ca:	0612      	lsls	r2, r2, #24
 80010cc:	4b1f      	ldr	r3, [pc, #124]	; (800114c <sonar_predict_tree_0+0xb24>)
 80010ce:	f7ff f831 	bl	8000134 <__aeabi_dcmplt>
 80010d2:	1e03      	subs	r3, r0, #0
 80010d4:	d001      	beq.n	80010da <sonar_predict_tree_0+0xab2>
                          return 0;
 80010d6:	2300      	movs	r3, #0
 80010d8:	e02c      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                      } else {
                          if (features[10] < 0.6520349979400635) {
 80010da:	687b      	ldr	r3, [r7, #4]
 80010dc:	3328      	adds	r3, #40	; 0x28
 80010de:	681b      	ldr	r3, [r3, #0]
 80010e0:	491b      	ldr	r1, [pc, #108]	; (8001150 <sonar_predict_tree_0+0xb28>)
 80010e2:	1c18      	adds	r0, r3, #0
 80010e4:	f7ff f860 	bl	80001a8 <__aeabi_fcmplt>
 80010e8:	1e03      	subs	r3, r0, #0
 80010ea:	d017      	beq.n	800111c <sonar_predict_tree_0+0xaf4>
                              if (features[1] < 9.5) {
 80010ec:	687b      	ldr	r3, [r7, #4]
 80010ee:	3304      	adds	r3, #4
 80010f0:	681b      	ldr	r3, [r3, #0]
 80010f2:	4918      	ldr	r1, [pc, #96]	; (8001154 <sonar_predict_tree_0+0xb2c>)
 80010f4:	1c18      	adds	r0, r3, #0
 80010f6:	f7ff f857 	bl	80001a8 <__aeabi_fcmplt>
 80010fa:	1e03      	subs	r3, r0, #0
 80010fc:	d001      	beq.n	8001102 <sonar_predict_tree_0+0xada>
                                  return 1;
 80010fe:	2301      	movs	r3, #1
 8001100:	e018      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                              } else {
                                  if (features[1] < 18.5) {
 8001102:	687b      	ldr	r3, [r7, #4]
 8001104:	3304      	adds	r3, #4
 8001106:	681b      	ldr	r3, [r3, #0]
 8001108:	4913      	ldr	r1, [pc, #76]	; (8001158 <sonar_predict_tree_0+0xb30>)
 800110a:	1c18      	adds	r0, r3, #0
 800110c:	f7ff f84c 	bl	80001a8 <__aeabi_fcmplt>
 8001110:	1e03      	subs	r3, r0, #0
 8001112:	d001      	beq.n	8001118 <sonar_predict_tree_0+0xaf0>
                                      return 0;
 8001114:	2300      	movs	r3, #0
 8001116:	e00d      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                  } else {
                                      return 0;
 8001118:	2300      	movs	r3, #0
 800111a:	e00b      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                                  }
                              }
                          } else {
                              if (features[1] < 19.5) {
 800111c:	687b      	ldr	r3, [r7, #4]
 800111e:	3304      	adds	r3, #4
 8001120:	681b      	ldr	r3, [r3, #0]
 8001122:	490e      	ldr	r1, [pc, #56]	; (800115c <sonar_predict_tree_0+0xb34>)
 8001124:	1c18      	adds	r0, r3, #0
 8001126:	f7ff f83f 	bl	80001a8 <__aeabi_fcmplt>
 800112a:	1e03      	subs	r3, r0, #0
 800112c:	d001      	beq.n	8001132 <sonar_predict_tree_0+0xb0a>
                                  return 0;
 800112e:	2300      	movs	r3, #0
 8001130:	e000      	b.n	8001134 <sonar_predict_tree_0+0xb0c>
                              } else {
                                  return 0;
 8001132:	2300      	movs	r3, #0
                          }
                      }
                  }
              }
          }
        }
 8001134:	0018      	movs	r0, r3
 8001136:	46bd      	mov	sp, r7
 8001138:	b002      	add	sp, #8
 800113a:	bd80      	pop	{r7, pc}
 800113c:	42560000 	.word	0x42560000
 8001140:	41480000 	.word	0x41480000
 8001144:	42dd0000 	.word	0x42dd0000
 8001148:	40200000 	.word	0x40200000
 800114c:	3fe2b736 	.word	0x3fe2b736
 8001150:	3f26ebc4 	.word	0x3f26ebc4
 8001154:	41180000 	.word	0x41180000
 8001158:	41940000 	.word	0x41940000
 800115c:	419c0000 	.word	0x419c0000

08001160 <sonar_predict>:
        

int32_t sonar_predict(const float *features, int32_t features_length) {
 8001160:	b580      	push	{r7, lr}
 8001162:	b088      	sub	sp, #32
 8001164:	af00      	add	r7, sp, #0
 8001166:	6078      	str	r0, [r7, #4]
 8001168:	6039      	str	r1, [r7, #0]

        int32_t votes[2] = {0,};
 800116a:	2308      	movs	r3, #8
 800116c:	18fb      	adds	r3, r7, r3
 800116e:	0018      	movs	r0, r3
 8001170:	2308      	movs	r3, #8
 8001172:	001a      	movs	r2, r3
 8001174:	2100      	movs	r1, #0
 8001176:	f000 fcc2 	bl	8001afe <memset>
        int32_t _class = -1;
 800117a:	2301      	movs	r3, #1
 800117c:	425b      	negs	r3, r3
 800117e:	613b      	str	r3, [r7, #16]

        _class = sonar_predict_tree_0(features, features_length); votes[_class] += 1;
 8001180:	683a      	ldr	r2, [r7, #0]
 8001182:	687b      	ldr	r3, [r7, #4]
 8001184:	0011      	movs	r1, r2
 8001186:	0018      	movs	r0, r3
 8001188:	f7ff fa4e 	bl	8000628 <sonar_predict_tree_0>
 800118c:	0003      	movs	r3, r0
 800118e:	613b      	str	r3, [r7, #16]
 8001190:	2308      	movs	r3, #8
 8001192:	18fb      	adds	r3, r7, r3
 8001194:	693a      	ldr	r2, [r7, #16]
 8001196:	0092      	lsls	r2, r2, #2
 8001198:	58d3      	ldr	r3, [r2, r3]
 800119a:	1c59      	adds	r1, r3, #1
 800119c:	2308      	movs	r3, #8
 800119e:	18fb      	adds	r3, r7, r3
 80011a0:	693a      	ldr	r2, [r7, #16]
 80011a2:	0092      	lsls	r2, r2, #2
 80011a4:	50d1      	str	r1, [r2, r3]
    
        int32_t most_voted_class = -1;
 80011a6:	2301      	movs	r3, #1
 80011a8:	425b      	negs	r3, r3
 80011aa:	61fb      	str	r3, [r7, #28]
        int32_t most_voted_votes = 0;
 80011ac:	2300      	movs	r3, #0
 80011ae:	61bb      	str	r3, [r7, #24]
        for (int32_t i=0; i<2; i++) {
 80011b0:	2300      	movs	r3, #0
 80011b2:	617b      	str	r3, [r7, #20]
 80011b4:	e012      	b.n	80011dc <sonar_predict+0x7c>

            if (votes[i] > most_voted_votes) {
 80011b6:	2308      	movs	r3, #8
 80011b8:	18fb      	adds	r3, r7, r3
 80011ba:	697a      	ldr	r2, [r7, #20]
 80011bc:	0092      	lsls	r2, r2, #2
 80011be:	58d2      	ldr	r2, [r2, r3]
 80011c0:	69bb      	ldr	r3, [r7, #24]
 80011c2:	429a      	cmp	r2, r3
 80011c4:	dd07      	ble.n	80011d6 <sonar_predict+0x76>
                most_voted_class = i;
 80011c6:	697b      	ldr	r3, [r7, #20]
 80011c8:	61fb      	str	r3, [r7, #28]
                most_voted_votes = votes[i];
 80011ca:	2308      	movs	r3, #8
 80011cc:	18fb      	adds	r3, r7, r3
 80011ce:	697a      	ldr	r2, [r7, #20]
 80011d0:	0092      	lsls	r2, r2, #2
 80011d2:	58d3      	ldr	r3, [r2, r3]
 80011d4:	61bb      	str	r3, [r7, #24]
        for (int32_t i=0; i<2; i++) {
 80011d6:	697b      	ldr	r3, [r7, #20]
 80011d8:	3301      	adds	r3, #1
 80011da:	617b      	str	r3, [r7, #20]
 80011dc:	697b      	ldr	r3, [r7, #20]
 80011de:	2b01      	cmp	r3, #1
 80011e0:	dde9      	ble.n	80011b6 <sonar_predict+0x56>
            }
        }
        return most_voted_class;
 80011e2:	69fb      	ldr	r3, [r7, #28]
    }
 80011e4:	0018      	movs	r0, r3
 80011e6:	46bd      	mov	sp, r7
 80011e8:	b008      	add	sp, #32
 80011ea:	bd80      	pop	{r7, pc}

080011ec <main>:
**  Abstract: main program
**
**===========================================================================
*/
int main(void)
{
 80011ec:	b590      	push	{r4, r7, lr}
 80011ee:	4cfe      	ldr	r4, [pc, #1016]	; (80015e8 <main+0x3fc>)
 80011f0:	44a5      	add	sp, r4
 80011f2:	af00      	add	r7, sp, #0
	//setup gpio
	//========================
	// enable clock for push-buttons
	 RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 80011f4:	4bfd      	ldr	r3, [pc, #1012]	; (80015ec <main+0x400>)
 80011f6:	4afd      	ldr	r2, [pc, #1012]	; (80015ec <main+0x400>)
 80011f8:	6952      	ldr	r2, [r2, #20]
 80011fa:	2180      	movs	r1, #128	; 0x80
 80011fc:	02c9      	lsls	r1, r1, #11
 80011fe:	430a      	orrs	r2, r1
 8001200:	615a      	str	r2, [r3, #20]
	// set pins B0-B7, B10-B11 to GPIO outputs, GPIOB_MODERx = 01
	 GPIOB->MODER |= (GPIO_MODER_MODER0_0|GPIO_MODER_MODER1_0| GPIO_MODER_MODER2_0|GPIO_MODER_MODER3_0|GPIO_MODER_MODER4_0| GPIO_MODER_MODER5_0|GPIO_MODER_MODER6_0|GPIO_MODER_MODER7_0| GPIO_MODER_MODER10_0| GPIO_MODER_MODER11_0);
 8001202:	4bfb      	ldr	r3, [pc, #1004]	; (80015f0 <main+0x404>)
 8001204:	4afa      	ldr	r2, [pc, #1000]	; (80015f0 <main+0x404>)
 8001206:	6812      	ldr	r2, [r2, #0]
 8001208:	49fa      	ldr	r1, [pc, #1000]	; (80015f4 <main+0x408>)
 800120a:	430a      	orrs	r2, r1
 800120c:	601a      	str	r2, [r3, #0]
	 // load a bit pattern to entire output register, GPIOB_ODR
	 GPIOB->ODR = 0;
 800120e:	4bf8      	ldr	r3, [pc, #992]	; (80015f0 <main+0x404>)
 8001210:	2200      	movs	r2, #0
 8001212:	615a      	str	r2, [r3, #20]
	 //===============================
  uint32_t i = 0;
 8001214:	2300      	movs	r3, #0
 8001216:	4af8      	ldr	r2, [pc, #992]	; (80015f8 <main+0x40c>)
 8001218:	18ba      	adds	r2, r7, r2
 800121a:	6013      	str	r3, [r2, #0]
  float values[11] = {1,1,26,0,0,0,0,0,0,3,0.044989999999999995};//A
 800121c:	4bf7      	ldr	r3, [pc, #988]	; (80015fc <main+0x410>)
 800121e:	22a6      	movs	r2, #166	; 0xa6
 8001220:	00d2      	lsls	r2, r2, #3
 8001222:	4694      	mov	ip, r2
 8001224:	44bc      	add	ip, r7
 8001226:	4463      	add	r3, ip
 8001228:	4af5      	ldr	r2, [pc, #980]	; (8001600 <main+0x414>)
 800122a:	ca13      	ldmia	r2!, {r0, r1, r4}
 800122c:	c313      	stmia	r3!, {r0, r1, r4}
 800122e:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001230:	c313      	stmia	r3!, {r0, r1, r4}
 8001232:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001234:	c313      	stmia	r3!, {r0, r1, r4}
 8001236:	ca03      	ldmia	r2!, {r0, r1}
 8001238:	c303      	stmia	r3!, {r0, r1}
  Classify(values);
 800123a:	1d3b      	adds	r3, r7, #4
 800123c:	0018      	movs	r0, r3
 800123e:	f000 fba7 	bl	8001990 <Classify>
  Delay();
 8001242:	f000 fb89 	bl	8001958 <Delay>

  memcpy(values, (float[]){0.0,0.0,3.0,1.0,0.0,0.0,1.0,42.0,0.0,0.0,0.07378},11);//N
 8001246:	4bef      	ldr	r3, [pc, #956]	; (8001604 <main+0x418>)
 8001248:	22a6      	movs	r2, #166	; 0xa6
 800124a:	00d2      	lsls	r2, r2, #3
 800124c:	4694      	mov	ip, r2
 800124e:	44bc      	add	ip, r7
 8001250:	4463      	add	r3, ip
 8001252:	4aed      	ldr	r2, [pc, #948]	; (8001608 <main+0x41c>)
 8001254:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001256:	c313      	stmia	r3!, {r0, r1, r4}
 8001258:	ca13      	ldmia	r2!, {r0, r1, r4}
 800125a:	c313      	stmia	r3!, {r0, r1, r4}
 800125c:	ca13      	ldmia	r2!, {r0, r1, r4}
 800125e:	c313      	stmia	r3!, {r0, r1, r4}
 8001260:	ca03      	ldmia	r2!, {r0, r1}
 8001262:	c303      	stmia	r3!, {r0, r1}
 8001264:	2330      	movs	r3, #48	; 0x30
 8001266:	18f9      	adds	r1, r7, r3
 8001268:	1d3b      	adds	r3, r7, #4
 800126a:	220b      	movs	r2, #11
 800126c:	0018      	movs	r0, r3
 800126e:	f000 fc3d 	bl	8001aec <memcpy>
  Classify(values);
 8001272:	1d3b      	adds	r3, r7, #4
 8001274:	0018      	movs	r0, r3
 8001276:	f000 fb8b 	bl	8001990 <Classify>
  Delay();
 800127a:	f000 fb6d 	bl	8001958 <Delay>


  memcpy(values, (float[]){0.0,0.0,8.0,1.0,0.0,0.0,1.0,120.0,0.0,0.0,0.20961},11);//A
 800127e:	4be3      	ldr	r3, [pc, #908]	; (800160c <main+0x420>)
 8001280:	22a6      	movs	r2, #166	; 0xa6
 8001282:	00d2      	lsls	r2, r2, #3
 8001284:	4694      	mov	ip, r2
 8001286:	44bc      	add	ip, r7
 8001288:	4463      	add	r3, ip
 800128a:	4ae1      	ldr	r2, [pc, #900]	; (8001610 <main+0x424>)
 800128c:	ca13      	ldmia	r2!, {r0, r1, r4}
 800128e:	c313      	stmia	r3!, {r0, r1, r4}
 8001290:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001292:	c313      	stmia	r3!, {r0, r1, r4}
 8001294:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001296:	c313      	stmia	r3!, {r0, r1, r4}
 8001298:	ca03      	ldmia	r2!, {r0, r1}
 800129a:	c303      	stmia	r3!, {r0, r1}
 800129c:	235c      	movs	r3, #92	; 0x5c
 800129e:	18f9      	adds	r1, r7, r3
 80012a0:	1d3b      	adds	r3, r7, #4
 80012a2:	220b      	movs	r2, #11
 80012a4:	0018      	movs	r0, r3
 80012a6:	f000 fc21 	bl	8001aec <memcpy>
  Classify(values);
 80012aa:	1d3b      	adds	r3, r7, #4
 80012ac:	0018      	movs	r0, r3
 80012ae:	f000 fb6f 	bl	8001990 <Classify>
  Delay();
 80012b2:	f000 fb51 	bl	8001958 <Delay>


  memcpy(values, (float[]){0.0,0.0,4.0,1.0,0.0,0.0,1.0,22.0,0.0,0.0,0.04189},11);//N
 80012b6:	4bd7      	ldr	r3, [pc, #860]	; (8001614 <main+0x428>)
 80012b8:	22a6      	movs	r2, #166	; 0xa6
 80012ba:	00d2      	lsls	r2, r2, #3
 80012bc:	4694      	mov	ip, r2
 80012be:	44bc      	add	ip, r7
 80012c0:	4463      	add	r3, ip
 80012c2:	4ad5      	ldr	r2, [pc, #852]	; (8001618 <main+0x42c>)
 80012c4:	ca13      	ldmia	r2!, {r0, r1, r4}
 80012c6:	c313      	stmia	r3!, {r0, r1, r4}
 80012c8:	ca13      	ldmia	r2!, {r0, r1, r4}
 80012ca:	c313      	stmia	r3!, {r0, r1, r4}
 80012cc:	ca13      	ldmia	r2!, {r0, r1, r4}
 80012ce:	c313      	stmia	r3!, {r0, r1, r4}
 80012d0:	ca03      	ldmia	r2!, {r0, r1}
 80012d2:	c303      	stmia	r3!, {r0, r1}
 80012d4:	2388      	movs	r3, #136	; 0x88
 80012d6:	18f9      	adds	r1, r7, r3
 80012d8:	1d3b      	adds	r3, r7, #4
 80012da:	220b      	movs	r2, #11
 80012dc:	0018      	movs	r0, r3
 80012de:	f000 fc05 	bl	8001aec <memcpy>
  Classify(values);
 80012e2:	1d3b      	adds	r3, r7, #4
 80012e4:	0018      	movs	r0, r3
 80012e6:	f000 fb53 	bl	8001990 <Classify>
  Delay();
 80012ea:	f000 fb35 	bl	8001958 <Delay>


  memcpy(values, (float[]){1,1,26,0,0,0,0,0,0,3,0.044989999999999995},11);//A
 80012ee:	4bcb      	ldr	r3, [pc, #812]	; (800161c <main+0x430>)
 80012f0:	22a6      	movs	r2, #166	; 0xa6
 80012f2:	00d2      	lsls	r2, r2, #3
 80012f4:	4694      	mov	ip, r2
 80012f6:	44bc      	add	ip, r7
 80012f8:	4463      	add	r3, ip
 80012fa:	4ac1      	ldr	r2, [pc, #772]	; (8001600 <main+0x414>)
 80012fc:	ca13      	ldmia	r2!, {r0, r1, r4}
 80012fe:	c313      	stmia	r3!, {r0, r1, r4}
 8001300:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001302:	c313      	stmia	r3!, {r0, r1, r4}
 8001304:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001306:	c313      	stmia	r3!, {r0, r1, r4}
 8001308:	ca03      	ldmia	r2!, {r0, r1}
 800130a:	c303      	stmia	r3!, {r0, r1}
 800130c:	23b4      	movs	r3, #180	; 0xb4
 800130e:	18f9      	adds	r1, r7, r3
 8001310:	1d3b      	adds	r3, r7, #4
 8001312:	220b      	movs	r2, #11
 8001314:	0018      	movs	r0, r3
 8001316:	f000 fbe9 	bl	8001aec <memcpy>
   Classify(values);
 800131a:	1d3b      	adds	r3, r7, #4
 800131c:	0018      	movs	r0, r3
 800131e:	f000 fb37 	bl	8001990 <Classify>
   Delay();
 8001322:	f000 fb19 	bl	8001958 <Delay>




  memcpy(values, (float[]){0.0,0.0,4.0,1.0,0.0,0.0,1.0,22.0,0.0,0.0,0.04189},11);//N
 8001326:	4bbe      	ldr	r3, [pc, #760]	; (8001620 <main+0x434>)
 8001328:	22a6      	movs	r2, #166	; 0xa6
 800132a:	00d2      	lsls	r2, r2, #3
 800132c:	4694      	mov	ip, r2
 800132e:	44bc      	add	ip, r7
 8001330:	4463      	add	r3, ip
 8001332:	4ab9      	ldr	r2, [pc, #740]	; (8001618 <main+0x42c>)
 8001334:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001336:	c313      	stmia	r3!, {r0, r1, r4}
 8001338:	ca13      	ldmia	r2!, {r0, r1, r4}
 800133a:	c313      	stmia	r3!, {r0, r1, r4}
 800133c:	ca13      	ldmia	r2!, {r0, r1, r4}
 800133e:	c313      	stmia	r3!, {r0, r1, r4}
 8001340:	ca03      	ldmia	r2!, {r0, r1}
 8001342:	c303      	stmia	r3!, {r0, r1}
 8001344:	23e0      	movs	r3, #224	; 0xe0
 8001346:	18f9      	adds	r1, r7, r3
 8001348:	1d3b      	adds	r3, r7, #4
 800134a:	220b      	movs	r2, #11
 800134c:	0018      	movs	r0, r3
 800134e:	f000 fbcd 	bl	8001aec <memcpy>
  Classify(values);
 8001352:	1d3b      	adds	r3, r7, #4
 8001354:	0018      	movs	r0, r3
 8001356:	f000 fb1b 	bl	8001990 <Classify>
  Delay();
 800135a:	f000 fafd 	bl	8001958 <Delay>


  memcpy(values, (float[]){1,1,26,0,0,0,0,0,0,3,0.044989999999999995},11);//A
 800135e:	4bb1      	ldr	r3, [pc, #708]	; (8001624 <main+0x438>)
 8001360:	22a6      	movs	r2, #166	; 0xa6
 8001362:	00d2      	lsls	r2, r2, #3
 8001364:	4694      	mov	ip, r2
 8001366:	44bc      	add	ip, r7
 8001368:	4463      	add	r3, ip
 800136a:	4aa5      	ldr	r2, [pc, #660]	; (8001600 <main+0x414>)
 800136c:	ca13      	ldmia	r2!, {r0, r1, r4}
 800136e:	c313      	stmia	r3!, {r0, r1, r4}
 8001370:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001372:	c313      	stmia	r3!, {r0, r1, r4}
 8001374:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001376:	c313      	stmia	r3!, {r0, r1, r4}
 8001378:	ca03      	ldmia	r2!, {r0, r1}
 800137a:	c303      	stmia	r3!, {r0, r1}
 800137c:	2386      	movs	r3, #134	; 0x86
 800137e:	005b      	lsls	r3, r3, #1
 8001380:	18f9      	adds	r1, r7, r3
 8001382:	1d3b      	adds	r3, r7, #4
 8001384:	220b      	movs	r2, #11
 8001386:	0018      	movs	r0, r3
 8001388:	f000 fbb0 	bl	8001aec <memcpy>
   Classify(values);
 800138c:	1d3b      	adds	r3, r7, #4
 800138e:	0018      	movs	r0, r3
 8001390:	f000 fafe 	bl	8001990 <Classify>
   Delay();
 8001394:	f000 fae0 	bl	8001958 <Delay>




  memcpy(values, (float[]){0.0,0.0,4.0,1.0,0.0,0.0,1.0,22.0,0.0,0.0,0.04189},11);//N
 8001398:	4ba3      	ldr	r3, [pc, #652]	; (8001628 <main+0x43c>)
 800139a:	22a6      	movs	r2, #166	; 0xa6
 800139c:	00d2      	lsls	r2, r2, #3
 800139e:	4694      	mov	ip, r2
 80013a0:	44bc      	add	ip, r7
 80013a2:	4463      	add	r3, ip
 80013a4:	4a9c      	ldr	r2, [pc, #624]	; (8001618 <main+0x42c>)
 80013a6:	ca13      	ldmia	r2!, {r0, r1, r4}
 80013a8:	c313      	stmia	r3!, {r0, r1, r4}
 80013aa:	ca13      	ldmia	r2!, {r0, r1, r4}
 80013ac:	c313      	stmia	r3!, {r0, r1, r4}
 80013ae:	ca13      	ldmia	r2!, {r0, r1, r4}
 80013b0:	c313      	stmia	r3!, {r0, r1, r4}
 80013b2:	ca03      	ldmia	r2!, {r0, r1}
 80013b4:	c303      	stmia	r3!, {r0, r1}
 80013b6:	239c      	movs	r3, #156	; 0x9c
 80013b8:	005b      	lsls	r3, r3, #1
 80013ba:	18f9      	adds	r1, r7, r3
 80013bc:	1d3b      	adds	r3, r7, #4
 80013be:	220b      	movs	r2, #11
 80013c0:	0018      	movs	r0, r3
 80013c2:	f000 fb93 	bl	8001aec <memcpy>
  Classify(values);
 80013c6:	1d3b      	adds	r3, r7, #4
 80013c8:	0018      	movs	r0, r3
 80013ca:	f000 fae1 	bl	8001990 <Classify>
  Delay();
 80013ce:	f000 fac3 	bl	8001958 <Delay>


  memcpy(values, (float[]){1,1,26,0,0,0,0,0,0,3,0.044989999999999995},11);//A
 80013d2:	4b96      	ldr	r3, [pc, #600]	; (800162c <main+0x440>)
 80013d4:	22a6      	movs	r2, #166	; 0xa6
 80013d6:	00d2      	lsls	r2, r2, #3
 80013d8:	4694      	mov	ip, r2
 80013da:	44bc      	add	ip, r7
 80013dc:	4463      	add	r3, ip
 80013de:	4a88      	ldr	r2, [pc, #544]	; (8001600 <main+0x414>)
 80013e0:	ca13      	ldmia	r2!, {r0, r1, r4}
 80013e2:	c313      	stmia	r3!, {r0, r1, r4}
 80013e4:	ca13      	ldmia	r2!, {r0, r1, r4}
 80013e6:	c313      	stmia	r3!, {r0, r1, r4}
 80013e8:	ca13      	ldmia	r2!, {r0, r1, r4}
 80013ea:	c313      	stmia	r3!, {r0, r1, r4}
 80013ec:	ca03      	ldmia	r2!, {r0, r1}
 80013ee:	c303      	stmia	r3!, {r0, r1}
 80013f0:	23b2      	movs	r3, #178	; 0xb2
 80013f2:	005b      	lsls	r3, r3, #1
 80013f4:	18f9      	adds	r1, r7, r3
 80013f6:	1d3b      	adds	r3, r7, #4
 80013f8:	220b      	movs	r2, #11
 80013fa:	0018      	movs	r0, r3
 80013fc:	f000 fb76 	bl	8001aec <memcpy>
   Classify(values);
 8001400:	1d3b      	adds	r3, r7, #4
 8001402:	0018      	movs	r0, r3
 8001404:	f000 fac4 	bl	8001990 <Classify>
   Delay();
 8001408:	f000 faa6 	bl	8001958 <Delay>




  memcpy(values, (float[]){0.0,0.0,4.0,1.0,0.0,0.0,1.0,22.0,0.0,0.0,0.04189},11);//N
 800140c:	4b88      	ldr	r3, [pc, #544]	; (8001630 <main+0x444>)
 800140e:	22a6      	movs	r2, #166	; 0xa6
 8001410:	00d2      	lsls	r2, r2, #3
 8001412:	4694      	mov	ip, r2
 8001414:	44bc      	add	ip, r7
 8001416:	4463      	add	r3, ip
 8001418:	4a7f      	ldr	r2, [pc, #508]	; (8001618 <main+0x42c>)
 800141a:	ca13      	ldmia	r2!, {r0, r1, r4}
 800141c:	c313      	stmia	r3!, {r0, r1, r4}
 800141e:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001420:	c313      	stmia	r3!, {r0, r1, r4}
 8001422:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001424:	c313      	stmia	r3!, {r0, r1, r4}
 8001426:	ca03      	ldmia	r2!, {r0, r1}
 8001428:	c303      	stmia	r3!, {r0, r1}
 800142a:	23c8      	movs	r3, #200	; 0xc8
 800142c:	005b      	lsls	r3, r3, #1
 800142e:	18f9      	adds	r1, r7, r3
 8001430:	1d3b      	adds	r3, r7, #4
 8001432:	220b      	movs	r2, #11
 8001434:	0018      	movs	r0, r3
 8001436:	f000 fb59 	bl	8001aec <memcpy>
  Classify(values);
 800143a:	1d3b      	adds	r3, r7, #4
 800143c:	0018      	movs	r0, r3
 800143e:	f000 faa7 	bl	8001990 <Classify>
  Delay();
 8001442:	f000 fa89 	bl	8001958 <Delay>


  memcpy(values, (float[]){1,1,26,0,0,0,0,0,0,3,0.044989999999999995},11);//A
 8001446:	4b7b      	ldr	r3, [pc, #492]	; (8001634 <main+0x448>)
 8001448:	22a6      	movs	r2, #166	; 0xa6
 800144a:	00d2      	lsls	r2, r2, #3
 800144c:	4694      	mov	ip, r2
 800144e:	44bc      	add	ip, r7
 8001450:	4463      	add	r3, ip
 8001452:	4a6b      	ldr	r2, [pc, #428]	; (8001600 <main+0x414>)
 8001454:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001456:	c313      	stmia	r3!, {r0, r1, r4}
 8001458:	ca13      	ldmia	r2!, {r0, r1, r4}
 800145a:	c313      	stmia	r3!, {r0, r1, r4}
 800145c:	ca13      	ldmia	r2!, {r0, r1, r4}
 800145e:	c313      	stmia	r3!, {r0, r1, r4}
 8001460:	ca03      	ldmia	r2!, {r0, r1}
 8001462:	c303      	stmia	r3!, {r0, r1}
 8001464:	23de      	movs	r3, #222	; 0xde
 8001466:	005b      	lsls	r3, r3, #1
 8001468:	18f9      	adds	r1, r7, r3
 800146a:	1d3b      	adds	r3, r7, #4
 800146c:	220b      	movs	r2, #11
 800146e:	0018      	movs	r0, r3
 8001470:	f000 fb3c 	bl	8001aec <memcpy>
   Classify(values);
 8001474:	1d3b      	adds	r3, r7, #4
 8001476:	0018      	movs	r0, r3
 8001478:	f000 fa8a 	bl	8001990 <Classify>
   Delay();
 800147c:	f000 fa6c 	bl	8001958 <Delay>




  memcpy(values, (float[]){0.0,0.0,4.0,1.0,0.0,0.0,1.0,22.0,0.0,0.0,0.04189},11);//N
 8001480:	4b6d      	ldr	r3, [pc, #436]	; (8001638 <main+0x44c>)
 8001482:	22a6      	movs	r2, #166	; 0xa6
 8001484:	00d2      	lsls	r2, r2, #3
 8001486:	4694      	mov	ip, r2
 8001488:	44bc      	add	ip, r7
 800148a:	4463      	add	r3, ip
 800148c:	4a62      	ldr	r2, [pc, #392]	; (8001618 <main+0x42c>)
 800148e:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001490:	c313      	stmia	r3!, {r0, r1, r4}
 8001492:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001494:	c313      	stmia	r3!, {r0, r1, r4}
 8001496:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001498:	c313      	stmia	r3!, {r0, r1, r4}
 800149a:	ca03      	ldmia	r2!, {r0, r1}
 800149c:	c303      	stmia	r3!, {r0, r1}
 800149e:	23f4      	movs	r3, #244	; 0xf4
 80014a0:	005b      	lsls	r3, r3, #1
 80014a2:	18f9      	adds	r1, r7, r3
 80014a4:	1d3b      	adds	r3, r7, #4
 80014a6:	220b      	movs	r2, #11
 80014a8:	0018      	movs	r0, r3
 80014aa:	f000 fb1f 	bl	8001aec <memcpy>
  Classify(values);
 80014ae:	1d3b      	adds	r3, r7, #4
 80014b0:	0018      	movs	r0, r3
 80014b2:	f000 fa6d 	bl	8001990 <Classify>
  Delay();
 80014b6:	f000 fa4f 	bl	8001958 <Delay>


  memcpy(values, (float[]){1,1,26,0,0,0,0,0,0,3,0.044989999999999995},11);//A
 80014ba:	4b60      	ldr	r3, [pc, #384]	; (800163c <main+0x450>)
 80014bc:	22a6      	movs	r2, #166	; 0xa6
 80014be:	00d2      	lsls	r2, r2, #3
 80014c0:	4694      	mov	ip, r2
 80014c2:	44bc      	add	ip, r7
 80014c4:	4463      	add	r3, ip
 80014c6:	4a4e      	ldr	r2, [pc, #312]	; (8001600 <main+0x414>)
 80014c8:	ca13      	ldmia	r2!, {r0, r1, r4}
 80014ca:	c313      	stmia	r3!, {r0, r1, r4}
 80014cc:	ca13      	ldmia	r2!, {r0, r1, r4}
 80014ce:	c313      	stmia	r3!, {r0, r1, r4}
 80014d0:	ca13      	ldmia	r2!, {r0, r1, r4}
 80014d2:	c313      	stmia	r3!, {r0, r1, r4}
 80014d4:	ca03      	ldmia	r2!, {r0, r1}
 80014d6:	c303      	stmia	r3!, {r0, r1}
 80014d8:	2385      	movs	r3, #133	; 0x85
 80014da:	009b      	lsls	r3, r3, #2
 80014dc:	18f9      	adds	r1, r7, r3
 80014de:	1d3b      	adds	r3, r7, #4
 80014e0:	220b      	movs	r2, #11
 80014e2:	0018      	movs	r0, r3
 80014e4:	f000 fb02 	bl	8001aec <memcpy>
   Classify(values);
 80014e8:	1d3b      	adds	r3, r7, #4
 80014ea:	0018      	movs	r0, r3
 80014ec:	f000 fa50 	bl	8001990 <Classify>
   Delay();
 80014f0:	f000 fa32 	bl	8001958 <Delay>




  memcpy(values, (float[]){0.0,0.0,4.0,1.0,0.0,0.0,1.0,22.0,0.0,0.0,0.04189},11);//N
 80014f4:	4b52      	ldr	r3, [pc, #328]	; (8001640 <main+0x454>)
 80014f6:	22a6      	movs	r2, #166	; 0xa6
 80014f8:	00d2      	lsls	r2, r2, #3
 80014fa:	4694      	mov	ip, r2
 80014fc:	44bc      	add	ip, r7
 80014fe:	4463      	add	r3, ip
 8001500:	4a45      	ldr	r2, [pc, #276]	; (8001618 <main+0x42c>)
 8001502:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001504:	c313      	stmia	r3!, {r0, r1, r4}
 8001506:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001508:	c313      	stmia	r3!, {r0, r1, r4}
 800150a:	ca13      	ldmia	r2!, {r0, r1, r4}
 800150c:	c313      	stmia	r3!, {r0, r1, r4}
 800150e:	ca03      	ldmia	r2!, {r0, r1}
 8001510:	c303      	stmia	r3!, {r0, r1}
 8001512:	2390      	movs	r3, #144	; 0x90
 8001514:	009b      	lsls	r3, r3, #2
 8001516:	18f9      	adds	r1, r7, r3
 8001518:	1d3b      	adds	r3, r7, #4
 800151a:	220b      	movs	r2, #11
 800151c:	0018      	movs	r0, r3
 800151e:	f000 fae5 	bl	8001aec <memcpy>
  Classify(values);
 8001522:	1d3b      	adds	r3, r7, #4
 8001524:	0018      	movs	r0, r3
 8001526:	f000 fa33 	bl	8001990 <Classify>
  Delay();
 800152a:	f000 fa15 	bl	8001958 <Delay>


  memcpy(values, (float[]){1,1,26,0,0,0,0,0,0,3,0.044989999999999995},11);//A
 800152e:	4b45      	ldr	r3, [pc, #276]	; (8001644 <main+0x458>)
 8001530:	22a6      	movs	r2, #166	; 0xa6
 8001532:	00d2      	lsls	r2, r2, #3
 8001534:	4694      	mov	ip, r2
 8001536:	44bc      	add	ip, r7
 8001538:	4463      	add	r3, ip
 800153a:	4a31      	ldr	r2, [pc, #196]	; (8001600 <main+0x414>)
 800153c:	ca13      	ldmia	r2!, {r0, r1, r4}
 800153e:	c313      	stmia	r3!, {r0, r1, r4}
 8001540:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001542:	c313      	stmia	r3!, {r0, r1, r4}
 8001544:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001546:	c313      	stmia	r3!, {r0, r1, r4}
 8001548:	ca03      	ldmia	r2!, {r0, r1}
 800154a:	c303      	stmia	r3!, {r0, r1}
 800154c:	239b      	movs	r3, #155	; 0x9b
 800154e:	009b      	lsls	r3, r3, #2
 8001550:	18f9      	adds	r1, r7, r3
 8001552:	1d3b      	adds	r3, r7, #4
 8001554:	220b      	movs	r2, #11
 8001556:	0018      	movs	r0, r3
 8001558:	f000 fac8 	bl	8001aec <memcpy>
   Classify(values);
 800155c:	1d3b      	adds	r3, r7, #4
 800155e:	0018      	movs	r0, r3
 8001560:	f000 fa16 	bl	8001990 <Classify>
   Delay();
 8001564:	f000 f9f8 	bl	8001958 <Delay>




  memcpy(values, (float[]){0.0,0.0,4.0,1.0,0.0,0.0,1.0,22.0,0.0,0.0,0.04189},11);//N
 8001568:	4b37      	ldr	r3, [pc, #220]	; (8001648 <main+0x45c>)
 800156a:	22a6      	movs	r2, #166	; 0xa6
 800156c:	00d2      	lsls	r2, r2, #3
 800156e:	4694      	mov	ip, r2
 8001570:	44bc      	add	ip, r7
 8001572:	4463      	add	r3, ip
 8001574:	4a28      	ldr	r2, [pc, #160]	; (8001618 <main+0x42c>)
 8001576:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001578:	c313      	stmia	r3!, {r0, r1, r4}
 800157a:	ca13      	ldmia	r2!, {r0, r1, r4}
 800157c:	c313      	stmia	r3!, {r0, r1, r4}
 800157e:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001580:	c313      	stmia	r3!, {r0, r1, r4}
 8001582:	ca03      	ldmia	r2!, {r0, r1}
 8001584:	c303      	stmia	r3!, {r0, r1}
 8001586:	23a6      	movs	r3, #166	; 0xa6
 8001588:	009b      	lsls	r3, r3, #2
 800158a:	18f9      	adds	r1, r7, r3
 800158c:	1d3b      	adds	r3, r7, #4
 800158e:	220b      	movs	r2, #11
 8001590:	0018      	movs	r0, r3
 8001592:	f000 faab 	bl	8001aec <memcpy>
  Classify(values);
 8001596:	1d3b      	adds	r3, r7, #4
 8001598:	0018      	movs	r0, r3
 800159a:	f000 f9f9 	bl	8001990 <Classify>
  Delay();
 800159e:	f000 f9db 	bl	8001958 <Delay>


  memcpy(values, (float[]){1,1,26,0,0,0,0,0,0,3,0.044989999999999995},11);//A
 80015a2:	4b2a      	ldr	r3, [pc, #168]	; (800164c <main+0x460>)
 80015a4:	22a6      	movs	r2, #166	; 0xa6
 80015a6:	00d2      	lsls	r2, r2, #3
 80015a8:	4694      	mov	ip, r2
 80015aa:	44bc      	add	ip, r7
 80015ac:	4463      	add	r3, ip
 80015ae:	4a14      	ldr	r2, [pc, #80]	; (8001600 <main+0x414>)
 80015b0:	ca13      	ldmia	r2!, {r0, r1, r4}
 80015b2:	c313      	stmia	r3!, {r0, r1, r4}
 80015b4:	ca13      	ldmia	r2!, {r0, r1, r4}
 80015b6:	c313      	stmia	r3!, {r0, r1, r4}
 80015b8:	ca13      	ldmia	r2!, {r0, r1, r4}
 80015ba:	c313      	stmia	r3!, {r0, r1, r4}
 80015bc:	ca03      	ldmia	r2!, {r0, r1}
 80015be:	c303      	stmia	r3!, {r0, r1}
 80015c0:	23b1      	movs	r3, #177	; 0xb1
 80015c2:	009b      	lsls	r3, r3, #2
 80015c4:	18f9      	adds	r1, r7, r3
 80015c6:	1d3b      	adds	r3, r7, #4
 80015c8:	220b      	movs	r2, #11
 80015ca:	0018      	movs	r0, r3
 80015cc:	f000 fa8e 	bl	8001aec <memcpy>
   Classify(values);
 80015d0:	1d3b      	adds	r3, r7, #4
 80015d2:	0018      	movs	r0, r3
 80015d4:	f000 f9dc 	bl	8001990 <Classify>
   Delay();
 80015d8:	f000 f9be 	bl	8001958 <Delay>




  memcpy(values, (float[]){0.0,0.0,4.0,1.0,0.0,0.0,1.0,22.0,0.0,0.0,0.04189},11);//N
 80015dc:	4b1c      	ldr	r3, [pc, #112]	; (8001650 <main+0x464>)
 80015de:	22a6      	movs	r2, #166	; 0xa6
 80015e0:	00d2      	lsls	r2, r2, #3
 80015e2:	4694      	mov	ip, r2
 80015e4:	44bc      	add	ip, r7
 80015e6:	e035      	b.n	8001654 <main+0x468>
 80015e8:	fffffacc 	.word	0xfffffacc
 80015ec:	40021000 	.word	0x40021000
 80015f0:	48000400 	.word	0x48000400
 80015f4:	00505555 	.word	0x00505555
 80015f8:	0000052c 	.word	0x0000052c
 80015fc:	fffffad4 	.word	0xfffffad4
 8001600:	08001b64 	.word	0x08001b64
 8001604:	fffffb00 	.word	0xfffffb00
 8001608:	08001b90 	.word	0x08001b90
 800160c:	fffffb2c 	.word	0xfffffb2c
 8001610:	08001bbc 	.word	0x08001bbc
 8001614:	fffffb58 	.word	0xfffffb58
 8001618:	08001be8 	.word	0x08001be8
 800161c:	fffffb84 	.word	0xfffffb84
 8001620:	fffffbb0 	.word	0xfffffbb0
 8001624:	fffffbdc 	.word	0xfffffbdc
 8001628:	fffffc08 	.word	0xfffffc08
 800162c:	fffffc34 	.word	0xfffffc34
 8001630:	fffffc60 	.word	0xfffffc60
 8001634:	fffffc8c 	.word	0xfffffc8c
 8001638:	fffffcb8 	.word	0xfffffcb8
 800163c:	fffffce4 	.word	0xfffffce4
 8001640:	fffffd10 	.word	0xfffffd10
 8001644:	fffffd3c 	.word	0xfffffd3c
 8001648:	fffffd68 	.word	0xfffffd68
 800164c:	fffffd94 	.word	0xfffffd94
 8001650:	fffffdc0 	.word	0xfffffdc0
 8001654:	4463      	add	r3, ip
 8001656:	4ab3      	ldr	r2, [pc, #716]	; (8001924 <main+0x738>)
 8001658:	ca13      	ldmia	r2!, {r0, r1, r4}
 800165a:	c313      	stmia	r3!, {r0, r1, r4}
 800165c:	ca13      	ldmia	r2!, {r0, r1, r4}
 800165e:	c313      	stmia	r3!, {r0, r1, r4}
 8001660:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001662:	c313      	stmia	r3!, {r0, r1, r4}
 8001664:	ca03      	ldmia	r2!, {r0, r1}
 8001666:	c303      	stmia	r3!, {r0, r1}
 8001668:	23bc      	movs	r3, #188	; 0xbc
 800166a:	009b      	lsls	r3, r3, #2
 800166c:	18f9      	adds	r1, r7, r3
 800166e:	1d3b      	adds	r3, r7, #4
 8001670:	220b      	movs	r2, #11
 8001672:	0018      	movs	r0, r3
 8001674:	f000 fa3a 	bl	8001aec <memcpy>
  Classify(values);
 8001678:	1d3b      	adds	r3, r7, #4
 800167a:	0018      	movs	r0, r3
 800167c:	f000 f988 	bl	8001990 <Classify>
  Delay();
 8001680:	f000 f96a 	bl	8001958 <Delay>


  memcpy(values, (float[]){1,1,26,0,0,0,0,0,0,3,0.044989999999999995},11);//A
 8001684:	4ba8      	ldr	r3, [pc, #672]	; (8001928 <main+0x73c>)
 8001686:	22a6      	movs	r2, #166	; 0xa6
 8001688:	00d2      	lsls	r2, r2, #3
 800168a:	4694      	mov	ip, r2
 800168c:	44bc      	add	ip, r7
 800168e:	4463      	add	r3, ip
 8001690:	4aa6      	ldr	r2, [pc, #664]	; (800192c <main+0x740>)
 8001692:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001694:	c313      	stmia	r3!, {r0, r1, r4}
 8001696:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001698:	c313      	stmia	r3!, {r0, r1, r4}
 800169a:	ca13      	ldmia	r2!, {r0, r1, r4}
 800169c:	c313      	stmia	r3!, {r0, r1, r4}
 800169e:	ca03      	ldmia	r2!, {r0, r1}
 80016a0:	c303      	stmia	r3!, {r0, r1}
 80016a2:	23c7      	movs	r3, #199	; 0xc7
 80016a4:	009b      	lsls	r3, r3, #2
 80016a6:	18f9      	adds	r1, r7, r3
 80016a8:	1d3b      	adds	r3, r7, #4
 80016aa:	220b      	movs	r2, #11
 80016ac:	0018      	movs	r0, r3
 80016ae:	f000 fa1d 	bl	8001aec <memcpy>
   Classify(values);
 80016b2:	1d3b      	adds	r3, r7, #4
 80016b4:	0018      	movs	r0, r3
 80016b6:	f000 f96b 	bl	8001990 <Classify>
   Delay();
 80016ba:	f000 f94d 	bl	8001958 <Delay>




  memcpy(values, (float[]){0.0,0.0,4.0,1.0,0.0,0.0,1.0,22.0,0.0,0.0,0.04189},11);//N
 80016be:	4b9c      	ldr	r3, [pc, #624]	; (8001930 <main+0x744>)
 80016c0:	22a6      	movs	r2, #166	; 0xa6
 80016c2:	00d2      	lsls	r2, r2, #3
 80016c4:	4694      	mov	ip, r2
 80016c6:	44bc      	add	ip, r7
 80016c8:	4463      	add	r3, ip
 80016ca:	4a96      	ldr	r2, [pc, #600]	; (8001924 <main+0x738>)
 80016cc:	ca13      	ldmia	r2!, {r0, r1, r4}
 80016ce:	c313      	stmia	r3!, {r0, r1, r4}
 80016d0:	ca13      	ldmia	r2!, {r0, r1, r4}
 80016d2:	c313      	stmia	r3!, {r0, r1, r4}
 80016d4:	ca13      	ldmia	r2!, {r0, r1, r4}
 80016d6:	c313      	stmia	r3!, {r0, r1, r4}
 80016d8:	ca03      	ldmia	r2!, {r0, r1}
 80016da:	c303      	stmia	r3!, {r0, r1}
 80016dc:	23d2      	movs	r3, #210	; 0xd2
 80016de:	009b      	lsls	r3, r3, #2
 80016e0:	18f9      	adds	r1, r7, r3
 80016e2:	1d3b      	adds	r3, r7, #4
 80016e4:	220b      	movs	r2, #11
 80016e6:	0018      	movs	r0, r3
 80016e8:	f000 fa00 	bl	8001aec <memcpy>
  Classify(values);
 80016ec:	1d3b      	adds	r3, r7, #4
 80016ee:	0018      	movs	r0, r3
 80016f0:	f000 f94e 	bl	8001990 <Classify>
  Delay();
 80016f4:	f000 f930 	bl	8001958 <Delay>


  memcpy(values, (float[]){1,1,26,0,0,0,0,0,0,3,0.044989999999999995},11);//A
 80016f8:	4b8e      	ldr	r3, [pc, #568]	; (8001934 <main+0x748>)
 80016fa:	22a6      	movs	r2, #166	; 0xa6
 80016fc:	00d2      	lsls	r2, r2, #3
 80016fe:	4694      	mov	ip, r2
 8001700:	44bc      	add	ip, r7
 8001702:	4463      	add	r3, ip
 8001704:	4a89      	ldr	r2, [pc, #548]	; (800192c <main+0x740>)
 8001706:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001708:	c313      	stmia	r3!, {r0, r1, r4}
 800170a:	ca13      	ldmia	r2!, {r0, r1, r4}
 800170c:	c313      	stmia	r3!, {r0, r1, r4}
 800170e:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001710:	c313      	stmia	r3!, {r0, r1, r4}
 8001712:	ca03      	ldmia	r2!, {r0, r1}
 8001714:	c303      	stmia	r3!, {r0, r1}
 8001716:	23dd      	movs	r3, #221	; 0xdd
 8001718:	009b      	lsls	r3, r3, #2
 800171a:	18f9      	adds	r1, r7, r3
 800171c:	1d3b      	adds	r3, r7, #4
 800171e:	220b      	movs	r2, #11
 8001720:	0018      	movs	r0, r3
 8001722:	f000 f9e3 	bl	8001aec <memcpy>
   Classify(values);
 8001726:	1d3b      	adds	r3, r7, #4
 8001728:	0018      	movs	r0, r3
 800172a:	f000 f931 	bl	8001990 <Classify>
   Delay();
 800172e:	f000 f913 	bl	8001958 <Delay>




  memcpy(values, (float[]){0.0,0.0,4.0,1.0,0.0,0.0,1.0,22.0,0.0,0.0,0.04189},11);//N
 8001732:	4b81      	ldr	r3, [pc, #516]	; (8001938 <main+0x74c>)
 8001734:	22a6      	movs	r2, #166	; 0xa6
 8001736:	00d2      	lsls	r2, r2, #3
 8001738:	4694      	mov	ip, r2
 800173a:	44bc      	add	ip, r7
 800173c:	4463      	add	r3, ip
 800173e:	4a79      	ldr	r2, [pc, #484]	; (8001924 <main+0x738>)
 8001740:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001742:	c313      	stmia	r3!, {r0, r1, r4}
 8001744:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001746:	c313      	stmia	r3!, {r0, r1, r4}
 8001748:	ca13      	ldmia	r2!, {r0, r1, r4}
 800174a:	c313      	stmia	r3!, {r0, r1, r4}
 800174c:	ca03      	ldmia	r2!, {r0, r1}
 800174e:	c303      	stmia	r3!, {r0, r1}
 8001750:	23e8      	movs	r3, #232	; 0xe8
 8001752:	009b      	lsls	r3, r3, #2
 8001754:	18f9      	adds	r1, r7, r3
 8001756:	1d3b      	adds	r3, r7, #4
 8001758:	220b      	movs	r2, #11
 800175a:	0018      	movs	r0, r3
 800175c:	f000 f9c6 	bl	8001aec <memcpy>
  Classify(values);
 8001760:	1d3b      	adds	r3, r7, #4
 8001762:	0018      	movs	r0, r3
 8001764:	f000 f914 	bl	8001990 <Classify>
  Delay();
 8001768:	f000 f8f6 	bl	8001958 <Delay>


  memcpy(values, (float[]){1,1,26,0,0,0,0,0,0,3,0.044989999999999995},11);//A
 800176c:	4b73      	ldr	r3, [pc, #460]	; (800193c <main+0x750>)
 800176e:	22a6      	movs	r2, #166	; 0xa6
 8001770:	00d2      	lsls	r2, r2, #3
 8001772:	4694      	mov	ip, r2
 8001774:	44bc      	add	ip, r7
 8001776:	4463      	add	r3, ip
 8001778:	4a6c      	ldr	r2, [pc, #432]	; (800192c <main+0x740>)
 800177a:	ca13      	ldmia	r2!, {r0, r1, r4}
 800177c:	c313      	stmia	r3!, {r0, r1, r4}
 800177e:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001780:	c313      	stmia	r3!, {r0, r1, r4}
 8001782:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001784:	c313      	stmia	r3!, {r0, r1, r4}
 8001786:	ca03      	ldmia	r2!, {r0, r1}
 8001788:	c303      	stmia	r3!, {r0, r1}
 800178a:	23f3      	movs	r3, #243	; 0xf3
 800178c:	009b      	lsls	r3, r3, #2
 800178e:	18f9      	adds	r1, r7, r3
 8001790:	1d3b      	adds	r3, r7, #4
 8001792:	220b      	movs	r2, #11
 8001794:	0018      	movs	r0, r3
 8001796:	f000 f9a9 	bl	8001aec <memcpy>
   Classify(values);
 800179a:	1d3b      	adds	r3, r7, #4
 800179c:	0018      	movs	r0, r3
 800179e:	f000 f8f7 	bl	8001990 <Classify>
   Delay();
 80017a2:	f000 f8d9 	bl	8001958 <Delay>




  memcpy(values, (float[]){0.0,0.0,4.0,1.0,0.0,0.0,1.0,22.0,0.0,0.0,0.04189},11);//N
 80017a6:	4b66      	ldr	r3, [pc, #408]	; (8001940 <main+0x754>)
 80017a8:	22a6      	movs	r2, #166	; 0xa6
 80017aa:	00d2      	lsls	r2, r2, #3
 80017ac:	4694      	mov	ip, r2
 80017ae:	44bc      	add	ip, r7
 80017b0:	4463      	add	r3, ip
 80017b2:	4a5c      	ldr	r2, [pc, #368]	; (8001924 <main+0x738>)
 80017b4:	ca13      	ldmia	r2!, {r0, r1, r4}
 80017b6:	c313      	stmia	r3!, {r0, r1, r4}
 80017b8:	ca13      	ldmia	r2!, {r0, r1, r4}
 80017ba:	c313      	stmia	r3!, {r0, r1, r4}
 80017bc:	ca13      	ldmia	r2!, {r0, r1, r4}
 80017be:	c313      	stmia	r3!, {r0, r1, r4}
 80017c0:	ca03      	ldmia	r2!, {r0, r1}
 80017c2:	c303      	stmia	r3!, {r0, r1}
 80017c4:	23fe      	movs	r3, #254	; 0xfe
 80017c6:	009b      	lsls	r3, r3, #2
 80017c8:	18f9      	adds	r1, r7, r3
 80017ca:	1d3b      	adds	r3, r7, #4
 80017cc:	220b      	movs	r2, #11
 80017ce:	0018      	movs	r0, r3
 80017d0:	f000 f98c 	bl	8001aec <memcpy>
  Classify(values);
 80017d4:	1d3b      	adds	r3, r7, #4
 80017d6:	0018      	movs	r0, r3
 80017d8:	f000 f8da 	bl	8001990 <Classify>
  Delay();
 80017dc:	f000 f8bc 	bl	8001958 <Delay>


  memcpy(values, (float[]){1,1,26,0,0,0,0,0,0,3,0.044989999999999995},11);//A
 80017e0:	4b58      	ldr	r3, [pc, #352]	; (8001944 <main+0x758>)
 80017e2:	22a6      	movs	r2, #166	; 0xa6
 80017e4:	00d2      	lsls	r2, r2, #3
 80017e6:	4694      	mov	ip, r2
 80017e8:	44bc      	add	ip, r7
 80017ea:	4463      	add	r3, ip
 80017ec:	4a4f      	ldr	r2, [pc, #316]	; (800192c <main+0x740>)
 80017ee:	ca13      	ldmia	r2!, {r0, r1, r4}
 80017f0:	c313      	stmia	r3!, {r0, r1, r4}
 80017f2:	ca13      	ldmia	r2!, {r0, r1, r4}
 80017f4:	c313      	stmia	r3!, {r0, r1, r4}
 80017f6:	ca13      	ldmia	r2!, {r0, r1, r4}
 80017f8:	c313      	stmia	r3!, {r0, r1, r4}
 80017fa:	ca03      	ldmia	r2!, {r0, r1}
 80017fc:	c303      	stmia	r3!, {r0, r1}
 80017fe:	4b52      	ldr	r3, [pc, #328]	; (8001948 <main+0x75c>)
 8001800:	18f9      	adds	r1, r7, r3
 8001802:	1d3b      	adds	r3, r7, #4
 8001804:	220b      	movs	r2, #11
 8001806:	0018      	movs	r0, r3
 8001808:	f000 f970 	bl	8001aec <memcpy>
   Classify(values);
 800180c:	1d3b      	adds	r3, r7, #4
 800180e:	0018      	movs	r0, r3
 8001810:	f000 f8be 	bl	8001990 <Classify>
   Delay();
 8001814:	f000 f8a0 	bl	8001958 <Delay>




  memcpy(values, (float[]){0.0,0.0,4.0,1.0,0.0,0.0,1.0,22.0,0.0,0.0,0.04189},11);//N
 8001818:	238a      	movs	r3, #138	; 0x8a
 800181a:	00db      	lsls	r3, r3, #3
 800181c:	18fb      	adds	r3, r7, r3
 800181e:	4a41      	ldr	r2, [pc, #260]	; (8001924 <main+0x738>)
 8001820:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001822:	c313      	stmia	r3!, {r0, r1, r4}
 8001824:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001826:	c313      	stmia	r3!, {r0, r1, r4}
 8001828:	ca13      	ldmia	r2!, {r0, r1, r4}
 800182a:	c313      	stmia	r3!, {r0, r1, r4}
 800182c:	ca03      	ldmia	r2!, {r0, r1}
 800182e:	c303      	stmia	r3!, {r0, r1}
 8001830:	238a      	movs	r3, #138	; 0x8a
 8001832:	00db      	lsls	r3, r3, #3
 8001834:	18f9      	adds	r1, r7, r3
 8001836:	1d3b      	adds	r3, r7, #4
 8001838:	220b      	movs	r2, #11
 800183a:	0018      	movs	r0, r3
 800183c:	f000 f956 	bl	8001aec <memcpy>
  Classify(values);
 8001840:	1d3b      	adds	r3, r7, #4
 8001842:	0018      	movs	r0, r3
 8001844:	f000 f8a4 	bl	8001990 <Classify>
  Delay();
 8001848:	f000 f886 	bl	8001958 <Delay>


  memcpy(values, (float[]){1,1,26,0,0,0,0,0,0,3,0.044989999999999995},11);//A
 800184c:	4b3f      	ldr	r3, [pc, #252]	; (800194c <main+0x760>)
 800184e:	18fb      	adds	r3, r7, r3
 8001850:	4a36      	ldr	r2, [pc, #216]	; (800192c <main+0x740>)
 8001852:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001854:	c313      	stmia	r3!, {r0, r1, r4}
 8001856:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001858:	c313      	stmia	r3!, {r0, r1, r4}
 800185a:	ca13      	ldmia	r2!, {r0, r1, r4}
 800185c:	c313      	stmia	r3!, {r0, r1, r4}
 800185e:	ca03      	ldmia	r2!, {r0, r1}
 8001860:	c303      	stmia	r3!, {r0, r1}
 8001862:	4b3a      	ldr	r3, [pc, #232]	; (800194c <main+0x760>)
 8001864:	18f9      	adds	r1, r7, r3
 8001866:	1d3b      	adds	r3, r7, #4
 8001868:	220b      	movs	r2, #11
 800186a:	0018      	movs	r0, r3
 800186c:	f000 f93e 	bl	8001aec <memcpy>
   Classify(values);
 8001870:	1d3b      	adds	r3, r7, #4
 8001872:	0018      	movs	r0, r3
 8001874:	f000 f88c 	bl	8001990 <Classify>
   Delay();
 8001878:	f000 f86e 	bl	8001958 <Delay>




  memcpy(values, (float[]){0.0,0.0,4.0,1.0,0.0,0.0,1.0,22.0,0.0,0.0,0.04189},11);//N
 800187c:	2395      	movs	r3, #149	; 0x95
 800187e:	00db      	lsls	r3, r3, #3
 8001880:	18fb      	adds	r3, r7, r3
 8001882:	4a28      	ldr	r2, [pc, #160]	; (8001924 <main+0x738>)
 8001884:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001886:	c313      	stmia	r3!, {r0, r1, r4}
 8001888:	ca13      	ldmia	r2!, {r0, r1, r4}
 800188a:	c313      	stmia	r3!, {r0, r1, r4}
 800188c:	ca13      	ldmia	r2!, {r0, r1, r4}
 800188e:	c313      	stmia	r3!, {r0, r1, r4}
 8001890:	ca03      	ldmia	r2!, {r0, r1}
 8001892:	c303      	stmia	r3!, {r0, r1}
 8001894:	2395      	movs	r3, #149	; 0x95
 8001896:	00db      	lsls	r3, r3, #3
 8001898:	18f9      	adds	r1, r7, r3
 800189a:	1d3b      	adds	r3, r7, #4
 800189c:	220b      	movs	r2, #11
 800189e:	0018      	movs	r0, r3
 80018a0:	f000 f924 	bl	8001aec <memcpy>
  Classify(values);
 80018a4:	1d3b      	adds	r3, r7, #4
 80018a6:	0018      	movs	r0, r3
 80018a8:	f000 f872 	bl	8001990 <Classify>
  Delay();
 80018ac:	f000 f854 	bl	8001958 <Delay>


  memcpy(values, (float[]){1,1,26,0,0,0,0,0,0,3,0.044989999999999995},11);//A
 80018b0:	4b27      	ldr	r3, [pc, #156]	; (8001950 <main+0x764>)
 80018b2:	18fb      	adds	r3, r7, r3
 80018b4:	4a1d      	ldr	r2, [pc, #116]	; (800192c <main+0x740>)
 80018b6:	ca13      	ldmia	r2!, {r0, r1, r4}
 80018b8:	c313      	stmia	r3!, {r0, r1, r4}
 80018ba:	ca13      	ldmia	r2!, {r0, r1, r4}
 80018bc:	c313      	stmia	r3!, {r0, r1, r4}
 80018be:	ca13      	ldmia	r2!, {r0, r1, r4}
 80018c0:	c313      	stmia	r3!, {r0, r1, r4}
 80018c2:	ca03      	ldmia	r2!, {r0, r1}
 80018c4:	c303      	stmia	r3!, {r0, r1}
 80018c6:	4b22      	ldr	r3, [pc, #136]	; (8001950 <main+0x764>)
 80018c8:	18f9      	adds	r1, r7, r3
 80018ca:	1d3b      	adds	r3, r7, #4
 80018cc:	220b      	movs	r2, #11
 80018ce:	0018      	movs	r0, r3
 80018d0:	f000 f90c 	bl	8001aec <memcpy>
   Classify(values);
 80018d4:	1d3b      	adds	r3, r7, #4
 80018d6:	0018      	movs	r0, r3
 80018d8:	f000 f85a 	bl	8001990 <Classify>
   Delay();
 80018dc:	f000 f83c 	bl	8001958 <Delay>




  memcpy(values, (float[]){0.0,0.0,4.0,1.0,0.0,0.0,1.0,22.0,0.0,0.0,0.04189},11);//N
 80018e0:	23a0      	movs	r3, #160	; 0xa0
 80018e2:	00db      	lsls	r3, r3, #3
 80018e4:	18fb      	adds	r3, r7, r3
 80018e6:	4a0f      	ldr	r2, [pc, #60]	; (8001924 <main+0x738>)
 80018e8:	ca13      	ldmia	r2!, {r0, r1, r4}
 80018ea:	c313      	stmia	r3!, {r0, r1, r4}
 80018ec:	ca13      	ldmia	r2!, {r0, r1, r4}
 80018ee:	c313      	stmia	r3!, {r0, r1, r4}
 80018f0:	ca13      	ldmia	r2!, {r0, r1, r4}
 80018f2:	c313      	stmia	r3!, {r0, r1, r4}
 80018f4:	ca03      	ldmia	r2!, {r0, r1}
 80018f6:	c303      	stmia	r3!, {r0, r1}
 80018f8:	23a0      	movs	r3, #160	; 0xa0
 80018fa:	00db      	lsls	r3, r3, #3
 80018fc:	18f9      	adds	r1, r7, r3
 80018fe:	1d3b      	adds	r3, r7, #4
 8001900:	220b      	movs	r2, #11
 8001902:	0018      	movs	r0, r3
 8001904:	f000 f8f2 	bl	8001aec <memcpy>
  Classify(values);
 8001908:	1d3b      	adds	r3, r7, #4
 800190a:	0018      	movs	r0, r3
 800190c:	f000 f840 	bl	8001990 <Classify>
  Delay();
 8001910:	f000 f822 	bl	8001958 <Delay>


  /* Infinite loop */
  while (1)
  {
	i++;
 8001914:	4b0f      	ldr	r3, [pc, #60]	; (8001954 <main+0x768>)
 8001916:	18fb      	adds	r3, r7, r3
 8001918:	681b      	ldr	r3, [r3, #0]
 800191a:	3301      	adds	r3, #1
 800191c:	4a0d      	ldr	r2, [pc, #52]	; (8001954 <main+0x768>)
 800191e:	18ba      	adds	r2, r7, r2
 8001920:	6013      	str	r3, [r2, #0]
 8001922:	e7f7      	b.n	8001914 <main+0x728>
 8001924:	08001be8 	.word	0x08001be8
 8001928:	fffffdec 	.word	0xfffffdec
 800192c:	08001b64 	.word	0x08001b64
 8001930:	fffffe18 	.word	0xfffffe18
 8001934:	fffffe44 	.word	0xfffffe44
 8001938:	fffffe70 	.word	0xfffffe70
 800193c:	fffffe9c 	.word	0xfffffe9c
 8001940:	fffffec8 	.word	0xfffffec8
 8001944:	fffffef4 	.word	0xfffffef4
 8001948:	00000424 	.word	0x00000424
 800194c:	0000047c 	.word	0x0000047c
 8001950:	000004d4 	.word	0x000004d4
 8001954:	0000052c 	.word	0x0000052c

08001958 <Delay>:
  }
}

void Delay(void)
 {
 8001958:	b580      	push	{r7, lr}
 800195a:	b082      	sub	sp, #8
 800195c:	af00      	add	r7, sp, #0
 int i,j;
 for (i=0;i<=DELAY1;i++)
 800195e:	2300      	movs	r3, #0
 8001960:	607b      	str	r3, [r7, #4]
 8001962:	e00c      	b.n	800197e <Delay+0x26>
	for(j=0;j<=DELAY2;j++);
 8001964:	2300      	movs	r3, #0
 8001966:	603b      	str	r3, [r7, #0]
 8001968:	e002      	b.n	8001970 <Delay+0x18>
 800196a:	683b      	ldr	r3, [r7, #0]
 800196c:	3301      	adds	r3, #1
 800196e:	603b      	str	r3, [r7, #0]
 8001970:	683b      	ldr	r3, [r7, #0]
 8001972:	4a06      	ldr	r2, [pc, #24]	; (800198c <Delay+0x34>)
 8001974:	4293      	cmp	r3, r2
 8001976:	ddf8      	ble.n	800196a <Delay+0x12>
 for (i=0;i<=DELAY1;i++)
 8001978:	687b      	ldr	r3, [r7, #4]
 800197a:	3301      	adds	r3, #1
 800197c:	607b      	str	r3, [r7, #4]
 800197e:	687b      	ldr	r3, [r7, #4]
 8001980:	2bff      	cmp	r3, #255	; 0xff
 8001982:	ddef      	ble.n	8001964 <Delay+0xc>
 }
 8001984:	46c0      	nop			; (mov r8, r8)
 8001986:	46bd      	mov	sp, r7
 8001988:	b002      	add	sp, #8
 800198a:	bd80      	pop	{r7, pc}
 800198c:	00001987 	.word	0x00001987

08001990 <Classify>:

void Classify(float values[11]){
 8001990:	b580      	push	{r7, lr}
 8001992:	b084      	sub	sp, #16
 8001994:	af00      	add	r7, sp, #0
 8001996:	6078      	str	r0, [r7, #4]
	const int predicted_class = sonar_predict(values, length); // 0=A 1=N
 8001998:	220b      	movs	r2, #11
 800199a:	687b      	ldr	r3, [r7, #4]
 800199c:	0011      	movs	r1, r2
 800199e:	0018      	movs	r0, r3
 80019a0:	f7ff fbde 	bl	8001160 <sonar_predict>
 80019a4:	0003      	movs	r3, r0
 80019a6:	60fb      	str	r3, [r7, #12]

	  if (predicted_class==1){
 80019a8:	68fb      	ldr	r3, [r7, #12]
 80019aa:	2b01      	cmp	r3, #1
 80019ac:	d103      	bne.n	80019b6 <Classify+0x26>
		  //turn on LED1

		  GPIOB->ODR =0b0000000000000001;
 80019ae:	4b05      	ldr	r3, [pc, #20]	; (80019c4 <Classify+0x34>)
 80019b0:	2201      	movs	r2, #1
 80019b2:	615a      	str	r2, [r3, #20]

	  }
	  else{
		  GPIOB->ODR =0b0000000000000010;
	  }
}
 80019b4:	e002      	b.n	80019bc <Classify+0x2c>
		  GPIOB->ODR =0b0000000000000010;
 80019b6:	4b03      	ldr	r3, [pc, #12]	; (80019c4 <Classify+0x34>)
 80019b8:	2202      	movs	r2, #2
 80019ba:	615a      	str	r2, [r3, #20]
}
 80019bc:	46c0      	nop			; (mov r8, r8)
 80019be:	46bd      	mov	sp, r7
 80019c0:	b004      	add	sp, #16
 80019c2:	bd80      	pop	{r7, pc}
 80019c4:	48000400 	.word	0x48000400

080019c8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80019c8:	480d      	ldr	r0, [pc, #52]	; (8001a00 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80019ca:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
 80019cc:	2100      	movs	r1, #0
  b LoopCopyDataInit
 80019ce:	e003      	b.n	80019d8 <LoopCopyDataInit>

080019d0 <CopyDataInit>:

CopyDataInit:
  ldr r3, =_sidata
 80019d0:	4b0c      	ldr	r3, [pc, #48]	; (8001a04 <LoopForever+0x6>)
  ldr r3, [r3, r1]
 80019d2:	585b      	ldr	r3, [r3, r1]
  str r3, [r0, r1]
 80019d4:	5043      	str	r3, [r0, r1]
  adds r1, r1, #4
 80019d6:	3104      	adds	r1, #4

080019d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr r0, =_sdata
 80019d8:	480b      	ldr	r0, [pc, #44]	; (8001a08 <LoopForever+0xa>)
  ldr r3, =_edata
 80019da:	4b0c      	ldr	r3, [pc, #48]	; (8001a0c <LoopForever+0xe>)
  adds r2, r0, r1
 80019dc:	1842      	adds	r2, r0, r1
  cmp r2, r3
 80019de:	429a      	cmp	r2, r3
  bcc CopyDataInit
 80019e0:	d3f6      	bcc.n	80019d0 <CopyDataInit>
  ldr r2, =_sbss
 80019e2:	4a0b      	ldr	r2, [pc, #44]	; (8001a10 <LoopForever+0x12>)
  b LoopFillZerobss
 80019e4:	e002      	b.n	80019ec <LoopFillZerobss>

080019e6 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs r3, #0
 80019e6:	2300      	movs	r3, #0
  str  r3, [r2]
 80019e8:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80019ea:	3204      	adds	r2, #4

080019ec <LoopFillZerobss>:


LoopFillZerobss:
  ldr r3, = _ebss
 80019ec:	4b09      	ldr	r3, [pc, #36]	; (8001a14 <LoopForever+0x16>)
  cmp r2, r3
 80019ee:	429a      	cmp	r2, r3
  bcc FillZerobss
 80019f0:	d3f9      	bcc.n	80019e6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80019f2:	f000 f813 	bl	8001a1c <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 80019f6:	f000 f855 	bl	8001aa4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80019fa:	f7ff fbf7 	bl	80011ec <main>

080019fe <LoopForever>:

LoopForever:
    b LoopForever
 80019fe:	e7fe      	b.n	80019fe <LoopForever>
  ldr   r0, =_estack
 8001a00:	20002000 	.word	0x20002000
  ldr r3, =_sidata
 8001a04:	08001c1c 	.word	0x08001c1c
  ldr r0, =_sdata
 8001a08:	20000000 	.word	0x20000000
  ldr r3, =_edata
 8001a0c:	20000000 	.word	0x20000000
  ldr r2, =_sbss
 8001a10:	20000000 	.word	0x20000000
  ldr r3, = _ebss
 8001a14:	2000001c 	.word	0x2000001c

08001a18 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001a18:	e7fe      	b.n	8001a18 <ADC1_COMP_IRQHandler>
	...

08001a1c <SystemInit>:
  *         Initialize the default HSI clock source, vector table location and the PLL configuration is reset.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001a1c:	b580      	push	{r7, lr}
 8001a1e:	af00      	add	r7, sp, #0
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001U;
 8001a20:	4b1a      	ldr	r3, [pc, #104]	; (8001a8c <SystemInit+0x70>)
 8001a22:	4a1a      	ldr	r2, [pc, #104]	; (8001a8c <SystemInit+0x70>)
 8001a24:	6812      	ldr	r2, [r2, #0]
 8001a26:	2101      	movs	r1, #1
 8001a28:	430a      	orrs	r2, r1
 8001a2a:	601a      	str	r2, [r3, #0]

#if defined (STM32F051x8) || defined (STM32F058x8)
  /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE and MCOSEL[2:0] bits */
  RCC->CFGR &= (uint32_t)0xF8FFB80CU;
 8001a2c:	4b17      	ldr	r3, [pc, #92]	; (8001a8c <SystemInit+0x70>)
 8001a2e:	4a17      	ldr	r2, [pc, #92]	; (8001a8c <SystemInit+0x70>)
 8001a30:	6852      	ldr	r2, [r2, #4]
 8001a32:	4917      	ldr	r1, [pc, #92]	; (8001a90 <SystemInit+0x74>)
 8001a34:	400a      	ands	r2, r1
 8001a36:	605a      	str	r2, [r3, #4]
  /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE, MCOSEL[2:0], MCOPRE[2:0] and PLLNODIV bits */
  RCC->CFGR &= (uint32_t)0x08FFB80CU;
#endif /* STM32F051x8 or STM32F058x8 */
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFFU;
 8001a38:	4b14      	ldr	r3, [pc, #80]	; (8001a8c <SystemInit+0x70>)
 8001a3a:	4a14      	ldr	r2, [pc, #80]	; (8001a8c <SystemInit+0x70>)
 8001a3c:	6812      	ldr	r2, [r2, #0]
 8001a3e:	4915      	ldr	r1, [pc, #84]	; (8001a94 <SystemInit+0x78>)
 8001a40:	400a      	ands	r2, r1
 8001a42:	601a      	str	r2, [r3, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFFU;
 8001a44:	4b11      	ldr	r3, [pc, #68]	; (8001a8c <SystemInit+0x70>)
 8001a46:	4a11      	ldr	r2, [pc, #68]	; (8001a8c <SystemInit+0x70>)
 8001a48:	6812      	ldr	r2, [r2, #0]
 8001a4a:	4913      	ldr	r1, [pc, #76]	; (8001a98 <SystemInit+0x7c>)
 8001a4c:	400a      	ands	r2, r1
 8001a4e:	601a      	str	r2, [r3, #0]

  /* Reset PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
  RCC->CFGR &= (uint32_t)0xFFC0FFFFU;
 8001a50:	4b0e      	ldr	r3, [pc, #56]	; (8001a8c <SystemInit+0x70>)
 8001a52:	4a0e      	ldr	r2, [pc, #56]	; (8001a8c <SystemInit+0x70>)
 8001a54:	6852      	ldr	r2, [r2, #4]
 8001a56:	4911      	ldr	r1, [pc, #68]	; (8001a9c <SystemInit+0x80>)
 8001a58:	400a      	ands	r2, r1
 8001a5a:	605a      	str	r2, [r3, #4]

  /* Reset PREDIV[3:0] bits */
  RCC->CFGR2 &= (uint32_t)0xFFFFFFF0U;
 8001a5c:	4b0b      	ldr	r3, [pc, #44]	; (8001a8c <SystemInit+0x70>)
 8001a5e:	4a0b      	ldr	r2, [pc, #44]	; (8001a8c <SystemInit+0x70>)
 8001a60:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8001a62:	210f      	movs	r1, #15
 8001a64:	438a      	bics	r2, r1
 8001a66:	62da      	str	r2, [r3, #44]	; 0x2c
#elif defined (STM32F030x6) || defined (STM32F030x8) || defined (STM32F031x6) || defined (STM32F038xx) || defined (STM32F030xC)
  /* Reset USART1SW[1:0], I2C1SW and ADCSW bits */
  RCC->CFGR3 &= (uint32_t)0xFFFFFEECU;
#elif defined (STM32F051x8) || defined (STM32F058xx)
  /* Reset USART1SW[1:0], I2C1SW, CECSW and ADCSW bits */
  RCC->CFGR3 &= (uint32_t)0xFFFFFEACU;
 8001a68:	4b08      	ldr	r3, [pc, #32]	; (8001a8c <SystemInit+0x70>)
 8001a6a:	4a08      	ldr	r2, [pc, #32]	; (8001a8c <SystemInit+0x70>)
 8001a6c:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8001a6e:	490c      	ldr	r1, [pc, #48]	; (8001aa0 <SystemInit+0x84>)
 8001a70:	400a      	ands	r2, r1
 8001a72:	631a      	str	r2, [r3, #48]	; 0x30
#else
 #warning "No target selected"
#endif

  /* Reset HSI14 bit */
  RCC->CR2 &= (uint32_t)0xFFFFFFFEU;
 8001a74:	4b05      	ldr	r3, [pc, #20]	; (8001a8c <SystemInit+0x70>)
 8001a76:	4a05      	ldr	r2, [pc, #20]	; (8001a8c <SystemInit+0x70>)
 8001a78:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8001a7a:	2101      	movs	r1, #1
 8001a7c:	438a      	bics	r2, r1
 8001a7e:	635a      	str	r2, [r3, #52]	; 0x34

  /* Disable all interrupts */
  RCC->CIR = 0x00000000U;
 8001a80:	4b02      	ldr	r3, [pc, #8]	; (8001a8c <SystemInit+0x70>)
 8001a82:	2200      	movs	r2, #0
 8001a84:	609a      	str	r2, [r3, #8]

}
 8001a86:	46c0      	nop			; (mov r8, r8)
 8001a88:	46bd      	mov	sp, r7
 8001a8a:	bd80      	pop	{r7, pc}
 8001a8c:	40021000 	.word	0x40021000
 8001a90:	f8ffb80c 	.word	0xf8ffb80c
 8001a94:	fef6ffff 	.word	0xfef6ffff
 8001a98:	fffbffff 	.word	0xfffbffff
 8001a9c:	ffc0ffff 	.word	0xffc0ffff
 8001aa0:	fffffeac 	.word	0xfffffeac

08001aa4 <__libc_init_array>:
 8001aa4:	b570      	push	{r4, r5, r6, lr}
 8001aa6:	2600      	movs	r6, #0
 8001aa8:	4d0c      	ldr	r5, [pc, #48]	; (8001adc <__libc_init_array+0x38>)
 8001aaa:	4c0d      	ldr	r4, [pc, #52]	; (8001ae0 <__libc_init_array+0x3c>)
 8001aac:	1b64      	subs	r4, r4, r5
 8001aae:	10a4      	asrs	r4, r4, #2
 8001ab0:	42a6      	cmp	r6, r4
 8001ab2:	d109      	bne.n	8001ac8 <__libc_init_array+0x24>
 8001ab4:	2600      	movs	r6, #0
 8001ab6:	f000 f82b 	bl	8001b10 <_init>
 8001aba:	4d0a      	ldr	r5, [pc, #40]	; (8001ae4 <__libc_init_array+0x40>)
 8001abc:	4c0a      	ldr	r4, [pc, #40]	; (8001ae8 <__libc_init_array+0x44>)
 8001abe:	1b64      	subs	r4, r4, r5
 8001ac0:	10a4      	asrs	r4, r4, #2
 8001ac2:	42a6      	cmp	r6, r4
 8001ac4:	d105      	bne.n	8001ad2 <__libc_init_array+0x2e>
 8001ac6:	bd70      	pop	{r4, r5, r6, pc}
 8001ac8:	00b3      	lsls	r3, r6, #2
 8001aca:	58eb      	ldr	r3, [r5, r3]
 8001acc:	4798      	blx	r3
 8001ace:	3601      	adds	r6, #1
 8001ad0:	e7ee      	b.n	8001ab0 <__libc_init_array+0xc>
 8001ad2:	00b3      	lsls	r3, r6, #2
 8001ad4:	58eb      	ldr	r3, [r5, r3]
 8001ad6:	4798      	blx	r3
 8001ad8:	3601      	adds	r6, #1
 8001ada:	e7f2      	b.n	8001ac2 <__libc_init_array+0x1e>
 8001adc:	08001c14 	.word	0x08001c14
 8001ae0:	08001c14 	.word	0x08001c14
 8001ae4:	08001c14 	.word	0x08001c14
 8001ae8:	08001c18 	.word	0x08001c18

08001aec <memcpy>:
 8001aec:	2300      	movs	r3, #0
 8001aee:	b510      	push	{r4, lr}
 8001af0:	429a      	cmp	r2, r3
 8001af2:	d100      	bne.n	8001af6 <memcpy+0xa>
 8001af4:	bd10      	pop	{r4, pc}
 8001af6:	5ccc      	ldrb	r4, [r1, r3]
 8001af8:	54c4      	strb	r4, [r0, r3]
 8001afa:	3301      	adds	r3, #1
 8001afc:	e7f8      	b.n	8001af0 <memcpy+0x4>

08001afe <memset>:
 8001afe:	0003      	movs	r3, r0
 8001b00:	1882      	adds	r2, r0, r2
 8001b02:	4293      	cmp	r3, r2
 8001b04:	d100      	bne.n	8001b08 <memset+0xa>
 8001b06:	4770      	bx	lr
 8001b08:	7019      	strb	r1, [r3, #0]
 8001b0a:	3301      	adds	r3, #1
 8001b0c:	e7f9      	b.n	8001b02 <memset+0x4>
	...

08001b10 <_init>:
 8001b10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001b12:	46c0      	nop			; (mov r8, r8)
 8001b14:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001b16:	bc08      	pop	{r3}
 8001b18:	469e      	mov	lr, r3
 8001b1a:	4770      	bx	lr

08001b1c <_fini>:
 8001b1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001b1e:	46c0      	nop			; (mov r8, r8)
 8001b20:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001b22:	bc08      	pop	{r3}
 8001b24:	469e      	mov	lr, r3
 8001b26:	4770      	bx	lr
